{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"skele",
				"skeleton_tracing"
			],
			[
				"pixel_n",
				"pixel_neighborhood"
			],
			[
				"JSCon",
				"JSContoursData"
			],
			[
				"JS_Get",
				"JS_GetPropertyStr"
			],
			[
				"js_is_",
				"js_is_array_like"
			],
			[
				"JS_Throw",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_contour",
				"js_contour_data2"
			],
			[
				"left",
				"leftToRight"
			],
			[
				"POINT_",
				"POINT_ARITH_SUM"
			],
			[
				"JS_Th",
				"JS_ThrowInternalError"
			],
			[
				"js_",
				"js_contour_data2"
			],
			[
				"cont",
				"contour_proto"
			],
			[
				"js_contour_",
				"js_contour_class_id"
			],
			[
				"js_contou",
				"js_contour_data"
			],
			[
				"JSI",
				"JSInputOutputArray"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"JS_T",
				"JS_ToFloat64"
			],
			[
				"TYP",
				"TYPEDARRAY_SIGNED"
			],
			[
				"is_",
				"is_floating_point"
			],
			[
				"ostr",
				"ostringstream"
			],
			[
				"JS_GET",
				"JS_GetPropertyStr"
			],
			[
				"TypedA",
				"TypedArrayProps"
			],
			[
				"rotae",
				"rotated_rect_proto"
			],
			[
				"conve",
				"convexityDefects"
			],
			[
				"VIE",
				"VIDEO_CAPTURE_METHOD_GET_BACKEND_NAME"
			],
			[
				"VIDE",
				"VIDEO_CAPTURE_METHOD_READ"
			],
			[
				"VIDEO",
				"VIDEO_CAPTURE_METHOD_OPEN"
			],
			[
				"VID",
				"VIDEO_CAPTURE_METHOD_GET_BACKEND_NAME"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"ROTA",
				"ROTATED_RECT_METHOD_BOUNDING_RECT"
			],
			[
				"ROT",
				"ROTATED_RECT_METHOD_BOUNDING_RECT"
			],
			[
				"ROTATE",
				"ROTATED_RECT_PROP_CENTER"
			],
			[
				"js_rota",
				"js_rotated_rect_init"
			],
			[
				"js_rotate",
				"js_rotated_rect_init"
			],
			[
				"BORDER",
				"BORDER_CONSTANT"
			],
			[
				"BOR",
				"BORDER_DEFAULT"
			],
			[
				"BO",
				"BORDER_CONSTANT"
			],
			[
				"in",
				"interpolation"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"weight",
				"weights1"
			],
			[
				"thres",
				"thresholdType"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"OTHER_SOLV",
				"OTHER_SOLVE_CUBIC"
			],
			[
				"ny",
				"normType"
			],
			[
				"angle",
				"angleInDegrees"
			],
			[
				"mask",
				"ACCESS_MASK"
			],
			[
				"i",
				"if"
			],
			[
				"OTHER_MIN",
				"OTHER_MIN_MAX_LOC"
			],
			[
				"JS_Set",
				"JS_SetPropertyFunctionList"
			],
			[
				"dista",
				"distance_threshold"
			],
			[
				"len",
				"length_threshold"
			],
			[
				"js_line",
				"js_line_segment_detector_export"
			],
			[
				"bytes_",
				"bytes_per_element"
			],
			[
				"QUICKJS_MO",
				"QUICKJS_MODULE_CFLAGS"
			],
			[
				"check_cxx",
				"check_cxx_standard_flag"
			],
			[
				"check_func",
				"check_function_exists"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"cons",
				"console"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  cv\n  constructor()\n  blur()\n  boundingRect()\nGaussianBlur()\nHoughLines()\nHoughLinesP()\nHoughCircles()\nCanny()\n  goodFeaturesToTrack()\n  cvtColor()\n  equalizeHist()\n  threshold()\n  bilateralFilter()\n  findContours()\n  drawContours()\n  pointPolygonTest()\n  cornerHarris()\n  calcHist()\n  dilate()\n  erode()\n  morphologyEx()\n  medianBlur()\n  skeletonization()\n  pixelNeighborhood()\n  pixelNeighborhoodCross()\n  pixelFindValue()\n  paletteGenerate()\n  paletteApply()\n  paletteMatch()\n  accumulate()\n  accumulateProduct()\n  accumulateSquare()\n  accumulateWeighted()\n  createHanningWindow()\n  phaseCorrelate()\n  adaptiveThreshold()\n  blendLinear()\n  distanceTransform()\n  floodFill()\n  grabCut()\n  integral()\n  watershed()\n  applyColorMap()\n  moments()\n  convertMaps()\n  getAffineTransform()\n  getPerspectiveTransform()\n  getRectSubPix()\n  getRotationMatrix2D()\n  getRotationMatrix2D_()\n  invertAffineTransform()\n  linearPolar()\n  logPolar()\n  remap()\n  resize()\n  warpAffine()\n  warpPerspective()\n  warpPolar()\n  bilateralFilter()\n  blur()\n  boxFilter()\n  buildPyramid()\n  dilate()\n  erode()\n  filter2D()\nGaussianBlur()\n  getDerivKernels()\n  getGaborKernel()\n  getGaussianKernel()\n  getStructuringElement()\nLaplacian()\n  medianBlur()\n  morphologyDefaultBorderValue()\n  morphologyEx()\n  pyrDown()\n  pyrMeanShiftFiltering()\n  pyrUp()\nScharr()\n  sepFilter2D()\nSobel()\n  spatialGradient()\n  sqrBoxFilter()\n  approxPolyDP()\n  arcLength()\n  boxPoints()\n  connectedComponents()\n  connectedComponentsWithStats()\n  contourArea()\n  convexHull()\n  convexityDefects()\n  createGeneralizedHoughBallard()\n  createGeneralizedHoughGuil()\n  fitEllipse()\n  fitEllipseAMS()\n  fitEllipseDirect()\n  fitLine()\nHuMoments()\n  intersectConvexConvex()\n  isContourConvex()\n  matchShapes()\n  minAreaRect()\n  minEnclosingCircle()\n  minEnclosingTriangle()\n  rotatedRectangleIntersection()",
			"settings":
			{
				"buffer_size": 1852,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					75,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/slice_iterator.js",
						"symkeys":
						[
							[
								38,
								51
							],
							[
								101,
								114
							],
							[
								177,
								187
							]
						],
						"symlist":
						[
							"SliceIterator",
							"constructor()",
							"get next()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAU3ViZGl2MkQKICBjb25zdHJ1Y3RvcigpCiAgZWRnZURzdCgpCiAgZWRnZU9yZygpCiAgZmluZE5lYXJlc3QoKQogIGdldEVkZ2UoKQogIGdldEVkZ2VMaXN0KCkKICBnZXRMZWFkaW5nRWRnZUxpc3QoKQogIGdldFRyaWFuZ2xlTGlzdCgpCiAgZ2V0VmVydGV4KCkKICBnZXRWb3Jvbm9pRmFjZXRMaXN0KCkKICBpbml0RGVsYXVuYXkoKQogIGluc2VydCgpCiAgbG9jYXRlKCkKICBuZXh0RWRnZSgpCiAgcm90YXRlRWRnZSgpCiAgc3ltRWRnZSgpAAAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					76,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/umat.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								136,
								146
							],
							[
								199,
								213
							],
							[
								262,
								272
							],
							[
								322,
								333
							],
							[
								383,
								394
							],
							[
								444,
								455
							],
							[
								504,
								514
							],
							[
								569,
								585
							],
							[
								639,
								654
							],
							[
								703,
								713
							],
							[
								766,
								780
							],
							[
								834,
								849
							],
							[
								900,
								912
							],
							[
								962,
								973
							],
							[
								1063,
								1068
							],
							[
								1158,
								1163
							],
							[
								1258,
								1268
							],
							[
								1363,
								1373
							],
							[
								1465,
								1472
							],
							[
								1562,
								1567
							],
							[
								1661,
								1670
							],
							[
								1760,
								1765
							],
							[
								1857,
								1864
							],
							[
								1956,
								1963
							],
							[
								2055,
								2062
							],
							[
								2158,
								2169
							],
							[
								2260,
								2266
							],
							[
								2356,
								2361
							],
							[
								2456,
								2466
							],
							[
								2560,
								2569
							],
							[
								2658,
								2662
							],
							[
								2752,
								2757
							],
							[
								2849,
								2856
							],
							[
								2952,
								2963
							],
							[
								3056,
								3064
							],
							[
								3158,
								3167
							],
							[
								3260,
								3268
							],
							[
								3546,
								3560
							],
							[
								3641,
								3654
							]
						],
						"symlist":
						[
							"UMat",
							"constructor()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"step1()",
							"locateROI()",
							"zero()",
							"one()",
							"toString()",
							"inspect()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getMat()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAU2xpY2VJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgbmV4dCgpAAAAAAAAAAD4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					77,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/video_capture.js",
						"symkeys":
						[
							[
								37,
								49
							],
							[
								98,
								111
							],
							[
								209,
								214
							],
							[
								312,
								317
							],
							[
								426,
								442
							],
							[
								541,
								547
							],
							[
								650,
								660
							],
							[
								759,
								765
							],
							[
								864,
								870
							],
							[
								973,
								983
							]
						],
						"symlist":
						[
							"VideoCapture",
							"constructor()",
							"get()",
							"set()",
							"getBackendName()",
							"grab()",
							"isOpened()",
							"open()",
							"read()",
							"retrieve()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AQAAVU1hdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgcm93cygpCiAgZ2V0IGNoYW5uZWxzKCkKICBnZXQgdHlwZSgpCiAgZ2V0IGRlcHRoKCkKICBnZXQgZW1wdHkoKQogIGdldCB0b3RhbCgpCiAgZ2V0IHNpemUoKQogIGdldCBjb250aW51b3VzKCkKICBnZXQgc3VibWF0cml4KCkKICBnZXQgc3RlcCgpCiAgZ2V0IGVsZW1TaXplKCkKICBnZXQgZWxlbVNpemUxKCkKICBnZXQgYnVmZmVyKCkKICBnZXQgYXJyYXkoKQogIGNvbCgpCiAgcm93KCkKICBjb2xSYW5nZSgpCiAgcm93UmFuZ2UoKQogIGNsb25lKCkKICByb2koKQogIHJlbGVhc2UoKQogIGR1cCgpCiAgY2xlYXIoKQogIHJlc2V0KCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBpbnNwZWN0KCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldE1hdCgpCiAgc3RhdGljIHplcm9zKCkKICBzdGF0aWMgb25lcygpAAAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/video_writer.js",
						"symkeys":
						[
							[
								36,
								47
							],
							[
								95,
								108
							],
							[
								205,
								210
							],
							[
								307,
								312
							],
							[
								420,
								436
							],
							[
								538,
								548
							],
							[
								646,
								652
							],
							[
								751,
								758
							],
							[
								963,
								978
							]
						],
						"symlist":
						[
							"VideoWriter",
							"constructor()",
							"get()",
							"set()",
							"getBackendName()",
							"isOpened()",
							"open()",
							"write()",
							"static fourcc()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAVmlkZW9DYXB0dXJlCiAgY29uc3RydWN0b3IoKQogIGdldCgpCiAgc2V0KCkKICBnZXRCYWNrZW5kTmFtZSgpCiAgZ3JhYigpCiAgaXNPcGVuZWQoKQogIG9wZW4oKQogIHJlYWQoKQogIHJldHJpZXZlKCkAAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					79,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
						"symkeys":
						[
							[
								92,
								104
							],
							[
								117,
								131
							],
							[
								183,
								199
							],
							[
								399,
								419
							],
							[
								422,
								446
							],
							[
								521,
								537
							],
							[
								624,
								633
							],
							[
								778,
								802
							],
							[
								837,
								861
							],
							[
								897,
								921
							],
							[
								959,
								983
							],
							[
								1020,
								1044
							],
							[
								1080,
								1104
							],
							[
								1143,
								1167
							],
							[
								1290,
								1310
							],
							[
								1645,
								1669
							],
							[
								1879,
								1904
							],
							[
								2028,
								2050
							],
							[
								2087,
								2097
							],
							[
								2100,
								2122
							],
							[
								2225,
								2229
							],
							[
								2367,
								2372
							],
							[
								2649,
								2668
							],
							[
								2672,
								2685
							],
							[
								2712,
								2731
							],
							[
								2735,
								2759
							],
							[
								2811,
								2834
							],
							[
								2838,
								2857
							],
							[
								3011,
								3034
							],
							[
								3713,
								3726
							],
							[
								3782,
								3797
							],
							[
								3886,
								3907
							],
							[
								4159,
								4180
							],
							[
								4315,
								4327
							],
							[
								4370,
								4379
							],
							[
								4635,
								4648
							],
							[
								4652,
								4665
							],
							[
								4681,
								4703
							],
							[
								4707,
								4729
							],
							[
								4784,
								4802
							],
							[
								4826,
								4850
							],
							[
								4867,
								4882
							],
							[
								4911,
								4935
							],
							[
								5171,
								5195
							],
							[
								5541,
								5577
							],
							[
								5581,
								5598
							],
							[
								5641,
								5665
							],
							[
								5697,
								5714
							],
							[
								5793,
								5808
							],
							[
								5812,
								5827
							],
							[
								5845,
								5859
							],
							[
								5863,
								5887
							],
							[
								5997,
								6021
							],
							[
								6063,
								6077
							],
							[
								6182,
								6203
							],
							[
								6207,
								6212
							],
							[
								6280,
								6300
							],
							[
								6425,
								6441
							],
							[
								6445,
								6467
							],
							[
								6515,
								6529
							],
							[
								6533,
								6548
							],
							[
								6552,
								6565
							],
							[
								6571,
								6594
							],
							[
								6598,
								6614
							],
							[
								6730,
								6750
							],
							[
								6758,
								6778
							],
							[
								6946,
								6969
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"DISABLE_WERROR",
							"CMAKE_BUILD_TYPE",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BUILD_TYPE",
							"LIBWS2_32",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"POSITION_INDEPENDENT_CODE",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBPTHREAD",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBM",
							"LIBDL",
							"CMAKE_INSTALL_RPATH",
							"OPENCV_LIBDIR",
							"OPENCV_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_REQUIRED_INCLUDES",
							"OPENCV_INCLUDE_DIRS",
							"OPENCV_FREETYPE_LIBRARY",
							"CMAKE_C_FLAGS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_COMPILER_ID",
							"CMAKE_CXX_COMPILER_ID",
							"DEBUG_OUTPUT",
							"DEBUG_MAT",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"quickjs_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_LIBRARY",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CXX11_EXTENSION_COMPILE_OPTION",
							"CXX_STANDARD_FLAG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BUILD_SHARED_LIBS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_FLAGS",
							"LCCV_LIBRARIES",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"OPENCV_SOURCES",
							"QUICKJS_MODULE_CFLAGS",
							"F_PIC",
							"CMAKE_INSTALL_PREFIX",
							"PNG_INCLUDE_DIRS",
							"LIBCAMERA_INCLUDE_DIRS",
							"LCCV_LIBRARIES",
							"QUICKJS_LIBRARY",
							"PNG_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY",
							"OPENCV_LIBRARIES",
							"QUICKJS_C_MODULE_DIR",
							"jsbindings_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABwAAAAVmlkZW9Xcml0ZXIKICBjb25zdHJ1Y3RvcigpCiAgZ2V0KCkKICBzZXQoKQogIGdldEJhY2tlbmROYW1lKCkKICBpc09wZW5lZCgpCiAgb3BlbigpCiAgd3JpdGUoKQogIHN0YXRpYyBmb3VyY2MoKQAAAAAAAAAAIwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					80,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_video_capture.cpp",
						"symkeys":
						[
							[
								377,
								398
							],
							[
								603,
								613
							],
							[
								744,
								765
							],
							[
								1371,
								1392
							],
							[
								2489,
								2515
							],
							[
								3083,
								3106
							],
							[
								5031,
								5060
							],
							[
								6279,
								6300
							],
							[
								7159,
								7182
							],
							[
								7271,
								7299
							],
							[
								7685,
								7699
							]
						],
						"symlist":
						[
							"js_video_capture_init",
							"is_numeric",
							"js_video_capture_open",
							"js_video_capture_ctor",
							"js_video_capture_finalizer",
							"js_video_capture_method",
							"JSValue\njs_video_capture_wrap",
							"js_video_capture_init",
							"js_video_capture_export",
							"js_video_capture_constructor",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjBQAAUFJPSkVDVF9OQU1FCkRJU0FCTEVfV0VSUk9SCkNNQUtFX0JVSUxEX1RZUEUKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JVSUxEX1RZUEUKTElCV1MyXzMyCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9USFJFQURfTElCU19JTklUCkxJQlBUSFJFQUQKQ01BS0VfVEhSRUFEX0xJQlNfSU5JVApMSUJNCkxJQkRMCkNNQUtFX0lOU1RBTExfUlBBVEgKT1BFTkNWX0xJQkRJUgpPUEVOQ1ZfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9SRVFVSVJFRF9JTkNMVURFUwpPUEVOQ1ZfSU5DTFVERV9ESVJTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCkNNQUtFX0NfRkxBR1MKQ01BS0VfQ1hYX0ZMQUdTCkNNQUtFX0NYWF9DT01QSUxFUl9JRApDTUFLRV9DWFhfQ09NUElMRVJfSUQKREVCVUdfT1VUUFVUCkRFQlVHX01BVApDTUFLRV9DX0ZMQUdTCkNNQUtFX0NfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCiAgcXVpY2tqc19CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DWFgxMV9FWFRFTlNJT05fQ09NUElMRV9PUFRJT04KQ1hYX1NUQU5EQVJEX0ZMQUcKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJVSUxEX1NIQVJFRF9MSUJTCkNNQUtFX0NYWF9GTEFHUwpDTUFLRV9DWFhfRkxBR1MKTENDVl9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpPUEVOQ1ZfU09VUkNFUwpRVUlDS0pTX01PRFVMRV9DRkxBR1MKRl9QSUMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKUE5HX0lOQ0xVREVfRElSUwpMSUJDQU1FUkFfSU5DTFVERV9ESVJTCkxDQ1ZfTElCUkFSSUVTClFVSUNLSlNfTElCUkFSWQpQTkdfTElCUkFSSUVTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCk9QRU5DVl9MSUJSQVJJRVMKUVVJQ0tKU19DX01PRFVMRV9ESVIKICBqc2JpbmRpbmdzX0xJQlJBUklFUwpPUEVOQ1ZfRlJFRVRZUEVfTElCUkFSWQAAAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					81,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_raspi_cam.cpp",
						"symkeys":
						[
							[
								333,
								347
							],
							[
								373,
								390
							],
							[
								580,
								597
							],
							[
								1497,
								1519
							],
							[
								1977,
								1997
							],
							[
								2224,
								2243
							],
							[
								3493,
								3518
							],
							[
								4549,
								4566
							],
							[
								5360,
								5379
							],
							[
								5464,
								5488
							],
							[
								5847,
								5861
							]
						],
						"symlist":
						[
							"JSRaspiCamData",
							"js_raspi_cam_init",
							"js_raspi_cam_ctor",
							"js_raspi_cam_finalizer",
							"js_raspi_cam_options",
							"js_raspi_cam_method",
							"JSValue\njs_raspi_cam_wrap",
							"js_raspi_cam_init",
							"js_raspi_cam_export",
							"js_raspi_cam_constructor",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAJAQAAICBqc192aWRlb19jYXB0dXJlX2luaXQKICBpc19udW1lcmljCiAganNfdmlkZW9fY2FwdHVyZV9vcGVuCiAganNfdmlkZW9fY2FwdHVyZV9jdG9yCiAganNfdmlkZW9fY2FwdHVyZV9maW5hbGl6ZXIKICBqc192aWRlb19jYXB0dXJlX21ldGhvZApKU1ZhbHVlCmpzX3ZpZGVvX2NhcHR1cmVfd3JhcAogIGpzX3ZpZGVvX2NhcHR1cmVfaW5pdAogIGpzX3ZpZGVvX2NhcHR1cmVfZXhwb3J0CiAganNfdmlkZW9fY2FwdHVyZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQAAAAAAAAAA6gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					82,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/imgproc.js",
						"symkeys":
						[
							[
								27,
								29
							],
							[
								68,
								81
							],
							[
								170,
								176
							],
							[
								273,
								287
							],
							[
								384,
								398
							],
							[
								493,
								505
							],
							[
								601,
								614
							],
							[
								711,
								725
							],
							[
								815,
								822
							],
							[
								926,
								947
							],
							[
								1040,
								1050
							],
							[
								1147,
								1161
							],
							[
								1255,
								1266
							],
							[
								1366,
								1383
							],
							[
								1480,
								1494
							],
							[
								1591,
								1605
							],
							[
								1706,
								1724
							],
							[
								1821,
								1835
							],
							[
								1928,
								1938
							],
							[
								2029,
								2037
							],
							[
								2127,
								2134
							],
							[
								2231,
								2245
							],
							[
								2340,
								2352
							],
							[
								2452,
								2469
							],
							[
								2571,
								2590
							],
							[
								2697,
								2721
							],
							[
								2820,
								2836
							],
							[
								2936,
								2953
							],
							[
								3050,
								3064
							],
							[
								3161,
								3175
							],
							[
								3270,
								3282
							],
							[
								3384,
								3403
							],
							[
								3504,
								3522
							],
							[
								3625,
								3645
							],
							[
								3749,
								3770
							],
							[
								3869,
								3885
							],
							[
								3987,
								4006
							],
							[
								4102,
								4115
							],
							[
								4217,
								4236
							],
							[
								4330,
								4341
							],
							[
								4433,
								4442
							],
							[
								4535,
								4545
							],
							[
								4639,
								4650
							],
							[
								4748,
								4763
							],
							[
								4855,
								4864
							],
							[
								4960,
								4973
							],
							[
								5076,
								5096
							],
							[
								5204,
								5229
							],
							[
								5327,
								5342
							],
							[
								5446,
								5467
							],
							[
								5572,
								5594
							],
							[
								5700,
								5723
							],
							[
								5819,
								5832
							],
							[
								5925,
								5935
							],
							[
								6025,
								6032
							],
							[
								6123,
								6131
							],
							[
								6226,
								6238
							],
							[
								6338,
								6355
							],
							[
								6449,
								6460
							],
							[
								6560,
								6577
							],
							[
								6666,
								6672
							],
							[
								6766,
								6777
							],
							[
								6874,
								6888
							],
							[
								6979,
								6987
							],
							[
								7077,
								7084
							],
							[
								7177,
								7187
							],
							[
								7284,
								7298
							],
							[
								7398,
								7415
							],
							[
								7514,
								7530
							],
							[
								7632,
								7651
							],
							[
								7757,
								7780
							],
							[
								7874,
								7885
							],
							[
								7980,
								7992
							],
							[
								8105,
								8135
							],
							[
								8232,
								8246
							],
							[
								8338,
								8347
							],
							[
								8453,
								8476
							],
							[
								8566,
								8573
							],
							[
								8664,
								8672
							],
							[
								8768,
								8781
							],
							[
								8871,
								8878
							],
							[
								8978,
								8995
							],
							[
								9092,
								9106
							],
							[
								9203,
								9217
							],
							[
								9311,
								9322
							],
							[
								9416,
								9427
							],
							[
								9531,
								9552
							],
							[
								9665,
								9695
							],
							[
								9791,
								9804
							],
							[
								9899,
								9911
							],
							[
								10012,
								10030
							],
							[
								10144,
								10175
							],
							[
								10286,
								10314
							],
							[
								10409,
								10421
							],
							[
								10519,
								10534
							],
							[
								10635,
								10653
							],
							[
								10745,
								10754
							],
							[
								10848,
								10859
							],
							[
								10965,
								10988
							],
							[
								11088,
								11105
							],
							[
								11201,
								11214
							],
							[
								11310,
								11323
							],
							[
								11426,
								11446
							],
							[
								11551,
								11573
							],
							[
								11686,
								11716
							]
						],
						"symlist":
						[
							"cv",
							"constructor()",
							"blur()",
							"boundingRect()",
							"GaussianBlur()",
							"HoughLines()",
							"HoughLinesP()",
							"HoughCircles()",
							"Canny()",
							"goodFeaturesToTrack()",
							"cvtColor()",
							"equalizeHist()",
							"threshold()",
							"bilateralFilter()",
							"findContours()",
							"drawContours()",
							"pointPolygonTest()",
							"cornerHarris()",
							"calcHist()",
							"dilate()",
							"erode()",
							"morphologyEx()",
							"medianBlur()",
							"skeletonization()",
							"pixelNeighborhood()",
							"pixelNeighborhoodCross()",
							"pixelFindValue()",
							"paletteGenerate()",
							"paletteApply()",
							"paletteMatch()",
							"accumulate()",
							"accumulateProduct()",
							"accumulateSquare()",
							"accumulateWeighted()",
							"createHanningWindow()",
							"phaseCorrelate()",
							"adaptiveThreshold()",
							"blendLinear()",
							"distanceTransform()",
							"floodFill()",
							"grabCut()",
							"integral()",
							"watershed()",
							"applyColorMap()",
							"moments()",
							"convertMaps()",
							"getAffineTransform()",
							"getPerspectiveTransform()",
							"getRectSubPix()",
							"getRotationMatrix2D()",
							"getRotationMatrix2D_()",
							"invertAffineTransform()",
							"linearPolar()",
							"logPolar()",
							"remap()",
							"resize()",
							"warpAffine()",
							"warpPerspective()",
							"warpPolar()",
							"bilateralFilter()",
							"blur()",
							"boxFilter()",
							"buildPyramid()",
							"dilate()",
							"erode()",
							"filter2D()",
							"GaussianBlur()",
							"getDerivKernels()",
							"getGaborKernel()",
							"getGaussianKernel()",
							"getStructuringElement()",
							"Laplacian()",
							"medianBlur()",
							"morphologyDefaultBorderValue()",
							"morphologyEx()",
							"pyrDown()",
							"pyrMeanShiftFiltering()",
							"pyrUp()",
							"Scharr()",
							"sepFilter2D()",
							"Sobel()",
							"spatialGradient()",
							"sqrBoxFilter()",
							"approxPolyDP()",
							"arcLength()",
							"boxPoints()",
							"connectedComponents()",
							"connectedComponentsWithStats()",
							"contourArea()",
							"convexHull()",
							"convexityDefects()",
							"createGeneralizedHoughBallard()",
							"createGeneralizedHoughGuil()",
							"fitEllipse()",
							"fitEllipseAMS()",
							"fitEllipseDirect()",
							"fitLine()",
							"HuMoments()",
							"intersectConvexConvex()",
							"isContourConvex()",
							"matchShapes()",
							"minAreaRect()",
							"minEnclosingCircle()",
							"minEnclosingTriangle()",
							"rotatedRectangleIntersection()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADqAAAASlNSYXNwaUNhbURhdGEKICBqc19yYXNwaV9jYW1faW5pdAogIGpzX3Jhc3BpX2NhbV9jdG9yCiAganNfcmFzcGlfY2FtX2ZpbmFsaXplcgogIGpzX3Jhc3BpX2NhbV9vcHRpb25zCiAganNfcmFzcGlfY2FtX21ldGhvZApKU1ZhbHVlCmpzX3Jhc3BpX2NhbV93cmFwCiAganNfcmFzcGlfY2FtX2luaXQKICBqc19yYXNwaV9jYW1fZXhwb3J0CiAganNfcmFzcGlfY2FtX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA8BwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					83,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
						"symkeys":
						[
							[
								92,
								104
							],
							[
								117,
								131
							],
							[
								183,
								199
							],
							[
								399,
								419
							],
							[
								422,
								446
							],
							[
								521,
								537
							],
							[
								624,
								633
							],
							[
								778,
								802
							],
							[
								837,
								861
							],
							[
								897,
								921
							],
							[
								959,
								983
							],
							[
								1020,
								1044
							],
							[
								1080,
								1104
							],
							[
								1143,
								1167
							],
							[
								1290,
								1310
							],
							[
								1645,
								1669
							],
							[
								1879,
								1904
							],
							[
								2028,
								2050
							],
							[
								2087,
								2097
							],
							[
								2100,
								2122
							],
							[
								2225,
								2229
							],
							[
								2367,
								2372
							],
							[
								2649,
								2668
							],
							[
								2672,
								2685
							],
							[
								2712,
								2731
							],
							[
								2735,
								2759
							],
							[
								2811,
								2834
							],
							[
								2838,
								2857
							],
							[
								3011,
								3034
							],
							[
								3713,
								3726
							],
							[
								3782,
								3797
							],
							[
								3886,
								3907
							],
							[
								4159,
								4180
							],
							[
								4315,
								4327
							],
							[
								4370,
								4379
							],
							[
								4635,
								4648
							],
							[
								4652,
								4665
							],
							[
								4681,
								4703
							],
							[
								4707,
								4729
							],
							[
								4784,
								4802
							],
							[
								4826,
								4850
							],
							[
								4867,
								4882
							],
							[
								4911,
								4935
							],
							[
								5171,
								5195
							],
							[
								5541,
								5577
							],
							[
								5581,
								5598
							],
							[
								5641,
								5665
							],
							[
								5697,
								5714
							],
							[
								5793,
								5808
							],
							[
								5812,
								5827
							],
							[
								5845,
								5859
							],
							[
								5863,
								5887
							],
							[
								5997,
								6021
							],
							[
								6063,
								6077
							],
							[
								6182,
								6203
							],
							[
								6207,
								6212
							],
							[
								6280,
								6300
							],
							[
								6425,
								6441
							],
							[
								6445,
								6467
							],
							[
								6515,
								6529
							],
							[
								6533,
								6548
							],
							[
								6552,
								6565
							],
							[
								6571,
								6594
							],
							[
								6598,
								6614
							],
							[
								6730,
								6750
							],
							[
								6758,
								6778
							],
							[
								6946,
								6969
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"DISABLE_WERROR",
							"CMAKE_BUILD_TYPE",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BUILD_TYPE",
							"LIBWS2_32",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"POSITION_INDEPENDENT_CODE",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBPTHREAD",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBM",
							"LIBDL",
							"CMAKE_INSTALL_RPATH",
							"OPENCV_LIBDIR",
							"OPENCV_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_REQUIRED_INCLUDES",
							"OPENCV_INCLUDE_DIRS",
							"OPENCV_FREETYPE_LIBRARY",
							"CMAKE_C_FLAGS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_COMPILER_ID",
							"CMAKE_CXX_COMPILER_ID",
							"DEBUG_OUTPUT",
							"DEBUG_MAT",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"quickjs_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_LIBRARY",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CXX11_EXTENSION_COMPILE_OPTION",
							"CXX_STANDARD_FLAG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BUILD_SHARED_LIBS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_FLAGS",
							"LCCV_LIBRARIES",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"OPENCV_SOURCES",
							"QUICKJS_MODULE_CFLAGS",
							"F_PIC",
							"CMAKE_INSTALL_PREFIX",
							"PNG_INCLUDE_DIRS",
							"LIBCAMERA_INCLUDE_DIRS",
							"LCCV_LIBRARIES",
							"QUICKJS_LIBRARY",
							"PNG_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY",
							"OPENCV_LIBRARIES",
							"QUICKJS_C_MODULE_DIR",
							"jsbindings_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8BwAAICBjdgogIGNvbnN0cnVjdG9yKCkKICBibHVyKCkKICBib3VuZGluZ1JlY3QoKQpHYXVzc2lhbkJsdXIoKQpIb3VnaExpbmVzKCkKSG91Z2hMaW5lc1AoKQpIb3VnaENpcmNsZXMoKQpDYW5ueSgpCiAgZ29vZEZlYXR1cmVzVG9UcmFjaygpCiAgY3Z0Q29sb3IoKQogIGVxdWFsaXplSGlzdCgpCiAgdGhyZXNob2xkKCkKICBiaWxhdGVyYWxGaWx0ZXIoKQogIGZpbmRDb250b3VycygpCiAgZHJhd0NvbnRvdXJzKCkKICBwb2ludFBvbHlnb25UZXN0KCkKICBjb3JuZXJIYXJyaXMoKQogIGNhbGNIaXN0KCkKICBkaWxhdGUoKQogIGVyb2RlKCkKICBtb3JwaG9sb2d5RXgoKQogIG1lZGlhbkJsdXIoKQogIHNrZWxldG9uaXphdGlvbigpCiAgcGl4ZWxOZWlnaGJvcmhvb2QoKQogIHBpeGVsTmVpZ2hib3Job29kQ3Jvc3MoKQogIHBpeGVsRmluZFZhbHVlKCkKICBwYWxldHRlR2VuZXJhdGUoKQogIHBhbGV0dGVBcHBseSgpCiAgcGFsZXR0ZU1hdGNoKCkKICBhY2N1bXVsYXRlKCkKICBhY2N1bXVsYXRlUHJvZHVjdCgpCiAgYWNjdW11bGF0ZVNxdWFyZSgpCiAgYWNjdW11bGF0ZVdlaWdodGVkKCkKICBjcmVhdGVIYW5uaW5nV2luZG93KCkKICBwaGFzZUNvcnJlbGF0ZSgpCiAgYWRhcHRpdmVUaHJlc2hvbGQoKQogIGJsZW5kTGluZWFyKCkKICBkaXN0YW5jZVRyYW5zZm9ybSgpCiAgZmxvb2RGaWxsKCkKICBncmFiQ3V0KCkKICBpbnRlZ3JhbCgpCiAgd2F0ZXJzaGVkKCkKICBhcHBseUNvbG9yTWFwKCkKICBtb21lbnRzKCkKICBjb252ZXJ0TWFwcygpCiAgZ2V0QWZmaW5lVHJhbnNmb3JtKCkKICBnZXRQZXJzcGVjdGl2ZVRyYW5zZm9ybSgpCiAgZ2V0UmVjdFN1YlBpeCgpCiAgZ2V0Um90YXRpb25NYXRyaXgyRCgpCiAgZ2V0Um90YXRpb25NYXRyaXgyRF8oKQogIGludmVydEFmZmluZVRyYW5zZm9ybSgpCiAgbGluZWFyUG9sYXIoKQogIGxvZ1BvbGFyKCkKICByZW1hcCgpCiAgcmVzaXplKCkKICB3YXJwQWZmaW5lKCkKICB3YXJwUGVyc3BlY3RpdmUoKQogIHdhcnBQb2xhcigpCiAgYmlsYXRlcmFsRmlsdGVyKCkKICBibHVyKCkKICBib3hGaWx0ZXIoKQogIGJ1aWxkUHlyYW1pZCgpCiAgZGlsYXRlKCkKICBlcm9kZSgpCiAgZmlsdGVyMkQoKQpHYXVzc2lhbkJsdXIoKQogIGdldERlcml2S2VybmVscygpCiAgZ2V0R2Fib3JLZXJuZWwoKQogIGdldEdhdXNzaWFuS2VybmVsKCkKICBnZXRTdHJ1Y3R1cmluZ0VsZW1lbnQoKQpMYXBsYWNpYW4oKQogIG1lZGlhbkJsdXIoKQogIG1vcnBob2xvZ3lEZWZhdWx0Qm9yZGVyVmFsdWUoKQogIG1vcnBob2xvZ3lFeCgpCiAgcHlyRG93bigpCiAgcHlyTWVhblNoaWZ0RmlsdGVyaW5nKCkKICBweXJVcCgpClNjaGFycigpCiAgc2VwRmlsdGVyMkQoKQpTb2JlbCgpCiAgc3BhdGlhbEdyYWRpZW50KCkKICBzcXJCb3hGaWx0ZXIoKQogIGFwcHJveFBvbHlEUCgpCiAgYXJjTGVuZ3RoKCkKICBib3hQb2ludHMoKQogIGNvbm5lY3RlZENvbXBvbmVudHMoKQogIGNvbm5lY3RlZENvbXBvbmVudHNXaXRoU3RhdHMoKQogIGNvbnRvdXJBcmVhKCkKICBjb252ZXhIdWxsKCkKICBjb252ZXhpdHlEZWZlY3RzKCkKICBjcmVhdGVHZW5lcmFsaXplZEhvdWdoQmFsbGFyZCgpCiAgY3JlYXRlR2VuZXJhbGl6ZWRIb3VnaEd1aWwoKQogIGZpdEVsbGlwc2UoKQogIGZpdEVsbGlwc2VBTVMoKQogIGZpdEVsbGlwc2VEaXJlY3QoKQogIGZpdExpbmUoKQpIdU1vbWVudHMoKQogIGludGVyc2VjdENvbnZleENvbnZleCgpCiAgaXNDb250b3VyQ29udmV4KCkKICBtYXRjaFNoYXBlcygpCiAgbWluQXJlYVJlY3QoKQogIG1pbkVuY2xvc2luZ0NpcmNsZSgpCiAgbWluRW5jbG9zaW5nVHJpYW5nbGUoKQogIHJvdGF0ZWRSZWN0YW5nbGVJbnRlcnNlY3Rpb24oKQAAAAAAAAAAIwUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					84,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/contour.js",
						"symkeys":
						[
							[
								32,
								39
							],
							[
								83,
								96
							],
							[
								190,
								196
							],
							[
								289,
								294
							],
							[
								391,
								400
							],
							[
								495,
								502
							],
							[
								598,
								606
							],
							[
								702,
								710
							],
							[
								764,
								776
							],
							[
								828,
								838
							],
							[
								892,
								904
							],
							[
								957,
								968
							],
							[
								1027,
								1044
							],
							[
								1098,
								1110
							],
							[
								1166,
								1180
							],
							[
								1246,
								1270
							],
							[
								1329,
								1346
							],
							[
								1406,
								1424
							],
							[
								1526,
								1540
							],
							[
								1640,
								1652
							],
							[
								1763,
								1786
							],
							[
								1886,
								1898
							],
							[
								1995,
								2004
							],
							[
								2109,
								2126
							],
							[
								2224,
								2234
							],
							[
								2335,
								2348
							],
							[
								2456,
								2476
							],
							[
								2586,
								2608
							],
							[
								2714,
								2732
							],
							[
								2850,
								2880
							],
							[
								2979,
								2990
							],
							[
								3092,
								3106
							],
							[
								3212,
								3230
							],
							[
								3341,
								3364
							],
							[
								3468,
								3484
							],
							[
								3586,
								3600
							],
							[
								3712,
								3736
							],
							[
								3842,
								3860
							],
							[
								3972,
								3996
							],
							[
								4115,
								4146
							],
							[
								4243,
								4252
							],
							[
								4350,
								4360
							],
							[
								4458,
								4468
							],
							[
								4563,
								4570
							],
							[
								4666,
								4674
							],
							[
								4800,
								4810
							],
							[
								5032,
								5049
							]
						],
						"symlist":
						[
							"Contour",
							"constructor()",
							"push()",
							"pop()",
							"unshift()",
							"shift()",
							"concat()",
							"getMat()",
							"get length()",
							"get area()",
							"get buffer()",
							"get array()",
							"get aspectRatio()",
							"get extent()",
							"get solidity()",
							"get equivalentDiameter()",
							"get orientation()",
							"get boundingRect()",
							"approxPolyDP()",
							"convexHull()",
							"getBoundingClientRect()",
							"fitEllipse()",
							"fitLine()",
							"intersectConvex()",
							"isConvex()",
							"minAreaRect()",
							"minEnclosingCircle()",
							"minEnclosingTriangle()",
							"pointPolygonTest()",
							"rotatedRectangleIntersection()",
							"arcLength()",
							"rotatePoints()",
							"convexityDefects()",
							"simplifyReumannWitkam()",
							"simplifyOpheim()",
							"simplifyLang()",
							"simplifyDouglasPeucker()",
							"simplifyNthPoint()",
							"simplifyRadialDistance()",
							"simplifyPerpendicularDistance()",
							"toArray()",
							"toString()",
							"toSource()",
							"lines()",
							"points()",
							"get size()",
							"static fromRect()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjBQAAUFJPSkVDVF9OQU1FCkRJU0FCTEVfV0VSUk9SCkNNQUtFX0JVSUxEX1RZUEUKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JVSUxEX1RZUEUKTElCV1MyXzMyCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9USFJFQURfTElCU19JTklUCkxJQlBUSFJFQUQKQ01BS0VfVEhSRUFEX0xJQlNfSU5JVApMSUJNCkxJQkRMCkNNQUtFX0lOU1RBTExfUlBBVEgKT1BFTkNWX0xJQkRJUgpPUEVOQ1ZfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9SRVFVSVJFRF9JTkNMVURFUwpPUEVOQ1ZfSU5DTFVERV9ESVJTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCkNNQUtFX0NfRkxBR1MKQ01BS0VfQ1hYX0ZMQUdTCkNNQUtFX0NYWF9DT01QSUxFUl9JRApDTUFLRV9DWFhfQ09NUElMRVJfSUQKREVCVUdfT1VUUFVUCkRFQlVHX01BVApDTUFLRV9DX0ZMQUdTCkNNQUtFX0NfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCiAgcXVpY2tqc19CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DWFgxMV9FWFRFTlNJT05fQ09NUElMRV9PUFRJT04KQ1hYX1NUQU5EQVJEX0ZMQUcKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJVSUxEX1NIQVJFRF9MSUJTCkNNQUtFX0NYWF9GTEFHUwpDTUFLRV9DWFhfRkxBR1MKTENDVl9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpPUEVOQ1ZfU09VUkNFUwpRVUlDS0pTX01PRFVMRV9DRkxBR1MKRl9QSUMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKUE5HX0lOQ0xVREVfRElSUwpMSUJDQU1FUkFfSU5DTFVERV9ESVJTCkxDQ1ZfTElCUkFSSUVTClFVSUNLSlNfTElCUkFSWQpQTkdfTElCUkFSSUVTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCk9QRU5DVl9MSUJSQVJJRVMKUVVJQ0tKU19DX01PRFVMRV9ESVIKICBqc2JpbmRpbmdzX0xJQlJBUklFUwpPUEVOQ1ZfRlJFRVRZUEVfTElCUkFSWQAAAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					85,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/clahe.js",
						"symkeys":
						[
							[
								30,
								35
							],
							[
								77,
								90
							],
							[
								183,
								190
							],
							[
								292,
								308
							],
							[
								363,
								378
							],
							[
								437,
								456
							]
						],
						"symlist":
						[
							"CLAHE",
							"constructor()",
							"apply()",
							"collectGarbage()",
							"get clipLimit()",
							"get tilesGridSize()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAsAwAAQ29udG91cgogIGNvbnN0cnVjdG9yKCkKICBwdXNoKCkKICBwb3AoKQogIHVuc2hpZnQoKQogIHNoaWZ0KCkKICBjb25jYXQoKQogIGdldE1hdCgpCiAgZ2V0IGxlbmd0aCgpCiAgZ2V0IGFyZWEoKQogIGdldCBidWZmZXIoKQogIGdldCBhcnJheSgpCiAgZ2V0IGFzcGVjdFJhdGlvKCkKICBnZXQgZXh0ZW50KCkKICBnZXQgc29saWRpdHkoKQogIGdldCBlcXVpdmFsZW50RGlhbWV0ZXIoKQogIGdldCBvcmllbnRhdGlvbigpCiAgZ2V0IGJvdW5kaW5nUmVjdCgpCiAgYXBwcm94UG9seURQKCkKICBjb252ZXhIdWxsKCkKICBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogIGZpdEVsbGlwc2UoKQogIGZpdExpbmUoKQogIGludGVyc2VjdENvbnZleCgpCiAgaXNDb252ZXgoKQogIG1pbkFyZWFSZWN0KCkKICBtaW5FbmNsb3NpbmdDaXJjbGUoKQogIG1pbkVuY2xvc2luZ1RyaWFuZ2xlKCkKICBwb2ludFBvbHlnb25UZXN0KCkKICByb3RhdGVkUmVjdGFuZ2xlSW50ZXJzZWN0aW9uKCkKICBhcmNMZW5ndGgoKQogIHJvdGF0ZVBvaW50cygpCiAgY29udmV4aXR5RGVmZWN0cygpCiAgc2ltcGxpZnlSZXVtYW5uV2l0a2FtKCkKICBzaW1wbGlmeU9waGVpbSgpCiAgc2ltcGxpZnlMYW5nKCkKICBzaW1wbGlmeURvdWdsYXNQZXVja2VyKCkKICBzaW1wbGlmeU50aFBvaW50KCkKICBzaW1wbGlmeVJhZGlhbERpc3RhbmNlKCkKICBzaW1wbGlmeVBlcnBlbmRpY3VsYXJEaXN0YW5jZSgpCiAgdG9BcnJheSgpCiAgdG9TdHJpbmcoKQogIHRvU291cmNlKCkKICBsaW5lcygpCiAgcG9pbnRzKCkKICBnZXQgc2l6ZSgpCiAgc3RhdGljIGZyb21SZWN0KCkAAAAAAAAAAFoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					86,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/cv.js",
						"symkeys":
						[
							[
								27,
								29
							],
							[
								68,
								81
							],
							[
								164,
								181
							],
							[
								264,
								281
							],
							[
								362,
								377
							],
							[
								459,
								475
							],
							[
								555,
								569
							],
							[
								653,
								671
							],
							[
								751,
								765
							],
							[
								851,
								871
							],
							[
								957,
								977
							],
							[
								1064,
								1085
							],
							[
								1176,
								1201
							],
							[
								1291,
								1315
							],
							[
								1401,
								1421
							],
							[
								1506,
								1525
							],
							[
								1611,
								1631
							],
							[
								1717,
								1737
							],
							[
								1824,
								1845
							],
							[
								1931,
								1951
							],
							[
								2033,
								2049
							],
							[
								2131,
								2147
							],
							[
								2504,
								2520
							],
							[
								2598,
								2610
							],
							[
								2692,
								2708
							],
							[
								2789,
								2804
							],
							[
								2882,
								2894
							],
							[
								2972,
								2984
							],
							[
								3067,
								3084
							],
							[
								3164,
								3178
							],
							[
								3261,
								3278
							],
							[
								3364,
								3384
							],
							[
								3474,
								3498
							],
							[
								3587,
								3610
							],
							[
								3691,
								3706
							],
							[
								3784,
								3796
							],
							[
								3874,
								3886
							],
							[
								3964,
								3976
							],
							[
								4065,
								4088
							],
							[
								4167,
								4180
							],
							[
								4259,
								4272
							],
							[
								4351,
								4364
							],
							[
								4445,
								4460
							],
							[
								4538,
								4550
							],
							[
								4638,
								4660
							],
							[
								4755,
								4784
							],
							[
								4865,
								4880
							],
							[
								4961,
								4976
							],
							[
								5055,
								5068
							],
							[
								5150,
								5166
							],
							[
								5245,
								5258
							],
							[
								5342,
								5360
							],
							[
								5444,
								5462
							],
							[
								5552,
								5576
							],
							[
								5662,
								5682
							],
							[
								5767,
								5786
							],
							[
								5872,
								5892
							],
							[
								5972,
								5986
							],
							[
								6078,
								6104
							],
							[
								6186,
								6202
							],
							[
								6290,
								6312
							],
							[
								6390,
								6402
							],
							[
								6486,
								6504
							],
							[
								6590,
								6610
							],
							[
								6689,
								6702
							],
							[
								6787,
								6806
							],
							[
								6890,
								6908
							],
							[
								6992,
								7010
							],
							[
								7097,
								7118
							],
							[
								7197,
								7210
							],
							[
								7294,
								7312
							],
							[
								7392,
								7406
							],
							[
								7492,
								7512
							],
							[
								7590,
								7602
							],
							[
								7682,
								7696
							],
							[
								7782,
								7802
							],
							[
								7882,
								7896
							],
							[
								7977,
								7992
							],
							[
								8075,
								8092
							],
							[
								8178,
								8198
							],
							[
								8283,
								8302
							],
							[
								8386,
								8404
							],
							[
								8482,
								8494
							],
							[
								8574,
								8588
							]
						],
						"symlist":
						[
							"cv",
							"constructor()",
							"static imdecode()",
							"static imencode()",
							"static imread()",
							"static imwrite()",
							"static split()",
							"static normalize()",
							"static merge()",
							"static mixChannels()",
							"static addWeighted()",
							"static getTickCount()",
							"static getTickFrequency()",
							"static getCPUTickCount()",
							"static bitwise_and()",
							"static bitwise_or()",
							"static bitwise_xor()",
							"static bitwise_not()",
							"static countNonZero()",
							"static findNonZero()",
							"static hconcat()",
							"static vconcat()",
							"static absdiff()",
							"static add()",
							"static compare()",
							"static divide()",
							"static max()",
							"static min()",
							"static multiply()",
							"static solve()",
							"static subtract()",
							"static convertFp16()",
							"static convertScaleAbs()",
							"static copyMakeBorder()",
							"static copyTo()",
							"static dct()",
							"static dft()",
							"static exp()",
							"static extractChannel()",
							"static flip()",
							"static idct()",
							"static idft()",
							"static invert()",
							"static log()",
							"static mulTransposed()",
							"static perspectiveTransform()",
							"static reduce()",
							"static rotate()",
							"static sort()",
							"static sortIdx()",
							"static sqrt()",
							"static transform()",
							"static transpose()",
							"static calcCovarMatrix()",
							"static cartToPolar()",
							"static checkRange()",
							"static determinant()",
							"static eigen()",
							"static eigenNonSymmetric()",
							"static inRange()",
							"static insertChannel()",
							"static LUT()",
							"static magnitude()",
							"static Mahalanobis()",
							"static mean()",
							"static meanStdDev()",
							"static minMaxIdx()",
							"static minMaxLoc()",
							"static mulSpectrums()",
							"static norm()",
							"static patchNaNs()",
							"static phase()",
							"static polarToCart()",
							"static pow()",
							"static randn()",
							"static randShuffle()",
							"static randu()",
							"static repeat()",
							"static scaleAdd()",
							"static setIdentity()",
							"static solveCubic()",
							"static solvePoly()",
							"static sum()",
							"static trace()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAAAAQ0xBSEUKICBjb25zdHJ1Y3RvcigpCiAgYXBwbHkoKQogIGNvbGxlY3RHYXJiYWdlKCkKICBnZXQgY2xpcExpbWl0KCkKICBnZXQgdGlsZXNHcmlkU2l6ZSgpAAAAAAAAAACMBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					87,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/keypoint.js",
						"symkeys":
						[
							[
								33,
								41
							],
							[
								86,
								99
							],
							[
								194,
								200
							],
							[
								254,
								265
							],
							[
								322,
								336
							],
							[
								391,
								403
							],
							[
								454,
								462
							],
							[
								519,
								533
							],
							[
								586,
								596
							]
						],
						"symlist":
						[
							"KeyPoint",
							"constructor()",
							"hash()",
							"get angle()",
							"get class_id()",
							"get octave()",
							"get pt()",
							"get response()",
							"get size()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACMBgAAICBjdgogIGNvbnN0cnVjdG9yKCkKICBzdGF0aWMgaW1kZWNvZGUoKQogIHN0YXRpYyBpbWVuY29kZSgpCiAgc3RhdGljIGltcmVhZCgpCiAgc3RhdGljIGltd3JpdGUoKQogIHN0YXRpYyBzcGxpdCgpCiAgc3RhdGljIG5vcm1hbGl6ZSgpCiAgc3RhdGljIG1lcmdlKCkKICBzdGF0aWMgbWl4Q2hhbm5lbHMoKQogIHN0YXRpYyBhZGRXZWlnaHRlZCgpCiAgc3RhdGljIGdldFRpY2tDb3VudCgpCiAgc3RhdGljIGdldFRpY2tGcmVxdWVuY3koKQogIHN0YXRpYyBnZXRDUFVUaWNrQ291bnQoKQogIHN0YXRpYyBiaXR3aXNlX2FuZCgpCiAgc3RhdGljIGJpdHdpc2Vfb3IoKQogIHN0YXRpYyBiaXR3aXNlX3hvcigpCiAgc3RhdGljIGJpdHdpc2Vfbm90KCkKICBzdGF0aWMgY291bnROb25aZXJvKCkKICBzdGF0aWMgZmluZE5vblplcm8oKQogIHN0YXRpYyBoY29uY2F0KCkKICBzdGF0aWMgdmNvbmNhdCgpCiAgc3RhdGljIGFic2RpZmYoKQogIHN0YXRpYyBhZGQoKQogIHN0YXRpYyBjb21wYXJlKCkKICBzdGF0aWMgZGl2aWRlKCkKICBzdGF0aWMgbWF4KCkKICBzdGF0aWMgbWluKCkKICBzdGF0aWMgbXVsdGlwbHkoKQogIHN0YXRpYyBzb2x2ZSgpCiAgc3RhdGljIHN1YnRyYWN0KCkKICBzdGF0aWMgY29udmVydEZwMTYoKQogIHN0YXRpYyBjb252ZXJ0U2NhbGVBYnMoKQogIHN0YXRpYyBjb3B5TWFrZUJvcmRlcigpCiAgc3RhdGljIGNvcHlUbygpCiAgc3RhdGljIGRjdCgpCiAgc3RhdGljIGRmdCgpCiAgc3RhdGljIGV4cCgpCiAgc3RhdGljIGV4dHJhY3RDaGFubmVsKCkKICBzdGF0aWMgZmxpcCgpCiAgc3RhdGljIGlkY3QoKQogIHN0YXRpYyBpZGZ0KCkKICBzdGF0aWMgaW52ZXJ0KCkKICBzdGF0aWMgbG9nKCkKICBzdGF0aWMgbXVsVHJhbnNwb3NlZCgpCiAgc3RhdGljIHBlcnNwZWN0aXZlVHJhbnNmb3JtKCkKICBzdGF0aWMgcmVkdWNlKCkKICBzdGF0aWMgcm90YXRlKCkKICBzdGF0aWMgc29ydCgpCiAgc3RhdGljIHNvcnRJZHgoKQogIHN0YXRpYyBzcXJ0KCkKICBzdGF0aWMgdHJhbnNmb3JtKCkKICBzdGF0aWMgdHJhbnNwb3NlKCkKICBzdGF0aWMgY2FsY0NvdmFyTWF0cml4KCkKICBzdGF0aWMgY2FydFRvUG9sYXIoKQogIHN0YXRpYyBjaGVja1JhbmdlKCkKICBzdGF0aWMgZGV0ZXJtaW5hbnQoKQogIHN0YXRpYyBlaWdlbigpCiAgc3RhdGljIGVpZ2VuTm9uU3ltbWV0cmljKCkKICBzdGF0aWMgaW5SYW5nZSgpCiAgc3RhdGljIGluc2VydENoYW5uZWwoKQogIHN0YXRpYyBMVVQoKQogIHN0YXRpYyBtYWduaXR1ZGUoKQogIHN0YXRpYyBNYWhhbGFub2JpcygpCiAgc3RhdGljIG1lYW4oKQogIHN0YXRpYyBtZWFuU3RkRGV2KCkKICBzdGF0aWMgbWluTWF4SWR4KCkKICBzdGF0aWMgbWluTWF4TG9jKCkKICBzdGF0aWMgbXVsU3BlY3RydW1zKCkKICBzdGF0aWMgbm9ybSgpCiAgc3RhdGljIHBhdGNoTmFOcygpCiAgc3RhdGljIHBoYXNlKCkKICBzdGF0aWMgcG9sYXJUb0NhcnQoKQogIHN0YXRpYyBwb3coKQogIHN0YXRpYyByYW5kbigpCiAgc3RhdGljIHJhbmRTaHVmZmxlKCkKICBzdGF0aWMgcmFuZHUoKQogIHN0YXRpYyByZXBlYXQoKQogIHN0YXRpYyBzY2FsZUFkZCgpCiAgc3RhdGljIHNldElkZW50aXR5KCkKICBzdGF0aWMgc29sdmVDdWJpYygpCiAgc3RhdGljIHNvbHZlUG9seSgpCiAgc3RhdGljIHN1bSgpCiAgc3RhdGljIHRyYWNlKCkAAAAAAAAAAHgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.cpp",
						"symkeys":
						[
							[
								49,
								63
							],
							[
								190,
								204
							],
							[
								328,
								342
							]
						],
						"symlist":
						[
							"point_distance",
							"point_distance",
							"point_distance"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAS2V5UG9pbnQKICBjb25zdHJ1Y3RvcigpCiAgaGFzaCgpCiAgZ2V0IGFuZ2xlKCkKICBnZXQgY2xhc3NfaWQoKQogIGdldCBvY3RhdmUoKQogIGdldCBwdCgpCiAgZ2V0IHJlc3BvbnNlKCkKICBnZXQgc2l6ZSgpAAAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					89,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line_segment_detector.js",
						"symkeys":
						[
							[
								44,
								63
							],
							[
								119,
								132
							],
							[
								249,
								266
							],
							[
								374,
								382
							],
							[
								496,
								510
							]
						],
						"symlist":
						[
							"LineSegmentDetector",
							"constructor()",
							"compareSegments()",
							"detect()",
							"drawSegments()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBwb2ludF9kaXN0YW5jZQogIHBvaW50X2Rpc3RhbmNlCiAgcG9pbnRfZGlzdGFuY2UAAAAAAAAAAFMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					90,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								134,
								142
							],
							[
								189,
								197
							],
							[
								244,
								252
							],
							[
								299,
								307
							],
							[
								353,
								360
							],
							[
								406,
								413
							],
							[
								569,
								580
							],
							[
								630,
								641
							],
							[
								692,
								704
							],
							[
								755,
								767
							],
							[
								817,
								828
							],
							[
								875,
								883
							],
							[
								980,
								992
							],
							[
								1089,
								1101
							],
							[
								1192,
								1198
							],
							[
								1287,
								1291
							],
							[
								1387,
								1398
							],
							[
								1502,
								1521
							],
							[
								1616,
								1626
							],
							[
								1716,
								1721
							],
							[
								1811,
								1816
							],
							[
								1906,
								1911
							],
							[
								2001,
								2006
							],
							[
								2100,
								2109
							],
							[
								2204,
								2214
							],
							[
								2309,
								2319
							],
							[
								2412,
								2420
							],
							[
								2457,
								2468
							],
							[
								2528,
								2537
							],
							[
								2830,
								2843
							],
							[
								2923,
								2935
							]
						],
						"symlist":
						[
							"Line",
							"constructor()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get a()",
							"get b()",
							"get slope()",
							"get angle()",
							"get aspect()",
							"get length()",
							"get pivot()",
							"get to()",
							"xIntercept()",
							"yIntercept()",
							"swap()",
							"at()",
							"intersect()",
							"endpointDistances()",
							"distance()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"toArray()",
							"toPoints()",
							"toString()",
							"values()",
							"get start()",
							"get end()",
							"static from()",
							"static sum()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTAAAATGluZVNlZ21lbnREZXRlY3RvcgogIGNvbnN0cnVjdG9yKCkKICBjb21wYXJlU2VnbWVudHMoKQogIGRldGVjdCgpCiAgZHJhd1NlZ21lbnRzKCkAAAAAAAAAAJABAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					91,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/Makefile",
						"symkeys":
						[
							[
								163,
								177
							],
							[
								183,
								189
							],
							[
								278,
								290
							],
							[
								467,
								476
							],
							[
								515,
								516
							],
							[
								560,
								561
							],
							[
								607,
								608
							],
							[
								656,
								657
							],
							[
								706,
								707
							],
							[
								715,
								724
							],
							[
								870,
								887
							],
							[
								929,
								940
							],
							[
								942,
								948
							],
							[
								1716,
								1729
							],
							[
								1924,
								1930
							],
							[
								1992,
								2010
							],
							[
								2210,
								2216
							],
							[
								2283,
								2296
							],
							[
								2497,
								2503
							],
							[
								2565,
								2583
							],
							[
								2789,
								2795
							],
							[
								2856,
								2863
							],
							[
								3019,
								3025
							],
							[
								3075,
								3087
							],
							[
								3248,
								3254
							],
							[
								3325,
								3348
							],
							[
								3466,
								3472
							],
							[
								3554,
								3582
							],
							[
								3608,
								3614
							],
							[
								3691,
								3704
							],
							[
								3917,
								3923
							],
							[
								3985,
								4003
							],
							[
								4019,
								4025
							],
							[
								4089,
								4099
							],
							[
								4273,
								4279
							],
							[
								4335,
								4350
							],
							[
								4363,
								4369
							],
							[
								4411,
								4414
							],
							[
								4806,
								4812
							],
							[
								4844,
								4849
							],
							[
								4950,
								4956
							],
							[
								4990,
								5000
							],
							[
								5008,
								5014
							],
							[
								5065,
								5075
							],
							[
								5185,
								5191
							],
							[
								5242,
								5257
							],
							[
								5363,
								5369
							],
							[
								5405,
								5411
							],
							[
								5559,
								5565
							],
							[
								5607,
								5652
							],
							[
								5782,
								5788
							],
							[
								5869,
								5883
							],
							[
								5931,
								5937
							],
							[
								5986,
								6005
							],
							[
								6167,
								6173
							],
							[
								6228,
								6269
							],
							[
								6395,
								6401
							],
							[
								6478,
								6488
							],
							[
								6532,
								6538
							],
							[
								6583,
								6598
							],
							[
								6752,
								6758
							],
							[
								6778,
								6803
							],
							[
								6835,
								6841
							],
							[
								6904,
								6933
							],
							[
								7111,
								7117
							],
							[
								7151,
								7176
							],
							[
								7208,
								7214
							],
							[
								7281,
								7310
							],
							[
								7488,
								7494
							],
							[
								7528,
								7553
							],
							[
								7585,
								7591
							],
							[
								7662,
								7691
							],
							[
								7869,
								7875
							],
							[
								7909,
								7919
							],
							[
								7936,
								7942
							],
							[
								7990,
								8004
							],
							[
								8167,
								8173
							],
							[
								8192,
								8202
							],
							[
								8219,
								8225
							],
							[
								8277,
								8291
							],
							[
								8454,
								8460
							],
							[
								8479,
								8489
							],
							[
								8506,
								8512
							],
							[
								8568,
								8582
							],
							[
								8745,
								8751
							],
							[
								8770,
								8785
							],
							[
								8805,
								8811
							],
							[
								8864,
								8881
							],
							[
								9047,
								9053
							],
							[
								9075,
								9090
							],
							[
								9110,
								9116
							],
							[
								9173,
								9190
							],
							[
								9356,
								9362
							],
							[
								9384,
								9399
							],
							[
								9419,
								9425
							],
							[
								9486,
								9503
							],
							[
								9669,
								9675
							],
							[
								9697,
								9706
							],
							[
								9722,
								9728
							],
							[
								9775,
								9788
							],
							[
								9950,
								9956
							],
							[
								9974,
								9983
							],
							[
								9999,
								10005
							],
							[
								10056,
								10069
							],
							[
								10231,
								10237
							],
							[
								10255,
								10264
							],
							[
								10280,
								10286
							],
							[
								10341,
								10354
							],
							[
								10516,
								10522
							],
							[
								10540,
								10553
							],
							[
								10573,
								10579
							],
							[
								10630,
								10647
							],
							[
								10985,
								10991
							],
							[
								11013,
								11026
							],
							[
								11046,
								11052
							],
							[
								11107,
								11124
							],
							[
								11462,
								11468
							],
							[
								11490,
								11503
							],
							[
								11523,
								11529
							],
							[
								11588,
								11605
							],
							[
								11943,
								11949
							],
							[
								11971,
								11981
							],
							[
								11998,
								12004
							],
							[
								12052,
								12066
							],
							[
								12229,
								12235
							],
							[
								12254,
								12264
							],
							[
								12281,
								12287
							],
							[
								12339,
								12353
							],
							[
								12516,
								12522
							],
							[
								12541,
								12551
							],
							[
								12568,
								12574
							],
							[
								12630,
								12644
							],
							[
								12807,
								12813
							],
							[
								12832,
								12844
							],
							[
								12863,
								12869
							],
							[
								12919,
								12935
							],
							[
								13100,
								13106
							],
							[
								13127,
								13139
							],
							[
								13158,
								13164
							],
							[
								13218,
								13234
							],
							[
								13399,
								13405
							],
							[
								13426,
								13438
							],
							[
								13457,
								13463
							],
							[
								13521,
								13537
							],
							[
								13702,
								13708
							],
							[
								13729,
								13736
							],
							[
								13750,
								13756
							],
							[
								13801,
								13812
							],
							[
								13972,
								13978
							],
							[
								13994,
								14001
							],
							[
								14015,
								14021
							],
							[
								14070,
								14081
							],
							[
								14241,
								14247
							],
							[
								14263,
								14270
							],
							[
								14284,
								14290
							],
							[
								14343,
								14354
							],
							[
								14514,
								14520
							],
							[
								14536,
								14545
							],
							[
								14561,
								14567
							],
							[
								14614,
								14627
							],
							[
								14789,
								14795
							],
							[
								14813,
								14822
							],
							[
								14838,
								14844
							],
							[
								14895,
								14908
							],
							[
								15070,
								15076
							],
							[
								15094,
								15103
							],
							[
								15119,
								15125
							],
							[
								15180,
								15193
							],
							[
								15355,
								15361
							],
							[
								15379,
								15402
							],
							[
								15432,
								15438
							],
							[
								15499,
								15526
							],
							[
								15702,
								15708
							],
							[
								15740,
								15763
							],
							[
								15793,
								15799
							],
							[
								15864,
								15891
							],
							[
								16067,
								16073
							],
							[
								16105,
								16128
							],
							[
								16158,
								16164
							],
							[
								16233,
								16260
							],
							[
								16436,
								16442
							],
							[
								16474,
								16488
							],
							[
								16509,
								16515
							],
							[
								16567,
								16585
							],
							[
								16752,
								16758
							],
							[
								16781,
								16795
							],
							[
								16816,
								16822
							],
							[
								16878,
								16896
							],
							[
								17063,
								17069
							],
							[
								17092,
								17106
							],
							[
								17127,
								17133
							],
							[
								17193,
								17211
							],
							[
								17378,
								17384
							],
							[
								17407,
								17419
							],
							[
								17438,
								17444
							],
							[
								17494,
								17510
							],
							[
								17675,
								17681
							],
							[
								17702,
								17714
							],
							[
								17733,
								17739
							],
							[
								17793,
								17809
							],
							[
								17974,
								17980
							],
							[
								18001,
								18013
							],
							[
								18032,
								18038
							],
							[
								18096,
								18112
							],
							[
								18277,
								18283
							],
							[
								18304,
								18317
							],
							[
								18337,
								18343
							],
							[
								18394,
								18411
							],
							[
								18577,
								18583
							],
							[
								18605,
								18618
							],
							[
								18638,
								18644
							],
							[
								18699,
								18716
							],
							[
								18882,
								18888
							],
							[
								18910,
								18923
							],
							[
								18943,
								18949
							],
							[
								19008,
								19025
							],
							[
								19191,
								19197
							],
							[
								19219,
								19228
							],
							[
								19244,
								19250
							],
							[
								19297,
								19310
							],
							[
								19472,
								19478
							],
							[
								19496,
								19505
							],
							[
								19521,
								19527
							],
							[
								19578,
								19591
							],
							[
								19753,
								19759
							],
							[
								19777,
								19786
							],
							[
								19802,
								19808
							],
							[
								19863,
								19876
							],
							[
								20038,
								20044
							],
							[
								20062,
								20080
							],
							[
								20105,
								20111
							],
							[
								20167,
								20189
							],
							[
								20360,
								20366
							],
							[
								20393,
								20411
							],
							[
								20436,
								20442
							],
							[
								20502,
								20524
							],
							[
								20695,
								20701
							],
							[
								20728,
								20746
							],
							[
								20771,
								20777
							],
							[
								20841,
								20863
							],
							[
								21034,
								21040
							],
							[
								21067,
								21093
							],
							[
								21126,
								21132
							],
							[
								21196,
								21226
							],
							[
								21405,
								21411
							],
							[
								21446,
								21472
							],
							[
								21505,
								21511
							],
							[
								21579,
								21609
							],
							[
								21788,
								21794
							],
							[
								21829,
								21855
							],
							[
								21888,
								21894
							],
							[
								21966,
								21996
							],
							[
								22175,
								22181
							],
							[
								22216,
								22224
							],
							[
								22239,
								22245
							],
							[
								22291,
								22303
							],
							[
								22464,
								22470
							],
							[
								22487,
								22495
							],
							[
								22510,
								22516
							],
							[
								22566,
								22578
							],
							[
								22739,
								22745
							],
							[
								22762,
								22770
							],
							[
								22785,
								22791
							],
							[
								22845,
								22857
							],
							[
								23018,
								23024
							],
							[
								23041,
								23051
							],
							[
								23068,
								23074
							],
							[
								23122,
								23136
							],
							[
								23299,
								23305
							],
							[
								23324,
								23334
							],
							[
								23351,
								23357
							],
							[
								23409,
								23423
							],
							[
								23586,
								23592
							],
							[
								23611,
								23621
							],
							[
								23638,
								23644
							],
							[
								23700,
								23714
							],
							[
								23877,
								23883
							],
							[
								23902,
								23921
							],
							[
								23947,
								23953
							],
							[
								24010,
								24033
							],
							[
								24205,
								24211
							],
							[
								24239,
								24258
							],
							[
								24284,
								24290
							],
							[
								24351,
								24374
							],
							[
								24546,
								24552
							],
							[
								24580,
								24599
							],
							[
								24625,
								24631
							],
							[
								24696,
								24719
							],
							[
								24891,
								24897
							],
							[
								24925,
								24934
							],
							[
								24950,
								24956
							],
							[
								25003,
								25016
							],
							[
								25178,
								25184
							],
							[
								25202,
								25211
							],
							[
								25227,
								25233
							],
							[
								25284,
								25297
							],
							[
								25459,
								25465
							],
							[
								25483,
								25492
							],
							[
								25508,
								25514
							],
							[
								25569,
								25582
							],
							[
								25744,
								25750
							],
							[
								25768,
								25785
							],
							[
								25809,
								25815
							],
							[
								25870,
								25891
							],
							[
								26061,
								26067
							],
							[
								26093,
								26110
							],
							[
								26134,
								26140
							],
							[
								26199,
								26220
							],
							[
								26390,
								26396
							],
							[
								26422,
								26439
							],
							[
								26463,
								26469
							],
							[
								26532,
								26553
							],
							[
								26723,
								26729
							],
							[
								26755,
								26764
							],
							[
								26780,
								26786
							],
							[
								26833,
								26846
							],
							[
								27008,
								27014
							],
							[
								27032,
								27041
							],
							[
								27057,
								27063
							],
							[
								27114,
								27127
							],
							[
								27289,
								27295
							],
							[
								27313,
								27322
							],
							[
								27338,
								27344
							],
							[
								27399,
								27412
							],
							[
								27574,
								27580
							],
							[
								27598,
								27617
							],
							[
								27643,
								27649
							],
							[
								27706,
								27729
							],
							[
								27901,
								27907
							],
							[
								27935,
								27954
							],
							[
								27980,
								27986
							],
							[
								28047,
								28070
							],
							[
								28242,
								28248
							],
							[
								28276,
								28295
							],
							[
								28321,
								28327
							],
							[
								28392,
								28415
							],
							[
								28587,
								28593
							],
							[
								28621,
								28634
							],
							[
								28654,
								28660
							],
							[
								28711,
								28728
							],
							[
								28894,
								28900
							],
							[
								28922,
								28935
							],
							[
								28955,
								28961
							],
							[
								29016,
								29033
							],
							[
								29199,
								29205
							],
							[
								29227,
								29240
							],
							[
								29260,
								29266
							],
							[
								29325,
								29342
							],
							[
								29508,
								29514
							],
							[
								29536,
								29545
							],
							[
								29561,
								29567
							],
							[
								29614,
								29627
							],
							[
								29789,
								29795
							],
							[
								29813,
								29822
							],
							[
								29838,
								29844
							],
							[
								29895,
								29908
							],
							[
								30070,
								30076
							],
							[
								30094,
								30103
							],
							[
								30119,
								30125
							],
							[
								30180,
								30193
							],
							[
								30355,
								30361
							],
							[
								30379,
								30391
							],
							[
								30410,
								30416
							],
							[
								30466,
								30482
							],
							[
								30647,
								30653
							],
							[
								30674,
								30686
							],
							[
								30705,
								30711
							],
							[
								30765,
								30781
							],
							[
								30946,
								30952
							],
							[
								30973,
								30985
							],
							[
								31004,
								31010
							],
							[
								31068,
								31084
							],
							[
								31249,
								31255
							],
							[
								31276,
								31294
							],
							[
								31319,
								31325
							],
							[
								31381,
								31403
							],
							[
								31574,
								31580
							],
							[
								31607,
								31625
							],
							[
								31650,
								31656
							],
							[
								31716,
								31738
							],
							[
								31909,
								31915
							],
							[
								31942,
								31960
							],
							[
								31985,
								31991
							],
							[
								32055,
								32077
							],
							[
								32248,
								32254
							],
							[
								32281,
								32298
							],
							[
								32322,
								32328
							],
							[
								32383,
								32404
							],
							[
								32574,
								32580
							],
							[
								32606,
								32623
							],
							[
								32647,
								32653
							],
							[
								32712,
								32733
							],
							[
								32903,
								32909
							],
							[
								32935,
								32952
							],
							[
								32976,
								32982
							],
							[
								33045,
								33066
							],
							[
								33236,
								33242
							],
							[
								33268,
								33280
							],
							[
								33299,
								33305
							],
							[
								33355,
								33371
							],
							[
								33536,
								33542
							],
							[
								33563,
								33575
							],
							[
								33594,
								33600
							],
							[
								33654,
								33670
							],
							[
								33835,
								33841
							],
							[
								33862,
								33874
							],
							[
								33893,
								33899
							],
							[
								33957,
								33973
							],
							[
								34138,
								34144
							],
							[
								34165,
								34171
							],
							[
								34184,
								34190
							],
							[
								34234,
								34244
							],
							[
								34403,
								34409
							],
							[
								34424,
								34430
							],
							[
								34443,
								34449
							],
							[
								34497,
								34507
							],
							[
								34666,
								34672
							],
							[
								34687,
								34693
							],
							[
								34706,
								34712
							],
							[
								34764,
								34774
							],
							[
								34933,
								34939
							],
							[
								34954,
								34967
							],
							[
								34987,
								34993
							],
							[
								35044,
								35061
							],
							[
								35227,
								35233
							],
							[
								35255,
								35268
							],
							[
								35288,
								35294
							],
							[
								35349,
								35366
							],
							[
								35532,
								35538
							],
							[
								35560,
								35573
							],
							[
								35593,
								35599
							],
							[
								35658,
								35675
							],
							[
								35841,
								35847
							],
							[
								35869,
								35889
							],
							[
								35916,
								35922
							],
							[
								35980,
								36004
							],
							[
								36177,
								36183
							],
							[
								36212,
								36232
							],
							[
								36259,
								36265
							],
							[
								36327,
								36351
							],
							[
								36524,
								36530
							],
							[
								36559,
								36579
							],
							[
								36606,
								36612
							],
							[
								36678,
								36702
							],
							[
								36875,
								36881
							],
							[
								36910,
								36928
							],
							[
								36953,
								36959
							],
							[
								37015,
								37037
							],
							[
								37208,
								37214
							],
							[
								37241,
								37259
							],
							[
								37284,
								37290
							],
							[
								37350,
								37372
							],
							[
								37543,
								37549
							],
							[
								37576,
								37594
							],
							[
								37619,
								37625
							],
							[
								37689,
								37711
							],
							[
								37882,
								37888
							],
							[
								37915,
								37921
							],
							[
								37934,
								37940
							],
							[
								37984,
								37994
							],
							[
								38153,
								38159
							],
							[
								38174,
								38180
							],
							[
								38193,
								38199
							],
							[
								38247,
								38257
							],
							[
								38416,
								38422
							],
							[
								38437,
								38443
							],
							[
								38456,
								38462
							],
							[
								38514,
								38524
							],
							[
								38683,
								38689
							],
							[
								38718,
								38722
							],
							[
								41914,
								41920
							],
							[
								42235,
								42259
							],
							[
								42407,
								42413
							]
						],
						"symlist":
						[
							"default_target",
							".PHONY",
							".NOTPARALLEL",
							".SUFFIXES",
							"%",
							"%",
							"%",
							"%",
							"%",
							".SUFFIXES",
							"$(VERBOSE).SILENT",
							"cmake_force",
							".PHONY",
							"install/strip",
							".PHONY",
							"install/strip/fast",
							".PHONY",
							"install/local",
							".PHONY",
							"install/local/fast",
							".PHONY",
							"install",
							".PHONY",
							"install/fast",
							".PHONY",
							"list_install_components",
							".PHONY",
							"list_install_components/fast",
							".PHONY",
							"rebuild_cache",
							".PHONY",
							"rebuild_cache/fast",
							".PHONY",
							"edit_cache",
							".PHONY",
							"edit_cache/fast",
							".PHONY",
							"all",
							".PHONY",
							"clean",
							".PHONY",
							"clean/fast",
							".PHONY",
							"preinstall",
							".PHONY",
							"preinstall/fast",
							".PHONY",
							"depend",
							".PHONY",
							"qjs-opencv/CMakeFiles/quickjs-opencv.dir/rule",
							".PHONY",
							"quickjs-opencv",
							".PHONY",
							"quickjs-opencv/fast",
							".PHONY",
							"qjs-opencv/CMakeFiles/qjs-opencv.dir/rule",
							".PHONY",
							"qjs-opencv",
							".PHONY",
							"qjs-opencv/fast",
							".PHONY",
							"dominant_colors_grabber.o",
							".PHONY",
							"dominant_colors_grabber.cpp.o",
							".PHONY",
							"dominant_colors_grabber.i",
							".PHONY",
							"dominant_colors_grabber.cpp.i",
							".PHONY",
							"dominant_colors_grabber.s",
							".PHONY",
							"dominant_colors_grabber.cpp.s",
							".PHONY",
							"geometry.o",
							".PHONY",
							"geometry.cpp.o",
							".PHONY",
							"geometry.i",
							".PHONY",
							"geometry.cpp.i",
							".PHONY",
							"geometry.s",
							".PHONY",
							"geometry.cpp.s",
							".PHONY",
							"gifenc/gifenc.o",
							".PHONY",
							"gifenc/gifenc.c.o",
							".PHONY",
							"gifenc/gifenc.i",
							".PHONY",
							"gifenc/gifenc.c.i",
							".PHONY",
							"gifenc/gifenc.s",
							".PHONY",
							"gifenc/gifenc.c.s",
							".PHONY",
							"highgui.o",
							".PHONY",
							"highgui.cpp.o",
							".PHONY",
							"highgui.i",
							".PHONY",
							"highgui.cpp.i",
							".PHONY",
							"highgui.s",
							".PHONY",
							"highgui.cpp.s",
							".PHONY",
							"init_module.o",
							".PHONY",
							"init_module.cpp.o",
							".PHONY",
							"init_module.i",
							".PHONY",
							"init_module.cpp.i",
							".PHONY",
							"init_module.s",
							".PHONY",
							"init_module.cpp.s",
							".PHONY",
							"js_clahe.o",
							".PHONY",
							"js_clahe.cpp.o",
							".PHONY",
							"js_clahe.i",
							".PHONY",
							"js_clahe.cpp.i",
							".PHONY",
							"js_clahe.s",
							".PHONY",
							"js_clahe.cpp.s",
							".PHONY",
							"js_contour.o",
							".PHONY",
							"js_contour.cpp.o",
							".PHONY",
							"js_contour.i",
							".PHONY",
							"js_contour.cpp.i",
							".PHONY",
							"js_contour.s",
							".PHONY",
							"js_contour.cpp.s",
							".PHONY",
							"js_cv.o",
							".PHONY",
							"js_cv.cpp.o",
							".PHONY",
							"js_cv.i",
							".PHONY",
							"js_cv.cpp.i",
							".PHONY",
							"js_cv.s",
							".PHONY",
							"js_cv.cpp.s",
							".PHONY",
							"js_draw.o",
							".PHONY",
							"js_draw.cpp.o",
							".PHONY",
							"js_draw.i",
							".PHONY",
							"js_draw.cpp.i",
							".PHONY",
							"js_draw.s",
							".PHONY",
							"js_draw.cpp.s",
							".PHONY",
							"js_fast_line_detector.o",
							".PHONY",
							"js_fast_line_detector.cpp.o",
							".PHONY",
							"js_fast_line_detector.i",
							".PHONY",
							"js_fast_line_detector.cpp.i",
							".PHONY",
							"js_fast_line_detector.s",
							".PHONY",
							"js_fast_line_detector.cpp.s",
							".PHONY",
							"js_feature2d.o",
							".PHONY",
							"js_feature2d.cpp.o",
							".PHONY",
							"js_feature2d.i",
							".PHONY",
							"js_feature2d.cpp.i",
							".PHONY",
							"js_feature2d.s",
							".PHONY",
							"js_feature2d.cpp.s",
							".PHONY",
							"js_imgproc.o",
							".PHONY",
							"js_imgproc.cpp.o",
							".PHONY",
							"js_imgproc.i",
							".PHONY",
							"js_imgproc.cpp.i",
							".PHONY",
							"js_imgproc.s",
							".PHONY",
							"js_imgproc.cpp.s",
							".PHONY",
							"js_keypoint.o",
							".PHONY",
							"js_keypoint.cpp.o",
							".PHONY",
							"js_keypoint.i",
							".PHONY",
							"js_keypoint.cpp.i",
							".PHONY",
							"js_keypoint.s",
							".PHONY",
							"js_keypoint.cpp.s",
							".PHONY",
							"js_line.o",
							".PHONY",
							"js_line.cpp.o",
							".PHONY",
							"js_line.i",
							".PHONY",
							"js_line.cpp.i",
							".PHONY",
							"js_line.s",
							".PHONY",
							"js_line.cpp.s",
							".PHONY",
							"js_line_iterator.o",
							".PHONY",
							"js_line_iterator.cpp.o",
							".PHONY",
							"js_line_iterator.i",
							".PHONY",
							"js_line_iterator.cpp.i",
							".PHONY",
							"js_line_iterator.s",
							".PHONY",
							"js_line_iterator.cpp.s",
							".PHONY",
							"js_line_segment_detector.o",
							".PHONY",
							"js_line_segment_detector.cpp.o",
							".PHONY",
							"js_line_segment_detector.i",
							".PHONY",
							"js_line_segment_detector.cpp.i",
							".PHONY",
							"js_line_segment_detector.s",
							".PHONY",
							"js_line_segment_detector.cpp.s",
							".PHONY",
							"js_mat.o",
							".PHONY",
							"js_mat.cpp.o",
							".PHONY",
							"js_mat.i",
							".PHONY",
							"js_mat.cpp.i",
							".PHONY",
							"js_mat.s",
							".PHONY",
							"js_mat.cpp.s",
							".PHONY",
							"js_point.o",
							".PHONY",
							"js_point.cpp.o",
							".PHONY",
							"js_point.i",
							".PHONY",
							"js_point.cpp.i",
							".PHONY",
							"js_point.s",
							".PHONY",
							"js_point.cpp.s",
							".PHONY",
							"js_point_iterator.o",
							".PHONY",
							"js_point_iterator.cpp.o",
							".PHONY",
							"js_point_iterator.i",
							".PHONY",
							"js_point_iterator.cpp.i",
							".PHONY",
							"js_point_iterator.s",
							".PHONY",
							"js_point_iterator.cpp.s",
							".PHONY",
							"js_rect.o",
							".PHONY",
							"js_rect.cpp.o",
							".PHONY",
							"js_rect.i",
							".PHONY",
							"js_rect.cpp.i",
							".PHONY",
							"js_rect.s",
							".PHONY",
							"js_rect.cpp.s",
							".PHONY",
							"js_rotated_rect.o",
							".PHONY",
							"js_rotated_rect.cpp.o",
							".PHONY",
							"js_rotated_rect.i",
							".PHONY",
							"js_rotated_rect.cpp.i",
							".PHONY",
							"js_rotated_rect.s",
							".PHONY",
							"js_rotated_rect.cpp.s",
							".PHONY",
							"js_size.o",
							".PHONY",
							"js_size.cpp.o",
							".PHONY",
							"js_size.i",
							".PHONY",
							"js_size.cpp.i",
							".PHONY",
							"js_size.s",
							".PHONY",
							"js_size.cpp.s",
							".PHONY",
							"js_slice_iterator.o",
							".PHONY",
							"js_slice_iterator.cpp.o",
							".PHONY",
							"js_slice_iterator.i",
							".PHONY",
							"js_slice_iterator.cpp.i",
							".PHONY",
							"js_slice_iterator.s",
							".PHONY",
							"js_slice_iterator.cpp.s",
							".PHONY",
							"js_subdiv2d.o",
							".PHONY",
							"js_subdiv2d.cpp.o",
							".PHONY",
							"js_subdiv2d.i",
							".PHONY",
							"js_subdiv2d.cpp.i",
							".PHONY",
							"js_subdiv2d.s",
							".PHONY",
							"js_subdiv2d.cpp.s",
							".PHONY",
							"js_umat.o",
							".PHONY",
							"js_umat.cpp.o",
							".PHONY",
							"js_umat.i",
							".PHONY",
							"js_umat.cpp.i",
							".PHONY",
							"js_umat.s",
							".PHONY",
							"js_umat.cpp.s",
							".PHONY",
							"js_utility.o",
							".PHONY",
							"js_utility.cpp.o",
							".PHONY",
							"js_utility.i",
							".PHONY",
							"js_utility.cpp.i",
							".PHONY",
							"js_utility.s",
							".PHONY",
							"js_utility.cpp.s",
							".PHONY",
							"js_video_capture.o",
							".PHONY",
							"js_video_capture.cpp.o",
							".PHONY",
							"js_video_capture.i",
							".PHONY",
							"js_video_capture.cpp.i",
							".PHONY",
							"js_video_capture.s",
							".PHONY",
							"js_video_capture.cpp.s",
							".PHONY",
							"js_video_writer.o",
							".PHONY",
							"js_video_writer.cpp.o",
							".PHONY",
							"js_video_writer.i",
							".PHONY",
							"js_video_writer.cpp.i",
							".PHONY",
							"js_video_writer.s",
							".PHONY",
							"js_video_writer.cpp.s",
							".PHONY",
							"jsbindings.o",
							".PHONY",
							"jsbindings.cpp.o",
							".PHONY",
							"jsbindings.i",
							".PHONY",
							"jsbindings.cpp.i",
							".PHONY",
							"jsbindings.s",
							".PHONY",
							"jsbindings.cpp.s",
							".PHONY",
							"line.o",
							".PHONY",
							"line.cpp.o",
							".PHONY",
							"line.i",
							".PHONY",
							"line.cpp.i",
							".PHONY",
							"line.s",
							".PHONY",
							"line.cpp.s",
							".PHONY",
							"lsd/src/lsd.o",
							".PHONY",
							"lsd/src/lsd.cpp.o",
							".PHONY",
							"lsd/src/lsd.i",
							".PHONY",
							"lsd/src/lsd.cpp.i",
							".PHONY",
							"lsd/src/lsd.s",
							".PHONY",
							"lsd/src/lsd.cpp.s",
							".PHONY",
							"lsd/src/lsd_opencv.o",
							".PHONY",
							"lsd/src/lsd_opencv.cpp.o",
							".PHONY",
							"lsd/src/lsd_opencv.i",
							".PHONY",
							"lsd/src/lsd_opencv.cpp.i",
							".PHONY",
							"lsd/src/lsd_opencv.s",
							".PHONY",
							"lsd/src/lsd_opencv.cpp.s",
							".PHONY",
							"lsd/src/lsd_wrap.o",
							".PHONY",
							"lsd/src/lsd_wrap.cpp.o",
							".PHONY",
							"lsd/src/lsd_wrap.i",
							".PHONY",
							"lsd/src/lsd_wrap.cpp.i",
							".PHONY",
							"lsd/src/lsd_wrap.s",
							".PHONY",
							"lsd/src/lsd_wrap.cpp.s",
							".PHONY",
							"util.o",
							".PHONY",
							"util.cpp.o",
							".PHONY",
							"util.i",
							".PHONY",
							"util.cpp.i",
							".PHONY",
							"util.s",
							".PHONY",
							"util.cpp.s",
							".PHONY",
							"help",
							".PHONY",
							"cmake_check_build_system",
							".PHONY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQAQAATGluZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgeDEoKQogIGdldCB5MSgpCiAgZ2V0IHgyKCkKICBnZXQgeTIoKQogIGdldCBhKCkKICBnZXQgYigpCiAgZ2V0IHNsb3BlKCkKICBnZXQgYW5nbGUoKQogIGdldCBhc3BlY3QoKQogIGdldCBsZW5ndGgoKQogIGdldCBwaXZvdCgpCiAgZ2V0IHRvKCkKICB4SW50ZXJjZXB0KCkKICB5SW50ZXJjZXB0KCkKICBzd2FwKCkKICBhdCgpCiAgaW50ZXJzZWN0KCkKICBlbmRwb2ludERpc3RhbmNlcygpCiAgZGlzdGFuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgdG9BcnJheSgpCiAgdG9Qb2ludHMoKQogIHRvU3RyaW5nKCkKICB2YWx1ZXMoKQogIGdldCBzdGFydCgpCiAgZ2V0IGVuZCgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBzdW0oKQAAAAAAAAAALhkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					92,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/mat.js",
						"symkeys":
						[
							[
								30,
								33
							],
							[
								73,
								86
							],
							[
								129,
								140
							],
							[
								188,
								201
							],
							[
								257,
								267
							],
							[
								323,
								333
							],
							[
								393,
								407
							],
							[
								463,
								473
							],
							[
								530,
								541
							],
							[
								598,
								609
							],
							[
								666,
								677
							],
							[
								733,
								743
							],
							[
								805,
								821
							],
							[
								882,
								897
							],
							[
								953,
								963
							],
							[
								1023,
								1037
							],
							[
								1098,
								1113
							],
							[
								1171,
								1183
							],
							[
								1240,
								1251
							],
							[
								1348,
								1353
							],
							[
								1450,
								1455
							],
							[
								1557,
								1567
							],
							[
								1669,
								1679
							],
							[
								1778,
								1785
							],
							[
								1882,
								1887
							],
							[
								1988,
								1997
							],
							[
								2094,
								2099
							],
							[
								2198,
								2205
							],
							[
								2304,
								2311
							],
							[
								2411,
								2419
							],
							[
								2518,
								2525
							],
							[
								2628,
								2639
							],
							[
								2736,
								2741
							],
							[
								2838,
								2843
							],
							[
								2939,
								2943
							],
							[
								3040,
								3045
							],
							[
								3142,
								3147
							],
							[
								3245,
								3251
							],
							[
								3348,
								3353
							],
							[
								3455,
								3465
							],
							[
								3561,
								3565
							],
							[
								3662,
								3667
							],
							[
								3766,
								3773
							],
							[
								3876,
								3887
							],
							[
								3987,
								3995
							],
							[
								4096,
								4105
							],
							[
								4206,
								4215
							],
							[
								4313,
								4319
							],
							[
								4419,
								4427
							],
							[
								4528,
								4537
							],
							[
								4888,
								4898
							],
							[
								5246,
								5274
							],
							[
								5361,
								5373
							],
							[
								5460,
								5472
							],
							[
								5559,
								5571
							],
							[
								5658,
								5670
							],
							[
								5757,
								5769
							],
							[
								5855,
								5866
							],
							[
								5953,
								5965
							],
							[
								6054,
								6068
							],
							[
								6156,
								6169
							]
						],
						"symlist":
						[
							"Mat",
							"constructor()",
							"MatIterator",
							"constructor()",
							"get cols()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"resize()",
							"step1()",
							"locateROI()",
							"ptr()",
							"and()",
							"or()",
							"xor()",
							"mul()",
							"zero()",
							"one()",
							"toString()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getUMat()",
							"keys()",
							"values()",
							"entries()",
							"get next()",
							"static getRotationMatrix2D()",
							"static add()",
							"static sub()",
							"static mul()",
							"static div()",
							"static and()",
							"static or()",
							"static xor()",
							"static zeros()",
							"static ones()"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					93,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								134,
								142
							],
							[
								189,
								197
							],
							[
								244,
								252
							],
							[
								299,
								307
							],
							[
								353,
								360
							],
							[
								406,
								413
							],
							[
								569,
								580
							],
							[
								630,
								641
							],
							[
								692,
								704
							],
							[
								755,
								767
							],
							[
								817,
								828
							],
							[
								875,
								883
							],
							[
								980,
								992
							],
							[
								1089,
								1101
							],
							[
								1192,
								1198
							],
							[
								1287,
								1291
							],
							[
								1387,
								1398
							],
							[
								1502,
								1521
							],
							[
								1616,
								1626
							],
							[
								1716,
								1721
							],
							[
								1811,
								1816
							],
							[
								1906,
								1911
							],
							[
								2001,
								2006
							],
							[
								2100,
								2109
							],
							[
								2204,
								2214
							],
							[
								2309,
								2319
							],
							[
								2412,
								2420
							],
							[
								2457,
								2468
							],
							[
								2528,
								2537
							],
							[
								2830,
								2843
							],
							[
								2923,
								2935
							]
						],
						"symlist":
						[
							"Line",
							"constructor()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get a()",
							"get b()",
							"get slope()",
							"get angle()",
							"get aspect()",
							"get length()",
							"get pivot()",
							"get to()",
							"xIntercept()",
							"yIntercept()",
							"swap()",
							"at()",
							"intersect()",
							"endpointDistances()",
							"distance()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"toArray()",
							"toPoints()",
							"toString()",
							"values()",
							"get start()",
							"get end()",
							"static from()",
							"static sum()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AgAATWF0CiAgY29uc3RydWN0b3IoKQpNYXRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgY29scygpCiAgZ2V0IHJvd3MoKQogIGdldCBjaGFubmVscygpCiAgZ2V0IHR5cGUoKQogIGdldCBkZXB0aCgpCiAgZ2V0IGVtcHR5KCkKICBnZXQgdG90YWwoKQogIGdldCBzaXplKCkKICBnZXQgY29udGludW91cygpCiAgZ2V0IHN1Ym1hdHJpeCgpCiAgZ2V0IHN0ZXAoKQogIGdldCBlbGVtU2l6ZSgpCiAgZ2V0IGVsZW1TaXplMSgpCiAgZ2V0IGJ1ZmZlcigpCiAgZ2V0IGFycmF5KCkKICBjb2woKQogIHJvdygpCiAgY29sUmFuZ2UoKQogIHJvd1JhbmdlKCkKICBjbG9uZSgpCiAgcm9pKCkKICByZWxlYXNlKCkKICBkdXAoKQogIGNsZWFyKCkKICByZXNldCgpCiAgcmVzaXplKCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICBwdHIoKQogIGFuZCgpCiAgb3IoKQogIHhvcigpCiAgbXVsKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldFVNYXQoKQogIGtleXMoKQogIHZhbHVlcygpCiAgZW50cmllcygpCiAgZ2V0IG5leHQoKQogIHN0YXRpYyBnZXRSb3RhdGlvbk1hdHJpeDJEKCkKICBzdGF0aWMgYWRkKCkKICBzdGF0aWMgc3ViKCkKICBzdGF0aWMgbXVsKCkKICBzdGF0aWMgZGl2KCkKICBzdGF0aWMgYW5kKCkKICBzdGF0aWMgb3IoKQogIHN0YXRpYyB4b3IoKQogIHN0YXRpYyB6ZXJvcygpCiAgc3RhdGljIG9uZXMoKQAAAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					94,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/mat.js",
						"symkeys":
						[
							[
								30,
								33
							],
							[
								73,
								86
							],
							[
								129,
								140
							],
							[
								188,
								201
							],
							[
								257,
								267
							],
							[
								323,
								333
							],
							[
								393,
								407
							],
							[
								463,
								473
							],
							[
								530,
								541
							],
							[
								598,
								609
							],
							[
								666,
								677
							],
							[
								733,
								743
							],
							[
								805,
								821
							],
							[
								882,
								897
							],
							[
								953,
								963
							],
							[
								1023,
								1037
							],
							[
								1098,
								1113
							],
							[
								1171,
								1183
							],
							[
								1240,
								1251
							],
							[
								1348,
								1353
							],
							[
								1450,
								1455
							],
							[
								1557,
								1567
							],
							[
								1669,
								1679
							],
							[
								1778,
								1785
							],
							[
								1882,
								1887
							],
							[
								1988,
								1997
							],
							[
								2094,
								2099
							],
							[
								2198,
								2205
							],
							[
								2304,
								2311
							],
							[
								2411,
								2419
							],
							[
								2518,
								2525
							],
							[
								2628,
								2639
							],
							[
								2736,
								2741
							],
							[
								2838,
								2843
							],
							[
								2939,
								2943
							],
							[
								3040,
								3045
							],
							[
								3142,
								3147
							],
							[
								3245,
								3251
							],
							[
								3348,
								3353
							],
							[
								3455,
								3465
							],
							[
								3561,
								3565
							],
							[
								3662,
								3667
							],
							[
								3766,
								3773
							],
							[
								3876,
								3887
							],
							[
								3987,
								3995
							],
							[
								4096,
								4105
							],
							[
								4206,
								4215
							],
							[
								4313,
								4319
							],
							[
								4419,
								4427
							],
							[
								4528,
								4537
							],
							[
								4888,
								4898
							],
							[
								5246,
								5274
							],
							[
								5361,
								5373
							],
							[
								5460,
								5472
							],
							[
								5559,
								5571
							],
							[
								5658,
								5670
							],
							[
								5757,
								5769
							],
							[
								5855,
								5866
							],
							[
								5953,
								5965
							],
							[
								6054,
								6068
							],
							[
								6156,
								6169
							]
						],
						"symlist":
						[
							"Mat",
							"constructor()",
							"MatIterator",
							"constructor()",
							"get cols()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"resize()",
							"step1()",
							"locateROI()",
							"ptr()",
							"and()",
							"or()",
							"xor()",
							"mul()",
							"zero()",
							"one()",
							"toString()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getUMat()",
							"keys()",
							"values()",
							"entries()",
							"get next()",
							"static getRotationMatrix2D()",
							"static add()",
							"static sub()",
							"static mul()",
							"static div()",
							"static and()",
							"static or()",
							"static xor()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQAQAATGluZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgeDEoKQogIGdldCB5MSgpCiAgZ2V0IHgyKCkKICBnZXQgeTIoKQogIGdldCBhKCkKICBnZXQgYigpCiAgZ2V0IHNsb3BlKCkKICBnZXQgYW5nbGUoKQogIGdldCBhc3BlY3QoKQogIGdldCBsZW5ndGgoKQogIGdldCBwaXZvdCgpCiAgZ2V0IHRvKCkKICB4SW50ZXJjZXB0KCkKICB5SW50ZXJjZXB0KCkKICBzd2FwKCkKICBhdCgpCiAgaW50ZXJzZWN0KCkKICBlbmRwb2ludERpc3RhbmNlcygpCiAgZGlzdGFuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgdG9BcnJheSgpCiAgdG9Qb2ludHMoKQogIHRvU3RyaW5nKCkKICB2YWx1ZXMoKQogIGdldCBzdGFydCgpCiAgZ2V0IGVuZCgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBzdW0oKQAAAAAAAAAA+wIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								134,
								142
							],
							[
								189,
								197
							],
							[
								244,
								252
							],
							[
								299,
								307
							],
							[
								353,
								360
							],
							[
								406,
								413
							],
							[
								569,
								580
							],
							[
								630,
								641
							],
							[
								692,
								704
							],
							[
								755,
								767
							],
							[
								817,
								828
							],
							[
								875,
								883
							],
							[
								980,
								992
							],
							[
								1089,
								1101
							],
							[
								1192,
								1198
							],
							[
								1287,
								1291
							],
							[
								1387,
								1398
							],
							[
								1502,
								1521
							],
							[
								1616,
								1626
							],
							[
								1716,
								1721
							],
							[
								1811,
								1816
							],
							[
								1906,
								1911
							],
							[
								2001,
								2006
							],
							[
								2100,
								2109
							],
							[
								2204,
								2214
							],
							[
								2309,
								2319
							],
							[
								2412,
								2420
							],
							[
								2457,
								2468
							],
							[
								2528,
								2537
							],
							[
								2830,
								2843
							],
							[
								2923,
								2935
							]
						],
						"symlist":
						[
							"Line",
							"constructor()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get a()",
							"get b()",
							"get slope()",
							"get angle()",
							"get aspect()",
							"get length()",
							"get pivot()",
							"get to()",
							"xIntercept()",
							"yIntercept()",
							"swap()",
							"at()",
							"intersect()",
							"endpointDistances()",
							"distance()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"toArray()",
							"toPoints()",
							"toString()",
							"values()",
							"get start()",
							"get end()",
							"static from()",
							"static sum()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AgAATWF0CiAgY29uc3RydWN0b3IoKQpNYXRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgY29scygpCiAgZ2V0IHJvd3MoKQogIGdldCBjaGFubmVscygpCiAgZ2V0IHR5cGUoKQogIGdldCBkZXB0aCgpCiAgZ2V0IGVtcHR5KCkKICBnZXQgdG90YWwoKQogIGdldCBzaXplKCkKICBnZXQgY29udGludW91cygpCiAgZ2V0IHN1Ym1hdHJpeCgpCiAgZ2V0IHN0ZXAoKQogIGdldCBlbGVtU2l6ZSgpCiAgZ2V0IGVsZW1TaXplMSgpCiAgZ2V0IGJ1ZmZlcigpCiAgZ2V0IGFycmF5KCkKICBjb2woKQogIHJvdygpCiAgY29sUmFuZ2UoKQogIHJvd1JhbmdlKCkKICBjbG9uZSgpCiAgcm9pKCkKICByZWxlYXNlKCkKICBkdXAoKQogIGNsZWFyKCkKICByZXNldCgpCiAgcmVzaXplKCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICBwdHIoKQogIGFuZCgpCiAgb3IoKQogIHhvcigpCiAgbXVsKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldFVNYXQoKQogIGtleXMoKQogIHZhbHVlcygpCiAgZW50cmllcygpCiAgZ2V0IG5leHQoKQogIHN0YXRpYyBnZXRSb3RhdGlvbk1hdHJpeDJEKCkKICBzdGF0aWMgYWRkKCkKICBzdGF0aWMgc3ViKCkKICBzdGF0aWMgbXVsKCkKICBzdGF0aWMgZGl2KCkKICBzdGF0aWMgYW5kKCkKICBzdGF0aWMgb3IoKQogIHN0YXRpYyB4b3IoKQogIHN0YXRpYyB6ZXJvcygpCiAgc3RhdGljIG9uZXMoKQAAAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					96,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line_segment_detector.js",
						"symkeys":
						[
							[
								44,
								63
							],
							[
								119,
								132
							],
							[
								249,
								266
							],
							[
								374,
								382
							],
							[
								496,
								510
							]
						],
						"symlist":
						[
							"LineSegmentDetector",
							"constructor()",
							"compareSegments()",
							"detect()",
							"drawSegments()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQAQAATGluZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgeDEoKQogIGdldCB5MSgpCiAgZ2V0IHgyKCkKICBnZXQgeTIoKQogIGdldCBhKCkKICBnZXQgYigpCiAgZ2V0IHNsb3BlKCkKICBnZXQgYW5nbGUoKQogIGdldCBhc3BlY3QoKQogIGdldCBsZW5ndGgoKQogIGdldCBwaXZvdCgpCiAgZ2V0IHRvKCkKICB4SW50ZXJjZXB0KCkKICB5SW50ZXJjZXB0KCkKICBzd2FwKCkKICBhdCgpCiAgaW50ZXJzZWN0KCkKICBlbmRwb2ludERpc3RhbmNlcygpCiAgZGlzdGFuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgdG9BcnJheSgpCiAgdG9Qb2ludHMoKQogIHRvU3RyaW5nKCkKICB2YWx1ZXMoKQogIGdldCBzdGFydCgpCiAgZ2V0IGVuZCgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBzdW0oKQAAAAAAAAAAUwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					97,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/size.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								137,
								148
							],
							[
								199,
								211
							],
							[
								262,
								274
							],
							[
								324,
								335
							],
							[
								384,
								394
							],
							[
								487,
								495
							],
							[
								587,
								594
							],
							[
								686,
								693
							],
							[
								784,
								790
							],
							[
								885,
								895
							],
							[
								989,
								998
							],
							[
								1093,
								1103
							],
							[
								1199,
								1210
							],
							[
								1306,
								1317
							],
							[
								1414,
								1426
							],
							[
								1518,
								1525
							],
							[
								1620,
								1630
							],
							[
								1725,
								1735
							],
							[
								1825,
								1830
							],
							[
								1920,
								1925
							],
							[
								2015,
								2020
							],
							[
								2110,
								2115
							],
							[
								2154,
								2166
							]
						],
						"symlist":
						[
							"Size",
							"constructor()",
							"get width()",
							"get height()",
							"get aspect()",
							"get empty()",
							"get area()",
							"equals()",
							"round()",
							"floor()",
							"ceil()",
							"toObject()",
							"toArray()",
							"fitWidth()",
							"fitHeight()",
							"fitInside()",
							"fitOutside()",
							"align()",
							"toString()",
							"toSource()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"get values()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTAAAATGluZVNlZ21lbnREZXRlY3RvcgogIGNvbnN0cnVjdG9yKCkKICBjb21wYXJlU2VnbWVudHMoKQogIGRldGVjdCgpCiAgZHJhd1NlZ21lbnRzKCkAAAAAAAAAACcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					98,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/point_iterator.js",
						"symkeys":
						[
							[
								38,
								51
							],
							[
								101,
								114
							],
							[
								177,
								187
							]
						],
						"symlist":
						[
							"PointIterator",
							"constructor()",
							"get next()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAnAQAAU2l6ZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgd2lkdGgoKQogIGdldCBoZWlnaHQoKQogIGdldCBhc3BlY3QoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGVxdWFscygpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b09iamVjdCgpCiAgdG9BcnJheSgpCiAgZml0V2lkdGgoKQogIGZpdEhlaWdodCgpCiAgZml0SW5zaWRlKCkKICBmaXRPdXRzaWRlKCkKICBhbGlnbigpCiAgdG9TdHJpbmcoKQogIHRvU291cmNlKCkKICBhZGQoKQogIHN1YigpCiAgbXVsKCkKICBkaXYoKQogIGdldCB2YWx1ZXMoKQAAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					99,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/rect.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								133,
								140
							],
							[
								186,
								193
							],
							[
								243,
								254
							],
							[
								305,
								317
							],
							[
								364,
								372
							],
							[
								419,
								427
							],
							[
								474,
								482
							],
							[
								529,
								537
							],
							[
								587,
								598
							],
							[
								647,
								657
							],
							[
								704,
								712
							],
							[
								759,
								767
							],
							[
								862,
								872
							],
							[
								922,
								933
							],
							[
								982,
								992
							],
							[
								1081,
								1085
							],
							[
								1174,
								1178
							],
							[
								1270,
								1277
							],
							[
								1370,
								1378
							],
							[
								1471,
								1479
							],
							[
								1572,
								1580
							],
							[
								1672,
								1679
							],
							[
								1774,
								1784
							],
							[
								1879,
								1889
							],
							[
								1982,
								1990
							],
							[
								2082,
								2089
							],
							[
								2184,
								2194
							],
							[
								2288,
								2297
							],
							[
								2479,
								2492
							]
						],
						"symlist":
						[
							"Rect",
							"constructor()",
							"get x()",
							"get y()",
							"get width()",
							"get height()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get point()",
							"get size()",
							"get tl()",
							"get br()",
							"contains()",
							"get empty()",
							"get area()",
							"br()",
							"tl()",
							"inset()",
							"outset()",
							"hsplit()",
							"vsplit()",
							"merge()",
							"toString()",
							"toSource()",
							"equals()",
							"round()",
							"toObject()",
							"toArray()",
							"static from()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAUG9pbnRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgbmV4dCgpAAAAAAAAAABlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/rotated_rect.js",
						"symkeys":
						[
							[
								36,
								47
							],
							[
								95,
								108
							],
							[
								166,
								178
							],
							[
								234,
								244
							],
							[
								301,
								312
							],
							[
								418,
								432
							],
							[
								540,
								556
							],
							[
								656,
								664
							],
							[
								867,
								880
							]
						],
						"symlist":
						[
							"RotatedRect",
							"constructor()",
							"get center()",
							"get size()",
							"get angle()",
							"boundingRect()",
							"boundingRect2f()",
							"points()",
							"static from()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlAQAAUmVjdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgeCgpCiAgZ2V0IHkoKQogIGdldCB3aWR0aCgpCiAgZ2V0IGhlaWdodCgpCiAgZ2V0IHgxKCkKICBnZXQgeTEoKQogIGdldCB4MigpCiAgZ2V0IHkyKCkKICBnZXQgcG9pbnQoKQogIGdldCBzaXplKCkKICBnZXQgdGwoKQogIGdldCBicigpCiAgY29udGFpbnMoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGJyKCkKICB0bCgpCiAgaW5zZXQoKQogIG91dHNldCgpCiAgaHNwbGl0KCkKICB2c3BsaXQoKQogIG1lcmdlKCkKICB0b1N0cmluZygpCiAgdG9Tb3VyY2UoKQogIGVxdWFscygpCiAgcm91bmQoKQogIHRvT2JqZWN0KCkKICB0b0FycmF5KCkKICBzdGF0aWMgZnJvbSgpAAAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/size.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								137,
								148
							],
							[
								199,
								211
							],
							[
								262,
								274
							],
							[
								324,
								335
							],
							[
								384,
								394
							],
							[
								487,
								495
							],
							[
								587,
								594
							],
							[
								686,
								693
							],
							[
								784,
								790
							],
							[
								885,
								895
							],
							[
								989,
								998
							],
							[
								1093,
								1103
							],
							[
								1199,
								1210
							],
							[
								1306,
								1317
							],
							[
								1414,
								1426
							],
							[
								1518,
								1525
							],
							[
								1620,
								1630
							],
							[
								1725,
								1735
							],
							[
								1825,
								1830
							],
							[
								1920,
								1925
							],
							[
								2015,
								2020
							],
							[
								2110,
								2115
							],
							[
								2154,
								2166
							]
						],
						"symlist":
						[
							"Size",
							"constructor()",
							"get width()",
							"get height()",
							"get aspect()",
							"get empty()",
							"get area()",
							"equals()",
							"round()",
							"floor()",
							"ceil()",
							"toObject()",
							"toArray()",
							"fitWidth()",
							"fitHeight()",
							"fitInside()",
							"fitOutside()",
							"align()",
							"toString()",
							"toSource()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"get values()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACEAAAAUm90YXRlZFJlY3QKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IGNlbnRlcigpCiAgZ2V0IHNpemUoKQogIGdldCBhbmdsZSgpCiAgYm91bmRpbmdSZWN0KCkKICBib3VuZGluZ1JlY3QyZigpCiAgcG9pbnRzKCkKICBzdGF0aWMgZnJvbSgpAAAAAAAAAAAnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/subdiv2d.js",
						"symkeys":
						[
							[
								33,
								41
							],
							[
								86,
								99
							],
							[
								197,
								206
							],
							[
								304,
								313
							],
							[
								415,
								428
							],
							[
								526,
								535
							],
							[
								637,
								650
							],
							[
								759,
								779
							],
							[
								885,
								902
							],
							[
								1002,
								1013
							],
							[
								1123,
								1144
							],
							[
								1247,
								1261
							],
							[
								1358,
								1366
							],
							[
								1463,
								1471
							],
							[
								1570,
								1580
							],
							[
								1681,
								1693
							],
							[
								1791,
								1800
							]
						],
						"symlist":
						[
							"Subdiv2D",
							"constructor()",
							"edgeDst()",
							"edgeOrg()",
							"findNearest()",
							"getEdge()",
							"getEdgeList()",
							"getLeadingEdgeList()",
							"getTriangleList()",
							"getVertex()",
							"getVoronoiFacetList()",
							"initDelaunay()",
							"insert()",
							"locate()",
							"nextEdge()",
							"rotateEdge()",
							"symEdge()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAnAQAAU2l6ZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgd2lkdGgoKQogIGdldCBoZWlnaHQoKQogIGdldCBhc3BlY3QoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGVxdWFscygpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b09iamVjdCgpCiAgdG9BcnJheSgpCiAgZml0V2lkdGgoKQogIGZpdEhlaWdodCgpCiAgZml0SW5zaWRlKCkKICBmaXRPdXRzaWRlKCkKICBhbGlnbigpCiAgdG9TdHJpbmcoKQogIHRvU291cmNlKCkKICBhZGQoKQogIHN1YigpCiAgbXVsKCkKICBkaXYoKQogIGdldCB2YWx1ZXMoKQAAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/mat.js",
						"symkeys":
						[
							[
								30,
								33
							],
							[
								73,
								86
							],
							[
								129,
								140
							],
							[
								188,
								201
							],
							[
								257,
								267
							],
							[
								323,
								333
							],
							[
								393,
								407
							],
							[
								463,
								473
							],
							[
								530,
								541
							],
							[
								598,
								609
							],
							[
								666,
								677
							],
							[
								733,
								743
							],
							[
								805,
								821
							],
							[
								882,
								897
							],
							[
								953,
								963
							],
							[
								1023,
								1037
							],
							[
								1098,
								1113
							],
							[
								1171,
								1183
							],
							[
								1240,
								1251
							],
							[
								1348,
								1353
							],
							[
								1450,
								1455
							],
							[
								1557,
								1567
							],
							[
								1669,
								1679
							],
							[
								1778,
								1785
							],
							[
								1882,
								1887
							],
							[
								1988,
								1997
							],
							[
								2094,
								2099
							],
							[
								2198,
								2205
							],
							[
								2304,
								2311
							],
							[
								2411,
								2419
							],
							[
								2518,
								2525
							],
							[
								2628,
								2639
							],
							[
								2736,
								2741
							],
							[
								2838,
								2843
							],
							[
								2939,
								2943
							],
							[
								3040,
								3045
							],
							[
								3142,
								3147
							],
							[
								3245,
								3251
							],
							[
								3348,
								3353
							],
							[
								3455,
								3465
							],
							[
								3561,
								3565
							],
							[
								3662,
								3667
							],
							[
								3766,
								3773
							],
							[
								3876,
								3887
							],
							[
								3987,
								3995
							],
							[
								4096,
								4105
							],
							[
								4206,
								4215
							],
							[
								4313,
								4319
							],
							[
								4419,
								4427
							],
							[
								4528,
								4537
							],
							[
								4888,
								4898
							],
							[
								5246,
								5274
							],
							[
								5361,
								5373
							],
							[
								5460,
								5472
							],
							[
								5559,
								5571
							],
							[
								5658,
								5670
							],
							[
								5757,
								5769
							],
							[
								5855,
								5866
							],
							[
								5953,
								5965
							],
							[
								6054,
								6068
							],
							[
								6156,
								6169
							]
						],
						"symlist":
						[
							"Mat",
							"constructor()",
							"MatIterator",
							"constructor()",
							"get cols()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"resize()",
							"step1()",
							"locateROI()",
							"ptr()",
							"and()",
							"or()",
							"xor()",
							"mul()",
							"zero()",
							"one()",
							"toString()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getUMat()",
							"keys()",
							"values()",
							"entries()",
							"get next()",
							"static getRotationMatrix2D()",
							"static add()",
							"static sub()",
							"static mul()",
							"static div()",
							"static and()",
							"static or()",
							"static xor()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAU3ViZGl2MkQKICBjb25zdHJ1Y3RvcigpCiAgZWRnZURzdCgpCiAgZWRnZU9yZygpCiAgZmluZE5lYXJlc3QoKQogIGdldEVkZ2UoKQogIGdldEVkZ2VMaXN0KCkKICBnZXRMZWFkaW5nRWRnZUxpc3QoKQogIGdldFRyaWFuZ2xlTGlzdCgpCiAgZ2V0VmVydGV4KCkKICBnZXRWb3Jvbm9pRmFjZXRMaXN0KCkKICBpbml0RGVsYXVuYXkoKQogIGluc2VydCgpCiAgbG9jYXRlKCkKICBuZXh0RWRnZSgpCiAgcm90YXRlRWRnZSgpCiAgc3ltRWRnZSgpAAAAAAAAAAD7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								134,
								142
							],
							[
								189,
								197
							],
							[
								244,
								252
							],
							[
								299,
								307
							],
							[
								353,
								360
							],
							[
								406,
								413
							],
							[
								569,
								580
							],
							[
								630,
								641
							],
							[
								692,
								704
							],
							[
								755,
								767
							],
							[
								817,
								828
							],
							[
								875,
								883
							],
							[
								980,
								992
							],
							[
								1089,
								1101
							],
							[
								1192,
								1198
							],
							[
								1287,
								1291
							],
							[
								1387,
								1398
							],
							[
								1502,
								1521
							],
							[
								1616,
								1626
							],
							[
								1716,
								1721
							],
							[
								1811,
								1816
							],
							[
								1906,
								1911
							],
							[
								2001,
								2006
							],
							[
								2100,
								2109
							],
							[
								2204,
								2214
							],
							[
								2309,
								2319
							],
							[
								2412,
								2420
							],
							[
								2457,
								2468
							],
							[
								2528,
								2537
							],
							[
								2830,
								2843
							],
							[
								2923,
								2935
							]
						],
						"symlist":
						[
							"Line",
							"constructor()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get a()",
							"get b()",
							"get slope()",
							"get angle()",
							"get aspect()",
							"get length()",
							"get pivot()",
							"get to()",
							"xIntercept()",
							"yIntercept()",
							"swap()",
							"at()",
							"intersect()",
							"endpointDistances()",
							"distance()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"toArray()",
							"toPoints()",
							"toString()",
							"values()",
							"get start()",
							"get end()",
							"static from()",
							"static sum()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AgAATWF0CiAgY29uc3RydWN0b3IoKQpNYXRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgY29scygpCiAgZ2V0IHJvd3MoKQogIGdldCBjaGFubmVscygpCiAgZ2V0IHR5cGUoKQogIGdldCBkZXB0aCgpCiAgZ2V0IGVtcHR5KCkKICBnZXQgdG90YWwoKQogIGdldCBzaXplKCkKICBnZXQgY29udGludW91cygpCiAgZ2V0IHN1Ym1hdHJpeCgpCiAgZ2V0IHN0ZXAoKQogIGdldCBlbGVtU2l6ZSgpCiAgZ2V0IGVsZW1TaXplMSgpCiAgZ2V0IGJ1ZmZlcigpCiAgZ2V0IGFycmF5KCkKICBjb2woKQogIHJvdygpCiAgY29sUmFuZ2UoKQogIHJvd1JhbmdlKCkKICBjbG9uZSgpCiAgcm9pKCkKICByZWxlYXNlKCkKICBkdXAoKQogIGNsZWFyKCkKICByZXNldCgpCiAgcmVzaXplKCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICBwdHIoKQogIGFuZCgpCiAgb3IoKQogIHhvcigpCiAgbXVsKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldFVNYXQoKQogIGtleXMoKQogIHZhbHVlcygpCiAgZW50cmllcygpCiAgZ2V0IG5leHQoKQogIHN0YXRpYyBnZXRSb3RhdGlvbk1hdHJpeDJEKCkKICBzdGF0aWMgYWRkKCkKICBzdGF0aWMgc3ViKCkKICBzdGF0aWMgbXVsKCkKICBzdGF0aWMgZGl2KCkKICBzdGF0aWMgYW5kKCkKICBzdGF0aWMgb3IoKQogIHN0YXRpYyB4b3IoKQogIHN0YXRpYyB6ZXJvcygpCiAgc3RhdGljIG9uZXMoKQAAAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/parse-iwyu.js",
						"symkeys":
						[
							[
								78,
								102
							],
							[
								153,
								157
							],
							[
								162,
								179
							],
							[
								386,
								400
							],
							[
								454,
								464
							],
							[
								486,
								502
							],
							[
								570,
								574
							],
							[
								599,
								624
							],
							[
								885,
								891
							],
							[
								1034,
								1038
							],
							[
								1091,
								1113
							],
							[
								1538,
								1542
							],
							[
								1830,
								1837
							],
							[
								1902,
								1909
							],
							[
								2908,
								2915
							],
							[
								2982,
								3006
							],
							[
								3712,
								3737
							],
							[
								3795,
								3830
							],
							[
								3879,
								3914
							]
						],
						"symlist":
						[
							"function IsInclude(line)",
							"File",
							"constructor(name)",
							"get includes()",
							"([i,l]) =>",
							"removeIncludes()",
							"l =>",
							"replaceIncludes(includes)",
							"save()",
							"File",
							"function main(...args)",
							"p =>",
							"line =>",
							"line =>",
							"line =>",
							"function ReplaceStd(str)",
							"function IncludeName(str)",
							"function QuotesToAngleBrackets(str)",
							"function AngleBracketsToQuotes(str)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQAQAATGluZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgeDEoKQogIGdldCB5MSgpCiAgZ2V0IHgyKCkKICBnZXQgeTIoKQogIGdldCBhKCkKICBnZXQgYigpCiAgZ2V0IHNsb3BlKCkKICBnZXQgYW5nbGUoKQogIGdldCBhc3BlY3QoKQogIGdldCBsZW5ndGgoKQogIGdldCBwaXZvdCgpCiAgZ2V0IHRvKCkKICB4SW50ZXJjZXB0KCkKICB5SW50ZXJjZXB0KCkKICBzd2FwKCkKICBhdCgpCiAgaW50ZXJzZWN0KCkKICBlbmRwb2ludERpc3RhbmNlcygpCiAgZGlzdGFuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgdG9BcnJheSgpCiAgdG9Qb2ludHMoKQogIHRvU3RyaW5nKCkKICB2YWx1ZXMoKQogIGdldCBzdGFydCgpCiAgZ2V0IGVuZCgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBzdW0oKQAAAAAAAAAAFAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/point_iterator.js",
						"symkeys":
						[
							[
								38,
								51
							],
							[
								101,
								114
							],
							[
								177,
								187
							]
						],
						"symlist":
						[
							"PointIterator",
							"constructor()",
							"get next()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAQAASXNJbmNsdWRlKGxpbmUpCkZpbGUKICBjb25zdHJ1Y3RvcihuYW1lKQogIGdldCBpbmNsdWRlcygpCihbaSxsXSkgPT4KICByZW1vdmVJbmNsdWRlcygpCiAgbCA9PgogIHJlcGxhY2VJbmNsdWRlcyhpbmNsdWRlcykKICBzYXZlKCkKRmlsZQogIG1haW4oLi4uYXJncykKICBwID0+CiAgbGluZSA9PgogIGxpbmUgPT4KICBsaW5lID0+ClJlcGxhY2VTdGQoc3RyKQpJbmNsdWRlTmFtZShzdHIpClF1b3Rlc1RvQW5nbGVCcmFja2V0cyhzdHIpCkFuZ2xlQnJhY2tldHNUb1F1b3RlcyhzdHIpAAAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/point.js",
						"symkeys":
						[
							[
								30,
								35
							],
							[
								77,
								90
							],
							[
								137,
								144
							],
							[
								191,
								198
							],
							[
								291,
								298
							],
							[
								389,
								394
							],
							[
								488,
								496
							],
							[
								594,
								606
							],
							[
								697,
								702
							],
							[
								793,
								798
							],
							[
								889,
								894
							],
							[
								985,
								990
							],
							[
								1082,
								1088
							],
							[
								1179,
								1184
							],
							[
								1277,
								1284
							],
							[
								1377,
								1384
							],
							[
								1477,
								1484
							],
							[
								1576,
								1582
							],
							[
								1678,
								1688
							],
							[
								1783,
								1792
							],
							[
								2231,
								2244
							],
							[
								2331,
								2349
							],
							[
								2431,
								2444
							],
							[
								2530,
								2547
							]
						],
						"symlist":
						[
							"Point",
							"constructor()",
							"get x()",
							"get y()",
							"cross()",
							"dot()",
							"inside()",
							"difference()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"norm()",
							"abs()",
							"angle()",
							"round()",
							"floor()",
							"ceil()",
							"toString()",
							"toArray()",
							"static from()",
							"static fromAngle()",
							"static diff()",
							"static distance()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAUG9pbnRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgbmV4dCgpAAAAAAAAAAAPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/rect.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								133,
								140
							],
							[
								186,
								193
							],
							[
								243,
								254
							],
							[
								305,
								317
							],
							[
								364,
								372
							],
							[
								419,
								427
							],
							[
								474,
								482
							],
							[
								529,
								537
							],
							[
								587,
								598
							],
							[
								647,
								657
							],
							[
								704,
								712
							],
							[
								759,
								767
							],
							[
								862,
								872
							],
							[
								922,
								933
							],
							[
								982,
								992
							],
							[
								1081,
								1085
							],
							[
								1174,
								1178
							],
							[
								1270,
								1277
							],
							[
								1370,
								1378
							],
							[
								1471,
								1479
							],
							[
								1572,
								1580
							],
							[
								1672,
								1679
							],
							[
								1774,
								1784
							],
							[
								1879,
								1889
							],
							[
								1982,
								1990
							],
							[
								2082,
								2089
							],
							[
								2184,
								2194
							],
							[
								2288,
								2297
							],
							[
								2479,
								2492
							]
						],
						"symlist":
						[
							"Rect",
							"constructor()",
							"get x()",
							"get y()",
							"get width()",
							"get height()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get point()",
							"get size()",
							"get tl()",
							"get br()",
							"contains()",
							"get empty()",
							"get area()",
							"br()",
							"tl()",
							"inset()",
							"outset()",
							"hsplit()",
							"vsplit()",
							"merge()",
							"toString()",
							"toSource()",
							"equals()",
							"round()",
							"toObject()",
							"toArray()",
							"static from()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAQAAUG9pbnQKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IHgoKQogIGdldCB5KCkKICBjcm9zcygpCiAgZG90KCkKICBpbnNpZGUoKQogIGRpZmZlcmVuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgbm9ybSgpCiAgYWJzKCkKICBhbmdsZSgpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b1N0cmluZygpCiAgdG9BcnJheSgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBmcm9tQW5nbGUoKQogIHN0YXRpYyBkaWZmKCkKICBzdGF0aWMgZGlzdGFuY2UoKQAAAAAAAAAAZQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/build-opencv.sh",
						"symkeys":
						[
							[
								0,
								15
							],
							[
								610,
								624
							],
							[
								915,
								931
							],
							[
								1777,
								1789
							]
						],
						"symlist":
						[
							"download_opencv",
							"prepare_opencv",
							"configure_opencv",
							"build_opencv"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlAQAAUmVjdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgeCgpCiAgZ2V0IHkoKQogIGdldCB3aWR0aCgpCiAgZ2V0IGhlaWdodCgpCiAgZ2V0IHgxKCkKICBnZXQgeTEoKQogIGdldCB4MigpCiAgZ2V0IHkyKCkKICBnZXQgcG9pbnQoKQogIGdldCBzaXplKCkKICBnZXQgdGwoKQogIGdldCBicigpCiAgY29udGFpbnMoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGJyKCkKICB0bCgpCiAgaW5zZXQoKQogIG91dHNldCgpCiAgaHNwbGl0KCkKICB2c3BsaXQoKQogIG1lcmdlKCkKICB0b1N0cmluZygpCiAgdG9Tb3VyY2UoKQogIGVxdWFscygpCiAgcm91bmQoKQogIHRvT2JqZWN0KCkKICB0b0FycmF5KCkKICBzdGF0aWMgZnJvbSgpAAAAAAAAAABEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
						"symkeys":
						[
							[
								129,
								140
							],
							[
								291,
								301
							],
							[
								344,
								355
							],
							[
								396,
								414
							],
							[
								446,
								464
							],
							[
								532,
								543
							],
							[
								759,
								778
							]
						],
						"symlist":
						[
							"js_mat_init",
							"js_mat_new",
							"js_mat_init",
							"js_init_module_mat",
							"js_mat_constructor",
							"js_mat_wrap",
							"js_mat_data_nothrow"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAAAAICBkb3dubG9hZF9vcGVuY3YKICBwcmVwYXJlX29wZW5jdgogIGNvbmZpZ3VyZV9vcGVuY3YKICBidWlsZF9vcGVuY3YAAAAAAAAAAHYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/line.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								134,
								142
							],
							[
								189,
								197
							],
							[
								244,
								252
							],
							[
								299,
								307
							],
							[
								353,
								360
							],
							[
								406,
								413
							],
							[
								569,
								580
							],
							[
								630,
								641
							],
							[
								692,
								704
							],
							[
								755,
								767
							],
							[
								817,
								828
							],
							[
								875,
								883
							],
							[
								980,
								992
							],
							[
								1089,
								1101
							],
							[
								1192,
								1198
							],
							[
								1287,
								1291
							],
							[
								1387,
								1398
							],
							[
								1502,
								1521
							],
							[
								1616,
								1626
							],
							[
								1716,
								1721
							],
							[
								1811,
								1816
							],
							[
								1906,
								1911
							],
							[
								2001,
								2006
							],
							[
								2100,
								2109
							],
							[
								2204,
								2214
							],
							[
								2309,
								2319
							],
							[
								2412,
								2420
							],
							[
								2457,
								2468
							],
							[
								2528,
								2537
							],
							[
								2830,
								2843
							],
							[
								2923,
								2935
							]
						],
						"symlist":
						[
							"Line",
							"constructor()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get a()",
							"get b()",
							"get slope()",
							"get angle()",
							"get aspect()",
							"get length()",
							"get pivot()",
							"get to()",
							"xIntercept()",
							"yIntercept()",
							"swap()",
							"at()",
							"intersect()",
							"endpointDistances()",
							"distance()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"toArray()",
							"toPoints()",
							"toString()",
							"values()",
							"get start()",
							"get end()",
							"static from()",
							"static sum()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB2AAAAICBqc19tYXRfaW5pdAogIGpzX21hdF9uZXcKICBqc19tYXRfaW5pdAogIGpzX2luaXRfbW9kdWxlX21hdAogIGpzX21hdF9jb25zdHJ1Y3RvcgogIGpzX21hdF93cmFwCiAganNfbWF0X2RhdGFfbm90aHJvdwAAAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/mat.js",
						"symkeys":
						[
							[
								30,
								33
							],
							[
								73,
								86
							],
							[
								129,
								140
							],
							[
								188,
								201
							],
							[
								257,
								267
							],
							[
								323,
								333
							],
							[
								393,
								407
							],
							[
								463,
								473
							],
							[
								530,
								541
							],
							[
								598,
								609
							],
							[
								666,
								677
							],
							[
								733,
								743
							],
							[
								805,
								821
							],
							[
								882,
								897
							],
							[
								953,
								963
							],
							[
								1023,
								1037
							],
							[
								1098,
								1113
							],
							[
								1171,
								1183
							],
							[
								1240,
								1251
							],
							[
								1348,
								1353
							],
							[
								1450,
								1455
							],
							[
								1557,
								1567
							],
							[
								1669,
								1679
							],
							[
								1778,
								1785
							],
							[
								1882,
								1887
							],
							[
								1988,
								1997
							],
							[
								2094,
								2099
							],
							[
								2198,
								2205
							],
							[
								2304,
								2311
							],
							[
								2411,
								2419
							],
							[
								2518,
								2525
							],
							[
								2628,
								2639
							],
							[
								2736,
								2741
							],
							[
								2838,
								2843
							],
							[
								2939,
								2943
							],
							[
								3040,
								3045
							],
							[
								3142,
								3147
							],
							[
								3245,
								3251
							],
							[
								3348,
								3353
							],
							[
								3455,
								3465
							],
							[
								3561,
								3565
							],
							[
								3662,
								3667
							],
							[
								3766,
								3773
							],
							[
								3876,
								3887
							],
							[
								3987,
								3995
							],
							[
								4096,
								4105
							],
							[
								4206,
								4215
							],
							[
								4313,
								4319
							],
							[
								4419,
								4427
							],
							[
								4528,
								4537
							],
							[
								4888,
								4898
							],
							[
								5246,
								5274
							],
							[
								5361,
								5373
							],
							[
								5460,
								5472
							],
							[
								5559,
								5571
							],
							[
								5658,
								5670
							],
							[
								5757,
								5769
							],
							[
								5855,
								5866
							],
							[
								5953,
								5965
							],
							[
								6054,
								6068
							],
							[
								6156,
								6169
							]
						],
						"symlist":
						[
							"Mat",
							"constructor()",
							"MatIterator",
							"constructor()",
							"get cols()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"resize()",
							"step1()",
							"locateROI()",
							"ptr()",
							"and()",
							"or()",
							"xor()",
							"mul()",
							"zero()",
							"one()",
							"toString()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getUMat()",
							"keys()",
							"values()",
							"entries()",
							"get next()",
							"static getRotationMatrix2D()",
							"static add()",
							"static sub()",
							"static mul()",
							"static div()",
							"static and()",
							"static or()",
							"static xor()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQAQAATGluZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgeDEoKQogIGdldCB5MSgpCiAgZ2V0IHgyKCkKICBnZXQgeTIoKQogIGdldCBhKCkKICBnZXQgYigpCiAgZ2V0IHNsb3BlKCkKICBnZXQgYW5nbGUoKQogIGdldCBhc3BlY3QoKQogIGdldCBsZW5ndGgoKQogIGdldCBwaXZvdCgpCiAgZ2V0IHRvKCkKICB4SW50ZXJjZXB0KCkKICB5SW50ZXJjZXB0KCkKICBzd2FwKCkKICBhdCgpCiAgaW50ZXJzZWN0KCkKICBlbmRwb2ludERpc3RhbmNlcygpCiAgZGlzdGFuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgdG9BcnJheSgpCiAgdG9Qb2ludHMoKQogIHRvU3RyaW5nKCkKICB2YWx1ZXMoKQogIGdldCBzdGFydCgpCiAgZ2V0IGVuZCgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBzdW0oKQAAAAAAAAAA+wIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					113,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/palette.hpp",
						"symkeys":
						[
							[
								263,
								275
							],
							[
								795,
								808
							],
							[
								1566,
								1572
							],
							[
								1662,
								1669
							],
							[
								1871,
								1893
							],
							[
								2349,
								2361
							],
							[
								2838,
								2851
							]
						],
						"symlist":
						[
							"palette_read",
							"palette_apply",
							"square",
							"color3f",
							"color_distance_squared",
							"find_nearest",
							"palette_match"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AgAATWF0CiAgY29uc3RydWN0b3IoKQpNYXRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgY29scygpCiAgZ2V0IHJvd3MoKQogIGdldCBjaGFubmVscygpCiAgZ2V0IHR5cGUoKQogIGdldCBkZXB0aCgpCiAgZ2V0IGVtcHR5KCkKICBnZXQgdG90YWwoKQogIGdldCBzaXplKCkKICBnZXQgY29udGludW91cygpCiAgZ2V0IHN1Ym1hdHJpeCgpCiAgZ2V0IHN0ZXAoKQogIGdldCBlbGVtU2l6ZSgpCiAgZ2V0IGVsZW1TaXplMSgpCiAgZ2V0IGJ1ZmZlcigpCiAgZ2V0IGFycmF5KCkKICBjb2woKQogIHJvdygpCiAgY29sUmFuZ2UoKQogIHJvd1JhbmdlKCkKICBjbG9uZSgpCiAgcm9pKCkKICByZWxlYXNlKCkKICBkdXAoKQogIGNsZWFyKCkKICByZXNldCgpCiAgcmVzaXplKCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICBwdHIoKQogIGFuZCgpCiAgb3IoKQogIHhvcigpCiAgbXVsKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldFVNYXQoKQogIGtleXMoKQogIHZhbHVlcygpCiAgZW50cmllcygpCiAgZ2V0IG5leHQoKQogIHN0YXRpYyBnZXRSb3RhdGlvbk1hdHJpeDJEKCkKICBzdGF0aWMgYWRkKCkKICBzdGF0aWMgc3ViKCkKICBzdGF0aWMgbXVsKCkKICBzdGF0aWMgZGl2KCkKICBzdGF0aWMgYW5kKCkKICBzdGF0aWMgb3IoKQogIHN0YXRpYyB4b3IoKQogIHN0YXRpYyB6ZXJvcygpCiAgc3RhdGljIG9uZXMoKQAAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/parse-iwyu.js",
						"symkeys":
						[
							[
								78,
								102
							],
							[
								153,
								157
							],
							[
								162,
								179
							],
							[
								386,
								400
							],
							[
								454,
								464
							],
							[
								486,
								502
							],
							[
								570,
								574
							],
							[
								599,
								624
							],
							[
								885,
								891
							],
							[
								1034,
								1038
							],
							[
								1091,
								1113
							],
							[
								1538,
								1542
							],
							[
								1830,
								1837
							],
							[
								1902,
								1909
							],
							[
								2908,
								2915
							],
							[
								2982,
								3006
							],
							[
								3712,
								3737
							],
							[
								3795,
								3830
							],
							[
								3879,
								3914
							]
						],
						"symlist":
						[
							"function IsInclude(line)",
							"File",
							"constructor(name)",
							"get includes()",
							"([i,l]) =>",
							"removeIncludes()",
							"l =>",
							"replaceIncludes(includes)",
							"save()",
							"File",
							"function main(...args)",
							"p =>",
							"line =>",
							"line =>",
							"line =>",
							"function ReplaceStd(str)",
							"function IncludeName(str)",
							"function QuotesToAngleBrackets(str)",
							"function AngleBracketsToQuotes(str)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAAAAICBwYWxldHRlX3JlYWQKICBwYWxldHRlX2FwcGx5CiAgc3F1YXJlCiAgY29sb3IzZgogIGNvbG9yX2Rpc3RhbmNlX3NxdWFyZWQKICBmaW5kX25lYXJlc3QKICBwYWxldHRlX21hdGNoAAAAAAAAAAAUAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					115,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/mat.js",
						"symkeys":
						[
							[
								30,
								33
							],
							[
								73,
								86
							],
							[
								129,
								140
							],
							[
								188,
								201
							],
							[
								257,
								267
							],
							[
								323,
								333
							],
							[
								393,
								407
							],
							[
								463,
								473
							],
							[
								530,
								541
							],
							[
								598,
								609
							],
							[
								666,
								677
							],
							[
								733,
								743
							],
							[
								805,
								821
							],
							[
								882,
								897
							],
							[
								953,
								963
							],
							[
								1023,
								1037
							],
							[
								1098,
								1113
							],
							[
								1171,
								1183
							],
							[
								1240,
								1251
							],
							[
								1348,
								1353
							],
							[
								1450,
								1455
							],
							[
								1557,
								1567
							],
							[
								1669,
								1679
							],
							[
								1778,
								1785
							],
							[
								1882,
								1887
							],
							[
								1988,
								1997
							],
							[
								2094,
								2099
							],
							[
								2198,
								2205
							],
							[
								2304,
								2311
							],
							[
								2411,
								2419
							],
							[
								2518,
								2525
							],
							[
								2628,
								2639
							],
							[
								2736,
								2741
							],
							[
								2838,
								2843
							],
							[
								2939,
								2943
							],
							[
								3040,
								3045
							],
							[
								3142,
								3147
							],
							[
								3245,
								3251
							],
							[
								3348,
								3353
							],
							[
								3455,
								3465
							],
							[
								3561,
								3565
							],
							[
								3662,
								3667
							],
							[
								3766,
								3773
							],
							[
								3876,
								3887
							],
							[
								3987,
								3995
							],
							[
								4096,
								4105
							],
							[
								4206,
								4215
							],
							[
								4313,
								4319
							],
							[
								4419,
								4427
							],
							[
								4528,
								4537
							],
							[
								4888,
								4898
							],
							[
								5246,
								5274
							],
							[
								5361,
								5373
							],
							[
								5460,
								5472
							],
							[
								5559,
								5571
							],
							[
								5658,
								5670
							],
							[
								5757,
								5769
							],
							[
								5855,
								5866
							],
							[
								5953,
								5965
							],
							[
								6054,
								6068
							],
							[
								6156,
								6169
							]
						],
						"symlist":
						[
							"Mat",
							"constructor()",
							"MatIterator",
							"constructor()",
							"get cols()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"resize()",
							"step1()",
							"locateROI()",
							"ptr()",
							"and()",
							"or()",
							"xor()",
							"mul()",
							"zero()",
							"one()",
							"toString()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getUMat()",
							"keys()",
							"values()",
							"entries()",
							"get next()",
							"static getRotationMatrix2D()",
							"static add()",
							"static sub()",
							"static mul()",
							"static div()",
							"static and()",
							"static or()",
							"static xor()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAQAASXNJbmNsdWRlKGxpbmUpCkZpbGUKICBjb25zdHJ1Y3RvcihuYW1lKQogIGdldCBpbmNsdWRlcygpCihbaSxsXSkgPT4KICByZW1vdmVJbmNsdWRlcygpCiAgbCA9PgogIHJlcGxhY2VJbmNsdWRlcyhpbmNsdWRlcykKICBzYXZlKCkKRmlsZQogIG1haW4oLi4uYXJncykKICBwID0+CiAgbGluZSA9PgogIGxpbmUgPT4KICBsaW5lID0+ClJlcGxhY2VTdGQoc3RyKQpJbmNsdWRlTmFtZShzdHIpClF1b3Rlc1RvQW5nbGVCcmFja2V0cyhzdHIpCkFuZ2xlQnJhY2tldHNUb1F1b3RlcyhzdHIpAAAAAAAAAAD7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/png_write.hpp",
						"symkeys":
						[
							[
								494,
								504
							],
							[
								532,
								539
							],
							[
								658,
								673
							],
							[
								931,
								945
							],
							[
								1235,
								1255
							],
							[
								1423,
								1433
							],
							[
								1727,
								1736
							],
							[
								1952,
								1961
							]
						],
						"symlist":
						[
							"IndexedPNG",
							"png_new",
							"png_set_palette",
							"png_set_pixels",
							"png_set_transparency",
							"png_create",
							"png_write",
							"png_write"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7AgAATWF0CiAgY29uc3RydWN0b3IoKQpNYXRJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgY29scygpCiAgZ2V0IHJvd3MoKQogIGdldCBjaGFubmVscygpCiAgZ2V0IHR5cGUoKQogIGdldCBkZXB0aCgpCiAgZ2V0IGVtcHR5KCkKICBnZXQgdG90YWwoKQogIGdldCBzaXplKCkKICBnZXQgY29udGludW91cygpCiAgZ2V0IHN1Ym1hdHJpeCgpCiAgZ2V0IHN0ZXAoKQogIGdldCBlbGVtU2l6ZSgpCiAgZ2V0IGVsZW1TaXplMSgpCiAgZ2V0IGJ1ZmZlcigpCiAgZ2V0IGFycmF5KCkKICBjb2woKQogIHJvdygpCiAgY29sUmFuZ2UoKQogIHJvd1JhbmdlKCkKICBjbG9uZSgpCiAgcm9pKCkKICByZWxlYXNlKCkKICBkdXAoKQogIGNsZWFyKCkKICByZXNldCgpCiAgcmVzaXplKCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICBwdHIoKQogIGFuZCgpCiAgb3IoKQogIHhvcigpCiAgbXVsKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldFVNYXQoKQogIGtleXMoKQogIHZhbHVlcygpCiAgZW50cmllcygpCiAgZ2V0IG5leHQoKQogIHN0YXRpYyBnZXRSb3RhdGlvbk1hdHJpeDJEKCkKICBzdGF0aWMgYWRkKCkKICBzdGF0aWMgc3ViKCkKICBzdGF0aWMgbXVsKCkKICBzdGF0aWMgZGl2KCkKICBzdGF0aWMgYW5kKCkKICBzdGF0aWMgb3IoKQogIHN0YXRpYyB4b3IoKQogIHN0YXRpYyB6ZXJvcygpCiAgc3RhdGljIG9uZXMoKQAAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/point.js",
						"symkeys":
						[
							[
								30,
								35
							],
							[
								77,
								90
							],
							[
								137,
								144
							],
							[
								191,
								198
							],
							[
								291,
								298
							],
							[
								389,
								394
							],
							[
								488,
								496
							],
							[
								594,
								606
							],
							[
								697,
								702
							],
							[
								793,
								798
							],
							[
								889,
								894
							],
							[
								985,
								990
							],
							[
								1082,
								1088
							],
							[
								1179,
								1184
							],
							[
								1277,
								1284
							],
							[
								1377,
								1384
							],
							[
								1477,
								1484
							],
							[
								1576,
								1582
							],
							[
								1678,
								1688
							],
							[
								1783,
								1792
							],
							[
								2231,
								2244
							],
							[
								2331,
								2349
							],
							[
								2431,
								2444
							],
							[
								2530,
								2547
							]
						],
						"symlist":
						[
							"Point",
							"constructor()",
							"get x()",
							"get y()",
							"cross()",
							"dot()",
							"inside()",
							"difference()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"norm()",
							"abs()",
							"angle()",
							"round()",
							"floor()",
							"ceil()",
							"toString()",
							"toArray()",
							"static from()",
							"static fromAngle()",
							"static diff()",
							"static distance()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAAAASW5kZXhlZFBORwogIHBuZ19uZXcKICBwbmdfc2V0X3BhbGV0dGUKICBwbmdfc2V0X3BpeGVscwogIHBuZ19zZXRfdHJhbnNwYXJlbmN5CiAgcG5nX2NyZWF0ZQogIHBuZ193cml0ZQogIHBuZ193cml0ZQAAAAAAAAAADwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/psimpl.hpp",
						"symkeys":
						[
							[
								4354,
								4360
							],
							[
								4431,
								4435
							],
							[
								4579,
								4591
							],
							[
								4604,
								4616
							],
							[
								4654,
								4667
							],
							[
								4698,
								4708
							],
							[
								4767,
								4777
							],
							[
								4836,
								4839
							],
							[
								4882,
								4886
							],
							[
								4982,
								4994
							],
							[
								5033,
								5042
							],
							[
								5124,
								5128
							],
							[
								5335,
								5339
							],
							[
								5420,
								5430
							],
							[
								5435,
								5445
							],
							[
								5904,
								5909
							],
							[
								6477,
								6488
							],
							[
								7008,
								7011
							],
							[
								7761,
								7772
							],
							[
								7917,
								7927
							],
							[
								8452,
								8467
							],
							[
								9156,
								9170
							],
							[
								9293,
								9303
							],
							[
								10315,
								10332
							],
							[
								10455,
								10465
							],
							[
								11670,
								11683
							],
							[
								11806,
								11816
							],
							[
								12757,
								12775
							],
							[
								12886,
								12896
							],
							[
								12970,
								12979
							],
							[
								13883,
								13905
							],
							[
								13980,
								13989
							],
							[
								14058,
								14068
							],
							[
								14146,
								14159
							],
							[
								15850,
								15859
							],
							[
								18403,
								18418
							],
							[
								20502,
								20524
							],
							[
								24462,
								24484
							],
							[
								27823,
								27837
							],
							[
								31680,
								31686
							],
							[
								36154,
								36158
							],
							[
								39973,
								39988
							],
							[
								43470,
								43487
							],
							[
								46826,
								46852
							],
							[
								50817,
								50852
							],
							[
								51810,
								51826
							],
							[
								52208,
								52216
							],
							[
								52506,
								52513
							],
							[
								52888,
								52900
							],
							[
								53482,
								53489
							],
							[
								53861,
								53869
							],
							[
								54258,
								54266
							],
							[
								54319,
								54326
							],
							[
								54335,
								54342
							],
							[
								54611,
								54618
							],
							[
								54627,
								54634
							],
							[
								54917,
								54927
							],
							[
								54936,
								54946
							],
							[
								55220,
								55229
							],
							[
								55698,
								55709
							],
							[
								56148,
								56153
							],
							[
								57208,
								57221
							],
							[
								57690,
								57703
							],
							[
								59304,
								59312
							],
							[
								60432,
								60450
							],
							[
								61304,
								61328
							],
							[
								62324,
								62355
							],
							[
								63312,
								63343
							],
							[
								64357,
								64380
							],
							[
								65298,
								65313
							],
							[
								66428,
								66441
							],
							[
								67461,
								67485
							],
							[
								68406,
								68432
							],
							[
								69542,
								69568
							],
							[
								70863,
								70898
							]
						],
						"symlist":
						[
							"psimpl",
							"util",
							" scoped_array",
							" scoped_array",
							" ~scoped_array",
							" operator[]",
							" operator[]",
							" get",
							" swap",
							" scoped_array",
							" operator=",
							"swap",
							"math",
							" Statistics",
							" Statistics",
							"equal",
							"make_vector",
							"dot",
							"interpolate",
							"value_type",
							"point_distance2",
							"line_distance2",
							"value_type",
							"segment_distance2",
							"value_type",
							"ray_distance2",
							"value_type",
							"compute_statistics",
							"value_type",
							"diff_type",
							" PolylineSimplification",
							" diff_type",
							" value_type",
							" ptr_diff_type",
							" nth_point",
							" radial_distance",
							" perpendicular_distance",
							" perpendicular_distance",
							" reumann_witkam",
							" Opheim",
							" Lang",
							" douglas_peucker",
							" douglas_peucker_n",
							" compute_positional_errors2",
							" compute_positional_error_statistics",
							" copy_key_advance",
							" copy_key",
							" Advance",
							" advance_copy",
							" Forward",
							" Backward",
							" DPHelper",
							" SubPoly",
							" SubPoly",
							" KeyInfo",
							" KeyInfo",
							" SubPolyAlt",
							" SubPolyAlt",
							" operator<",
							" Approximate",
							" Stack",
							" approximate_n",
							" PriorityQueue",
							" find_key",
							"simplify_nth_point",
							"simplify_radial_distance",
							"simplify_perpendicular_distance",
							"simplify_perpendicular_distance",
							"simplify_reumann_witkam",
							"simplify_opheim",
							"simplify_lang",
							"simplify_douglas_peucker",
							"simplify_douglas_peucker_n",
							"compute_positional_errors2",
							"compute_positional_error_statistics"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAQAAUG9pbnQKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IHgoKQogIGdldCB5KCkKICBjcm9zcygpCiAgZG90KCkKICBpbnNpZGUoKQogIGRpZmZlcmVuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgbm9ybSgpCiAgYWJzKCkKICBhbmdsZSgpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b1N0cmluZygpCiAgdG9BcnJheSgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBmcm9tQW5nbGUoKQogIHN0YXRpYyBkaWZmKCkKICBzdGF0aWMgZGlzdGFuY2UoKQAAAAAAAAAAgwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/point.js",
						"symkeys":
						[
							[
								30,
								35
							],
							[
								77,
								90
							],
							[
								137,
								144
							],
							[
								191,
								198
							],
							[
								291,
								298
							],
							[
								389,
								394
							],
							[
								488,
								496
							],
							[
								594,
								606
							],
							[
								697,
								702
							],
							[
								793,
								798
							],
							[
								889,
								894
							],
							[
								985,
								990
							],
							[
								1082,
								1088
							],
							[
								1179,
								1184
							],
							[
								1277,
								1284
							],
							[
								1377,
								1384
							],
							[
								1477,
								1484
							],
							[
								1576,
								1582
							],
							[
								1678,
								1688
							],
							[
								1783,
								1792
							],
							[
								2231,
								2244
							],
							[
								2331,
								2349
							],
							[
								2431,
								2444
							],
							[
								2530,
								2547
							]
						],
						"symlist":
						[
							"Point",
							"constructor()",
							"get x()",
							"get y()",
							"cross()",
							"dot()",
							"inside()",
							"difference()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"norm()",
							"abs()",
							"angle()",
							"round()",
							"floor()",
							"ceil()",
							"toString()",
							"toArray()",
							"static from()",
							"static fromAngle()",
							"static diff()",
							"static distance()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAICBwc2ltcGwKICB1dGlsCiAgc2NvcGVkX2FycmF5CiAgc2NvcGVkX2FycmF5CiAgfnNjb3BlZF9hcnJheQogIG9wZXJhdG9yW10KICBvcGVyYXRvcltdCiAgZ2V0CiAgc3dhcAogIHNjb3BlZF9hcnJheQogIG9wZXJhdG9yPQogIHN3YXAKICBtYXRoClN0YXRpc3RpY3MKU3RhdGlzdGljcwogIGVxdWFsCiAgbWFrZV92ZWN0b3IKICBkb3QKICBpbnRlcnBvbGF0ZQogIHZhbHVlX3R5cGUKICBwb2ludF9kaXN0YW5jZTIKICBsaW5lX2Rpc3RhbmNlMgogIHZhbHVlX3R5cGUKICBzZWdtZW50X2Rpc3RhbmNlMgogIHZhbHVlX3R5cGUKICByYXlfZGlzdGFuY2UyCiAgdmFsdWVfdHlwZQogIGNvbXB1dGVfc3RhdGlzdGljcwogIHZhbHVlX3R5cGUKICBkaWZmX3R5cGUKUG9seWxpbmVTaW1wbGlmaWNhdGlvbgogIGRpZmZfdHlwZQogIHZhbHVlX3R5cGUKICBwdHJfZGlmZl90eXBlCiAgbnRoX3BvaW50CiAgcmFkaWFsX2Rpc3RhbmNlCiAgcGVycGVuZGljdWxhcl9kaXN0YW5jZQogIHBlcnBlbmRpY3VsYXJfZGlzdGFuY2UKICByZXVtYW5uX3dpdGthbQpPcGhlaW0KTGFuZwogIGRvdWdsYXNfcGV1Y2tlcgogIGRvdWdsYXNfcGV1Y2tlcl9uCiAgY29tcHV0ZV9wb3NpdGlvbmFsX2Vycm9yczIKICBjb21wdXRlX3Bvc2l0aW9uYWxfZXJyb3Jfc3RhdGlzdGljcwogIGNvcHlfa2V5X2FkdmFuY2UKICBjb3B5X2tleQpBZHZhbmNlCiAgYWR2YW5jZV9jb3B5CkZvcndhcmQKQmFja3dhcmQKRFBIZWxwZXIKU3ViUG9seQpTdWJQb2x5CktleUluZm8KS2V5SW5mbwpTdWJQb2x5QWx0ClN1YlBvbHlBbHQKICBvcGVyYXRvcjwKQXBwcm94aW1hdGUKU3RhY2sKICBhcHByb3hpbWF0ZV9uClByaW9yaXR5UXVldWUKICBmaW5kX2tleQogIHNpbXBsaWZ5X250aF9wb2ludAogIHNpbXBsaWZ5X3JhZGlhbF9kaXN0YW5jZQogIHNpbXBsaWZ5X3BlcnBlbmRpY3VsYXJfZGlzdGFuY2UKICBzaW1wbGlmeV9wZXJwZW5kaWN1bGFyX2Rpc3RhbmNlCiAgc2ltcGxpZnlfcmV1bWFubl93aXRrYW0KICBzaW1wbGlmeV9vcGhlaW0KICBzaW1wbGlmeV9sYW5nCiAgc2ltcGxpZnlfZG91Z2xhc19wZXVja2VyCiAgc2ltcGxpZnlfZG91Z2xhc19wZXVja2VyX24KICBjb21wdXRlX3Bvc2l0aW9uYWxfZXJyb3JzMgogIGNvbXB1dGVfcG9zaXRpb25hbF9lcnJvcl9zdGF0aXN0aWNzAAAAAAAAAAAPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/psimpl.hpp",
						"symkeys":
						[
							[
								4354,
								4360
							],
							[
								4431,
								4435
							],
							[
								4579,
								4591
							],
							[
								4604,
								4616
							],
							[
								4654,
								4667
							],
							[
								4698,
								4708
							],
							[
								4767,
								4777
							],
							[
								4836,
								4839
							],
							[
								4882,
								4886
							],
							[
								4982,
								4994
							],
							[
								5033,
								5042
							],
							[
								5124,
								5128
							],
							[
								5335,
								5339
							],
							[
								5420,
								5430
							],
							[
								5435,
								5445
							],
							[
								5904,
								5909
							],
							[
								6477,
								6488
							],
							[
								7008,
								7011
							],
							[
								7761,
								7772
							],
							[
								7917,
								7927
							],
							[
								8452,
								8467
							],
							[
								9156,
								9170
							],
							[
								9293,
								9303
							],
							[
								10315,
								10332
							],
							[
								10455,
								10465
							],
							[
								11670,
								11683
							],
							[
								11806,
								11816
							],
							[
								12757,
								12775
							],
							[
								12886,
								12896
							],
							[
								12970,
								12979
							],
							[
								13883,
								13905
							],
							[
								13980,
								13989
							],
							[
								14058,
								14068
							],
							[
								14146,
								14159
							],
							[
								15850,
								15859
							],
							[
								18403,
								18418
							],
							[
								20502,
								20524
							],
							[
								24462,
								24484
							],
							[
								27823,
								27837
							],
							[
								31680,
								31686
							],
							[
								36154,
								36158
							],
							[
								39973,
								39988
							],
							[
								43470,
								43487
							],
							[
								46826,
								46852
							],
							[
								50817,
								50852
							],
							[
								51810,
								51826
							],
							[
								52208,
								52216
							],
							[
								52506,
								52513
							],
							[
								52888,
								52900
							],
							[
								53482,
								53489
							],
							[
								53861,
								53869
							],
							[
								54258,
								54266
							],
							[
								54319,
								54326
							],
							[
								54335,
								54342
							],
							[
								54611,
								54618
							],
							[
								54627,
								54634
							],
							[
								54917,
								54927
							],
							[
								54936,
								54946
							],
							[
								55220,
								55229
							],
							[
								55698,
								55709
							],
							[
								56148,
								56153
							],
							[
								57208,
								57221
							],
							[
								57690,
								57703
							],
							[
								59304,
								59312
							],
							[
								60432,
								60450
							],
							[
								61304,
								61328
							],
							[
								62324,
								62355
							],
							[
								63312,
								63343
							],
							[
								64357,
								64380
							],
							[
								65298,
								65313
							],
							[
								66428,
								66441
							],
							[
								67461,
								67485
							],
							[
								68406,
								68432
							],
							[
								69542,
								69568
							],
							[
								70863,
								70898
							]
						],
						"symlist":
						[
							"psimpl",
							"util",
							" scoped_array",
							" scoped_array",
							" ~scoped_array",
							" operator[]",
							" operator[]",
							" get",
							" swap",
							" scoped_array",
							" operator=",
							"swap",
							"math",
							" Statistics",
							" Statistics",
							"equal",
							"make_vector",
							"dot",
							"interpolate",
							"value_type",
							"point_distance2",
							"line_distance2",
							"value_type",
							"segment_distance2",
							"value_type",
							"ray_distance2",
							"value_type",
							"compute_statistics",
							"value_type",
							"diff_type",
							" PolylineSimplification",
							" diff_type",
							" value_type",
							" ptr_diff_type",
							" nth_point",
							" radial_distance",
							" perpendicular_distance",
							" perpendicular_distance",
							" reumann_witkam",
							" Opheim",
							" Lang",
							" douglas_peucker",
							" douglas_peucker_n",
							" compute_positional_errors2",
							" compute_positional_error_statistics",
							" copy_key_advance",
							" copy_key",
							" Advance",
							" advance_copy",
							" Forward",
							" Backward",
							" DPHelper",
							" SubPoly",
							" SubPoly",
							" KeyInfo",
							" KeyInfo",
							" SubPolyAlt",
							" SubPolyAlt",
							" operator<",
							" Approximate",
							" Stack",
							" approximate_n",
							" PriorityQueue",
							" find_key",
							"simplify_nth_point",
							"simplify_radial_distance",
							"simplify_perpendicular_distance",
							"simplify_perpendicular_distance",
							"simplify_reumann_witkam",
							"simplify_opheim",
							"simplify_lang",
							"simplify_douglas_peucker",
							"simplify_douglas_peucker_n",
							"compute_positional_errors2",
							"compute_positional_error_statistics"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAQAAUG9pbnQKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IHgoKQogIGdldCB5KCkKICBjcm9zcygpCiAgZG90KCkKICBpbnNpZGUoKQogIGRpZmZlcmVuY2UoKQogIGFkZCgpCiAgc3ViKCkKICBtdWwoKQogIGRpdigpCiAgbm9ybSgpCiAgYWJzKCkKICBhbmdsZSgpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b1N0cmluZygpCiAgdG9BcnJheSgpCiAgc3RhdGljIGZyb20oKQogIHN0YXRpYyBmcm9tQW5nbGUoKQogIHN0YXRpYyBkaWZmKCkKICBzdGF0aWMgZGlzdGFuY2UoKQAAAAAAAAAAgwQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/rect.js",
						"symkeys":
						[
							[
								32,
								36
							],
							[
								77,
								90
							],
							[
								136,
								143
							],
							[
								189,
								196
							],
							[
								246,
								257
							],
							[
								308,
								320
							],
							[
								367,
								375
							],
							[
								422,
								430
							],
							[
								477,
								485
							],
							[
								532,
								540
							],
							[
								590,
								601
							],
							[
								650,
								660
							],
							[
								707,
								715
							],
							[
								762,
								770
							],
							[
								865,
								875
							],
							[
								925,
								936
							],
							[
								985,
								995
							],
							[
								1084,
								1088
							],
							[
								1177,
								1181
							],
							[
								1273,
								1280
							],
							[
								1373,
								1381
							],
							[
								1474,
								1482
							],
							[
								1575,
								1583
							],
							[
								1675,
								1682
							],
							[
								1777,
								1787
							],
							[
								1882,
								1892
							],
							[
								1985,
								1993
							],
							[
								2085,
								2092
							],
							[
								2187,
								2197
							],
							[
								2291,
								2300
							],
							[
								2482,
								2495
							]
						],
						"symlist":
						[
							"Rect",
							"constructor()",
							"get x()",
							"get y()",
							"get width()",
							"get height()",
							"get x1()",
							"get y1()",
							"get x2()",
							"get y2()",
							"get point()",
							"get size()",
							"get tl()",
							"get br()",
							"contains()",
							"get empty()",
							"get area()",
							"br()",
							"tl()",
							"inset()",
							"outset()",
							"hsplit()",
							"vsplit()",
							"merge()",
							"toString()",
							"toSource()",
							"equals()",
							"round()",
							"toObject()",
							"toArray()",
							"static from()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDBAAAICBwc2ltcGwKICB1dGlsCiAgc2NvcGVkX2FycmF5CiAgc2NvcGVkX2FycmF5CiAgfnNjb3BlZF9hcnJheQogIG9wZXJhdG9yW10KICBvcGVyYXRvcltdCiAgZ2V0CiAgc3dhcAogIHNjb3BlZF9hcnJheQogIG9wZXJhdG9yPQogIHN3YXAKICBtYXRoClN0YXRpc3RpY3MKU3RhdGlzdGljcwogIGVxdWFsCiAgbWFrZV92ZWN0b3IKICBkb3QKICBpbnRlcnBvbGF0ZQogIHZhbHVlX3R5cGUKICBwb2ludF9kaXN0YW5jZTIKICBsaW5lX2Rpc3RhbmNlMgogIHZhbHVlX3R5cGUKICBzZWdtZW50X2Rpc3RhbmNlMgogIHZhbHVlX3R5cGUKICByYXlfZGlzdGFuY2UyCiAgdmFsdWVfdHlwZQogIGNvbXB1dGVfc3RhdGlzdGljcwogIHZhbHVlX3R5cGUKICBkaWZmX3R5cGUKUG9seWxpbmVTaW1wbGlmaWNhdGlvbgogIGRpZmZfdHlwZQogIHZhbHVlX3R5cGUKICBwdHJfZGlmZl90eXBlCiAgbnRoX3BvaW50CiAgcmFkaWFsX2Rpc3RhbmNlCiAgcGVycGVuZGljdWxhcl9kaXN0YW5jZQogIHBlcnBlbmRpY3VsYXJfZGlzdGFuY2UKICByZXVtYW5uX3dpdGthbQpPcGhlaW0KTGFuZwogIGRvdWdsYXNfcGV1Y2tlcgogIGRvdWdsYXNfcGV1Y2tlcl9uCiAgY29tcHV0ZV9wb3NpdGlvbmFsX2Vycm9yczIKICBjb21wdXRlX3Bvc2l0aW9uYWxfZXJyb3Jfc3RhdGlzdGljcwogIGNvcHlfa2V5X2FkdmFuY2UKICBjb3B5X2tleQpBZHZhbmNlCiAgYWR2YW5jZV9jb3B5CkZvcndhcmQKQmFja3dhcmQKRFBIZWxwZXIKU3ViUG9seQpTdWJQb2x5CktleUluZm8KS2V5SW5mbwpTdWJQb2x5QWx0ClN1YlBvbHlBbHQKICBvcGVyYXRvcjwKQXBwcm94aW1hdGUKU3RhY2sKICBhcHByb3hpbWF0ZV9uClByaW9yaXR5UXVldWUKICBmaW5kX2tleQogIHNpbXBsaWZ5X250aF9wb2ludAogIHNpbXBsaWZ5X3JhZGlhbF9kaXN0YW5jZQogIHNpbXBsaWZ5X3BlcnBlbmRpY3VsYXJfZGlzdGFuY2UKICBzaW1wbGlmeV9wZXJwZW5kaWN1bGFyX2Rpc3RhbmNlCiAgc2ltcGxpZnlfcmV1bWFubl93aXRrYW0KICBzaW1wbGlmeV9vcGhlaW0KICBzaW1wbGlmeV9sYW5nCiAgc2ltcGxpZnlfZG91Z2xhc19wZXVja2VyCiAgc2ltcGxpZnlfZG91Z2xhc19wZXVja2VyX24KICBjb21wdXRlX3Bvc2l0aW9uYWxfZXJyb3JzMgogIGNvbXB1dGVfcG9zaXRpb25hbF9lcnJvcl9zdGF0aXN0aWNzAAAAAAAAAABlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/rotated_rect.js",
						"symkeys":
						[
							[
								36,
								47
							],
							[
								95,
								108
							],
							[
								166,
								178
							],
							[
								234,
								244
							],
							[
								301,
								312
							],
							[
								418,
								432
							],
							[
								540,
								556
							],
							[
								656,
								664
							],
							[
								867,
								880
							]
						],
						"symlist":
						[
							"RotatedRect",
							"constructor()",
							"get center()",
							"get size()",
							"get angle()",
							"boundingRect()",
							"boundingRect2f()",
							"points()",
							"static from()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlAQAAUmVjdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgeCgpCiAgZ2V0IHkoKQogIGdldCB3aWR0aCgpCiAgZ2V0IGhlaWdodCgpCiAgZ2V0IHgxKCkKICBnZXQgeTEoKQogIGdldCB4MigpCiAgZ2V0IHkyKCkKICBnZXQgcG9pbnQoKQogIGdldCBzaXplKCkKICBnZXQgdGwoKQogIGdldCBicigpCiAgY29udGFpbnMoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGJyKCkKICB0bCgpCiAgaW5zZXQoKQogIG91dHNldCgpCiAgaHNwbGl0KCkKICB2c3BsaXQoKQogIG1lcmdlKCkKICB0b1N0cmluZygpCiAgdG9Tb3VyY2UoKQogIGVxdWFscygpCiAgcm91bmQoKQogIHRvT2JqZWN0KCkKICB0b0FycmF5KCkKICBzdGF0aWMgZnJvbSgpAAAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/size.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								137,
								148
							],
							[
								199,
								211
							],
							[
								262,
								274
							],
							[
								324,
								335
							],
							[
								384,
								394
							],
							[
								487,
								495
							],
							[
								587,
								594
							],
							[
								686,
								693
							],
							[
								784,
								790
							],
							[
								885,
								895
							],
							[
								989,
								998
							],
							[
								1093,
								1103
							],
							[
								1199,
								1210
							],
							[
								1306,
								1317
							],
							[
								1414,
								1426
							],
							[
								1518,
								1525
							],
							[
								1620,
								1630
							],
							[
								1725,
								1735
							],
							[
								1825,
								1830
							],
							[
								1920,
								1925
							],
							[
								2015,
								2020
							],
							[
								2110,
								2115
							],
							[
								2154,
								2166
							]
						],
						"symlist":
						[
							"Size",
							"constructor()",
							"get width()",
							"get height()",
							"get aspect()",
							"get empty()",
							"get area()",
							"equals()",
							"round()",
							"floor()",
							"ceil()",
							"toObject()",
							"toArray()",
							"fitWidth()",
							"fitHeight()",
							"fitInside()",
							"fitOutside()",
							"align()",
							"toString()",
							"toSource()",
							"add()",
							"sub()",
							"mul()",
							"div()",
							"get values()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACEAAAAUm90YXRlZFJlY3QKICBjb25zdHJ1Y3RvcigpCiAgZ2V0IGNlbnRlcigpCiAgZ2V0IHNpemUoKQogIGdldCBhbmdsZSgpCiAgYm91bmRpbmdSZWN0KCkKICBib3VuZGluZ1JlY3QyZigpCiAgcG9pbnRzKCkKICBzdGF0aWMgZnJvbSgpAAAAAAAAAAAnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
						"symkeys":
						[
							[
								553,
								571
							],
							[
								1656,
								1664
							],
							[
								2068,
								2083
							]
						],
						"symlist":
						[
							"thinning_iteration",
							"thinning",
							"skeletonization"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAnAQAAU2l6ZQogIGNvbnN0cnVjdG9yKCkKICBnZXQgd2lkdGgoKQogIGdldCBoZWlnaHQoKQogIGdldCBhc3BlY3QoKQogIGdldCBlbXB0eSgpCiAgZ2V0IGFyZWEoKQogIGVxdWFscygpCiAgcm91bmQoKQogIGZsb29yKCkKICBjZWlsKCkKICB0b09iamVjdCgpCiAgdG9BcnJheSgpCiAgZml0V2lkdGgoKQogIGZpdEhlaWdodCgpCiAgZml0SW5zaWRlKCkKICBmaXRPdXRzaWRlKCkKICBhbGlnbigpCiAgdG9TdHJpbmcoKQogIHRvU291cmNlKCkKICBhZGQoKQogIHN1YigpCiAgbXVsKCkKICBkaXYoKQogIGdldCB2YWx1ZXMoKQAAAAAAAAAAMQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/subdiv2d.js",
						"symkeys":
						[
							[
								33,
								41
							],
							[
								86,
								99
							],
							[
								197,
								206
							],
							[
								304,
								313
							],
							[
								415,
								428
							],
							[
								526,
								535
							],
							[
								637,
								650
							],
							[
								759,
								779
							],
							[
								885,
								902
							],
							[
								1002,
								1013
							],
							[
								1123,
								1144
							],
							[
								1247,
								1261
							],
							[
								1358,
								1366
							],
							[
								1463,
								1471
							],
							[
								1570,
								1580
							],
							[
								1681,
								1693
							],
							[
								1791,
								1800
							]
						],
						"symlist":
						[
							"Subdiv2D",
							"constructor()",
							"edgeDst()",
							"edgeOrg()",
							"findNearest()",
							"getEdge()",
							"getEdgeList()",
							"getLeadingEdgeList()",
							"getTriangleList()",
							"getVertex()",
							"getVoronoiFacetList()",
							"initDelaunay()",
							"insert()",
							"locate()",
							"nextEdge()",
							"rotateEdge()",
							"symEdge()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAICB0aGlubmluZ19pdGVyYXRpb24KICB0aGlubmluZwogIHNrZWxldG9uaXphdGlvbgAAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/slice_iterator.js",
						"symkeys":
						[
							[
								38,
								51
							],
							[
								101,
								114
							],
							[
								177,
								187
							]
						],
						"symlist":
						[
							"SliceIterator",
							"constructor()",
							"get next()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAU3ViZGl2MkQKICBjb25zdHJ1Y3RvcigpCiAgZWRnZURzdCgpCiAgZWRnZU9yZygpCiAgZmluZE5lYXJlc3QoKQogIGdldEVkZ2UoKQogIGdldEVkZ2VMaXN0KCkKICBnZXRMZWFkaW5nRWRnZUxpc3QoKQogIGdldFRyaWFuZ2xlTGlzdCgpCiAgZ2V0VmVydGV4KCkKICBnZXRWb3Jvbm9pRmFjZXRMaXN0KCkKICBpbml0RGVsYXVuYXkoKQogIGluc2VydCgpCiAgbG9jYXRlKCkKICBuZXh0RWRnZSgpCiAgcm90YXRlRWRnZSgpCiAgc3ltRWRnZSgpAAAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/subdiv2d.js",
						"symkeys":
						[
							[
								33,
								41
							],
							[
								86,
								99
							],
							[
								197,
								206
							],
							[
								304,
								313
							],
							[
								415,
								428
							],
							[
								526,
								535
							],
							[
								637,
								650
							],
							[
								759,
								779
							],
							[
								885,
								902
							],
							[
								1002,
								1013
							],
							[
								1123,
								1144
							],
							[
								1247,
								1261
							],
							[
								1358,
								1366
							],
							[
								1463,
								1471
							],
							[
								1570,
								1580
							],
							[
								1681,
								1693
							],
							[
								1791,
								1800
							]
						],
						"symlist":
						[
							"Subdiv2D",
							"constructor()",
							"edgeDst()",
							"edgeOrg()",
							"findNearest()",
							"getEdge()",
							"getEdgeList()",
							"getLeadingEdgeList()",
							"getTriangleList()",
							"getVertex()",
							"getVoronoiFacetList()",
							"initDelaunay()",
							"insert()",
							"locate()",
							"nextEdge()",
							"rotateEdge()",
							"symEdge()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAU2xpY2VJdGVyYXRvcgogIGNvbnN0cnVjdG9yKCkKICBnZXQgbmV4dCgpAAAAAAAAAAD8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
						"symkeys":
						[
							[
								553,
								571
							],
							[
								1656,
								1664
							],
							[
								2068,
								2083
							]
						],
						"symlist":
						[
							"thinning_iteration",
							"thinning",
							"skeletonization"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAU3ViZGl2MkQKICBjb25zdHJ1Y3RvcigpCiAgZWRnZURzdCgpCiAgZWRnZU9yZygpCiAgZmluZE5lYXJlc3QoKQogIGdldEVkZ2UoKQogIGdldEVkZ2VMaXN0KCkKICBnZXRMZWFkaW5nRWRnZUxpc3QoKQogIGdldFRyaWFuZ2xlTGlzdCgpCiAgZ2V0VmVydGV4KCkKICBnZXRWb3Jvbm9pRmFjZXRMaXN0KCkKICBpbml0RGVsYXVuYXkoKQogIGluc2VydCgpCiAgbG9jYXRlKCkKICBuZXh0RWRnZSgpCiAgcm90YXRlRWRnZSgpCiAgc3ltRWRnZSgpAAAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/subdiv2d.js",
						"symkeys":
						[
							[
								33,
								41
							],
							[
								86,
								99
							],
							[
								197,
								206
							],
							[
								304,
								313
							],
							[
								415,
								428
							],
							[
								526,
								535
							],
							[
								637,
								650
							],
							[
								759,
								779
							],
							[
								885,
								902
							],
							[
								1002,
								1013
							],
							[
								1123,
								1144
							],
							[
								1247,
								1261
							],
							[
								1358,
								1366
							],
							[
								1463,
								1471
							],
							[
								1570,
								1580
							],
							[
								1681,
								1693
							],
							[
								1791,
								1800
							]
						],
						"symlist":
						[
							"Subdiv2D",
							"constructor()",
							"edgeDst()",
							"edgeOrg()",
							"findNearest()",
							"getEdge()",
							"getEdgeList()",
							"getLeadingEdgeList()",
							"getTriangleList()",
							"getVertex()",
							"getVoronoiFacetList()",
							"initDelaunay()",
							"insert()",
							"locate()",
							"nextEdge()",
							"rotateEdge()",
							"symEdge()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAICB0aGlubmluZ19pdGVyYXRpb24KICB0aGlubmluZwogIHNrZWxldG9uaXphdGlvbgAAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/umat.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								136,
								146
							],
							[
								199,
								213
							],
							[
								262,
								272
							],
							[
								322,
								333
							],
							[
								383,
								394
							],
							[
								444,
								455
							],
							[
								504,
								514
							],
							[
								569,
								585
							],
							[
								639,
								654
							],
							[
								703,
								713
							],
							[
								766,
								780
							],
							[
								834,
								849
							],
							[
								900,
								912
							],
							[
								962,
								973
							],
							[
								1063,
								1068
							],
							[
								1158,
								1163
							],
							[
								1258,
								1268
							],
							[
								1363,
								1373
							],
							[
								1465,
								1472
							],
							[
								1562,
								1567
							],
							[
								1661,
								1670
							],
							[
								1760,
								1765
							],
							[
								1857,
								1864
							],
							[
								1956,
								1963
							],
							[
								2055,
								2062
							],
							[
								2158,
								2169
							],
							[
								2260,
								2266
							],
							[
								2356,
								2361
							],
							[
								2456,
								2466
							],
							[
								2560,
								2569
							],
							[
								2658,
								2662
							],
							[
								2752,
								2757
							],
							[
								2849,
								2856
							],
							[
								2952,
								2963
							],
							[
								3056,
								3064
							],
							[
								3158,
								3167
							],
							[
								3260,
								3268
							],
							[
								3546,
								3560
							],
							[
								3641,
								3654
							]
						],
						"symlist":
						[
							"UMat",
							"constructor()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"step1()",
							"locateROI()",
							"zero()",
							"one()",
							"toString()",
							"inspect()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getMat()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD8AAAAU3ViZGl2MkQKICBjb25zdHJ1Y3RvcigpCiAgZWRnZURzdCgpCiAgZWRnZU9yZygpCiAgZmluZE5lYXJlc3QoKQogIGdldEVkZ2UoKQogIGdldEVkZ2VMaXN0KCkKICBnZXRMZWFkaW5nRWRnZUxpc3QoKQogIGdldFRyaWFuZ2xlTGlzdCgpCiAgZ2V0VmVydGV4KCkKICBnZXRWb3Jvbm9pRmFjZXRMaXN0KCkKICBpbml0RGVsYXVuYXkoKQogIGluc2VydCgpCiAgbG9jYXRlKCkKICBuZXh0RWRnZSgpCiAgcm90YXRlRWRnZSgpCiAgc3ltRWRnZSgpAAAAAAAAAAD4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					131,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
						"symkeys":
						[
							[
								1766,
								1773
							],
							[
								1817,
								1824
							],
							[
								1890,
								1899
							],
							[
								1940,
								1953
							],
							[
								2063,
								2072
							],
							[
								2370,
								2380
							],
							[
								2484,
								2497
							],
							[
								2665,
								2674
							],
							[
								3080,
								3084
							],
							[
								3355,
								3368
							],
							[
								3493,
								3508
							],
							[
								3529,
								3542
							],
							[
								3596,
								3612
							],
							[
								3672,
								3688
							],
							[
								3832,
								3846
							],
							[
								4004,
								4018
							],
							[
								4056,
								4070
							],
							[
								4117,
								4124
							],
							[
								4215,
								4222
							],
							[
								4369,
								4379
							],
							[
								4565,
								4575
							],
							[
								4723,
								4729
							],
							[
								4874,
								4880
							],
							[
								5046,
								5058
							],
							[
								5219,
								5228
							],
							[
								5254,
								5266
							],
							[
								5293,
								5303
							],
							[
								5330,
								5342
							],
							[
								5368,
								5377
							],
							[
								5404,
								5416
							],
							[
								5444,
								5454
							],
							[
								5482,
								5494
							],
							[
								5561,
								5568
							],
							[
								5761,
								5768
							],
							[
								5960,
								5965
							],
							[
								6046,
								6049
							],
							[
								6137,
								6142
							],
							[
								6235,
								6238
							],
							[
								6725,
								6730
							],
							[
								6805,
								6808
							],
							[
								6896,
								6901
							],
							[
								6988,
								6991
							],
							[
								7068,
								7073
							],
							[
								7144,
								7147
							],
							[
								7258,
								7263
							],
							[
								7352,
								7355
							],
							[
								7473,
								7483
							],
							[
								7579,
								7589
							],
							[
								7660,
								7669
							],
							[
								7801,
								7806
							],
							[
								7839,
								7842
							],
							[
								7877,
								7881
							],
							[
								8004,
								8018
							],
							[
								8126,
								8137
							],
							[
								8248,
								8253
							],
							[
								8404,
								8409
							],
							[
								8574,
								8579
							],
							[
								8695,
								8708
							],
							[
								8736,
								8746
							],
							[
								8844,
								8854
							],
							[
								9063,
								9066
							],
							[
								9226,
								9229
							],
							[
								9380,
								9383
							],
							[
								9543,
								9546
							],
							[
								9697,
								9700
							],
							[
								9823,
								9826
							],
							[
								9980,
								9983
							],
							[
								10106,
								10109
							]
						],
						"symlist":
						[
							"str_end",
							"str_end",
							"to_string",
							"make_filename",
							"get_mtime",
							"operator<<",
							"iterator_type",
							"to_string",
							"join",
							"get_heap_base",
							"JSMatDimensions",
							"mattype_depth",
							"mattype_channels",
							"mattype_floating",
							"mattype_signed",
							"mat_dimensions",
							"mat_dimensions",
							"mat_ptr",
							"mat_ptr",
							"mat_offset",
							"mat_offset",
							"mat_at",
							"mat_at",
							"mat_bytesize",
							"mat_depth",
							"mat_channels",
							"mat_signed",
							"mat_floating",
							"mat_depth",
							"mat_channels",
							"mat_signed",
							"mat_floating",
							"mat_col",
							"mat_row",
							"begin",
							"end",
							"begin",
							"end",
							"begin",
							"end",
							"begin",
							"end",
							"begin",
							"end",
							"begin",
							"end",
							"range_view",
							" range_view",
							" operator=",
							" begin",
							" end",
							" size",
							"argument_range",
							"sized_range",
							"range",
							"range",
							"range",
							"js_prop_flags",
							"operator<<",
							"operator<<",
							"add",
							"add",
							"sub",
							"sub",
							"div",
							"div",
							"mul",
							"mul"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AQAAVU1hdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgcm93cygpCiAgZ2V0IGNoYW5uZWxzKCkKICBnZXQgdHlwZSgpCiAgZ2V0IGRlcHRoKCkKICBnZXQgZW1wdHkoKQogIGdldCB0b3RhbCgpCiAgZ2V0IHNpemUoKQogIGdldCBjb250aW51b3VzKCkKICBnZXQgc3VibWF0cml4KCkKICBnZXQgc3RlcCgpCiAgZ2V0IGVsZW1TaXplKCkKICBnZXQgZWxlbVNpemUxKCkKICBnZXQgYnVmZmVyKCkKICBnZXQgYXJyYXkoKQogIGNvbCgpCiAgcm93KCkKICBjb2xSYW5nZSgpCiAgcm93UmFuZ2UoKQogIGNsb25lKCkKICByb2koKQogIHJlbGVhc2UoKQogIGR1cCgpCiAgY2xlYXIoKQogIHJlc2V0KCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBpbnNwZWN0KCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldE1hdCgpCiAgc3RhdGljIHplcm9zKCkKICBzdGF0aWMgb25lcygpAAAAAAAAAADlAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/utility.js",
						"symkeys":
						[
							[
								34,
								43
							],
							[
								89,
								102
							],
							[
								199,
								206
							],
							[
								303,
								310
							],
							[
								406,
								412
							],
							[
								469,
								482
							],
							[
								541,
								556
							],
							[
								615,
								630
							],
							[
								687,
								700
							],
							[
								759,
								774
							],
							[
								836,
								854
							],
							[
								914,
								930
							],
							[
								983,
								992
							],
							[
								1092,
								1102
							]
						],
						"symlist":
						[
							"TickMeter",
							"constructor()",
							"reset()",
							"start()",
							"stop()",
							"get counter()",
							"get timeMicro()",
							"get timeMilli()",
							"get timeSec()",
							"get timeTicks()",
							"get avgTimeMilli()",
							"get avgTimeSec()",
							"get fps()",
							"toString()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlAgAAICBzdHJfZW5kCiAgc3RyX2VuZAogIHRvX3N0cmluZwogIG1ha2VfZmlsZW5hbWUKICBnZXRfbXRpbWUKICBvcGVyYXRvcjw8CiAgaXRlcmF0b3JfdHlwZQogIHRvX3N0cmluZwogIGpvaW4KICBnZXRfaGVhcF9iYXNlCkpTTWF0RGltZW5zaW9ucwogIG1hdHR5cGVfZGVwdGgKICBtYXR0eXBlX2NoYW5uZWxzCiAgbWF0dHlwZV9mbG9hdGluZwogIG1hdHR5cGVfc2lnbmVkCiAgbWF0X2RpbWVuc2lvbnMKICBtYXRfZGltZW5zaW9ucwogIG1hdF9wdHIKICBtYXRfcHRyCiAgbWF0X29mZnNldAogIG1hdF9vZmZzZXQKICBtYXRfYXQKICBtYXRfYXQKICBtYXRfYnl0ZXNpemUKICBtYXRfZGVwdGgKICBtYXRfY2hhbm5lbHMKICBtYXRfc2lnbmVkCiAgbWF0X2Zsb2F0aW5nCiAgbWF0X2RlcHRoCiAgbWF0X2NoYW5uZWxzCiAgbWF0X3NpZ25lZAogIG1hdF9mbG9hdGluZwogIG1hdF9jb2wKICBtYXRfcm93CiAgYmVnaW4KICBlbmQKICBiZWdpbgogIGVuZAogIGJlZ2luCiAgZW5kCiAgYmVnaW4KICBlbmQKICBiZWdpbgogIGVuZAogIGJlZ2luCiAgZW5kCiAgcmFuZ2VfdmlldwogIHJhbmdlX3ZpZXcKICBvcGVyYXRvcj0KICBiZWdpbgogIGVuZAogIHNpemUKICBhcmd1bWVudF9yYW5nZQogIHNpemVkX3JhbmdlCiAgcmFuZ2UKICByYW5nZQogIHJhbmdlCiAganNfcHJvcF9mbGFncwogIG9wZXJhdG9yPDwKICBvcGVyYXRvcjw8CiAgYWRkCiAgYWRkCiAgc3ViCiAgc3ViCiAgZGl2CiAgZGl2CiAgbXVsCiAgbXVsAAAAAAAAAADNAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					133,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/umat.js",
						"symkeys":
						[
							[
								29,
								33
							],
							[
								74,
								87
							],
							[
								136,
								146
							],
							[
								199,
								213
							],
							[
								262,
								272
							],
							[
								322,
								333
							],
							[
								383,
								394
							],
							[
								444,
								455
							],
							[
								504,
								514
							],
							[
								569,
								585
							],
							[
								639,
								654
							],
							[
								703,
								713
							],
							[
								766,
								780
							],
							[
								834,
								849
							],
							[
								900,
								912
							],
							[
								962,
								973
							],
							[
								1063,
								1068
							],
							[
								1158,
								1163
							],
							[
								1258,
								1268
							],
							[
								1363,
								1373
							],
							[
								1465,
								1472
							],
							[
								1562,
								1567
							],
							[
								1661,
								1670
							],
							[
								1760,
								1765
							],
							[
								1857,
								1864
							],
							[
								1956,
								1963
							],
							[
								2055,
								2062
							],
							[
								2158,
								2169
							],
							[
								2260,
								2266
							],
							[
								2356,
								2361
							],
							[
								2456,
								2466
							],
							[
								2560,
								2569
							],
							[
								2658,
								2662
							],
							[
								2752,
								2757
							],
							[
								2849,
								2856
							],
							[
								2952,
								2963
							],
							[
								3056,
								3064
							],
							[
								3158,
								3167
							],
							[
								3260,
								3268
							],
							[
								3546,
								3560
							],
							[
								3641,
								3654
							]
						],
						"symlist":
						[
							"UMat",
							"constructor()",
							"get rows()",
							"get channels()",
							"get type()",
							"get depth()",
							"get empty()",
							"get total()",
							"get size()",
							"get continuous()",
							"get submatrix()",
							"get step()",
							"get elemSize()",
							"get elemSize1()",
							"get buffer()",
							"get array()",
							"col()",
							"row()",
							"colRange()",
							"rowRange()",
							"clone()",
							"roi()",
							"release()",
							"dup()",
							"clear()",
							"reset()",
							"step1()",
							"locateROI()",
							"zero()",
							"one()",
							"toString()",
							"inspect()",
							"at()",
							"set()",
							"setTo()",
							"convertTo()",
							"copyTo()",
							"reshape()",
							"getMat()",
							"static zeros()",
							"static ones()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADNAAAAVGlja01ldGVyCiAgY29uc3RydWN0b3IoKQogIHJlc2V0KCkKICBzdGFydCgpCiAgc3RvcCgpCiAgZ2V0IGNvdW50ZXIoKQogIGdldCB0aW1lTWljcm8oKQogIGdldCB0aW1lTWlsbGkoKQogIGdldCB0aW1lU2VjKCkKICBnZXQgdGltZVRpY2tzKCkKICBnZXQgYXZnVGltZU1pbGxpKCkKICBnZXQgYXZnVGltZVNlYygpCiAgZ2V0IGZwcygpCiAgdG9TdHJpbmcoKQAAAAAAAAAA+AEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					134,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/utility.js",
						"symkeys":
						[
							[
								34,
								43
							],
							[
								89,
								102
							],
							[
								199,
								206
							],
							[
								303,
								310
							],
							[
								406,
								412
							],
							[
								469,
								482
							],
							[
								541,
								556
							],
							[
								615,
								630
							],
							[
								687,
								700
							],
							[
								759,
								774
							],
							[
								836,
								854
							],
							[
								914,
								930
							],
							[
								983,
								992
							],
							[
								1092,
								1102
							]
						],
						"symlist":
						[
							"TickMeter",
							"constructor()",
							"reset()",
							"start()",
							"stop()",
							"get counter()",
							"get timeMicro()",
							"get timeMilli()",
							"get timeSec()",
							"get timeTicks()",
							"get avgTimeMilli()",
							"get avgTimeSec()",
							"get fps()",
							"toString()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AQAAVU1hdAogIGNvbnN0cnVjdG9yKCkKICBnZXQgcm93cygpCiAgZ2V0IGNoYW5uZWxzKCkKICBnZXQgdHlwZSgpCiAgZ2V0IGRlcHRoKCkKICBnZXQgZW1wdHkoKQogIGdldCB0b3RhbCgpCiAgZ2V0IHNpemUoKQogIGdldCBjb250aW51b3VzKCkKICBnZXQgc3VibWF0cml4KCkKICBnZXQgc3RlcCgpCiAgZ2V0IGVsZW1TaXplKCkKICBnZXQgZWxlbVNpemUxKCkKICBnZXQgYnVmZmVyKCkKICBnZXQgYXJyYXkoKQogIGNvbCgpCiAgcm93KCkKICBjb2xSYW5nZSgpCiAgcm93UmFuZ2UoKQogIGNsb25lKCkKICByb2koKQogIHJlbGVhc2UoKQogIGR1cCgpCiAgY2xlYXIoKQogIHJlc2V0KCkKICBzdGVwMSgpCiAgbG9jYXRlUk9JKCkKICB6ZXJvKCkKICBvbmUoKQogIHRvU3RyaW5nKCkKICBpbnNwZWN0KCkKICBhdCgpCiAgc2V0KCkKICBzZXRUbygpCiAgY29udmVydFRvKCkKICBjb3B5VG8oKQogIHJlc2hhcGUoKQogIGdldE1hdCgpCiAgc3RhdGljIHplcm9zKCkKICBzdGF0aWMgb25lcygpAAAAAAAAAADNAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/video_capture.js",
						"symkeys":
						[
							[
								37,
								49
							],
							[
								98,
								111
							],
							[
								209,
								214
							],
							[
								312,
								317
							],
							[
								426,
								442
							],
							[
								541,
								547
							],
							[
								650,
								660
							],
							[
								759,
								765
							],
							[
								864,
								870
							],
							[
								973,
								983
							]
						],
						"symlist":
						[
							"VideoCapture",
							"constructor()",
							"get()",
							"set()",
							"getBackendName()",
							"grab()",
							"isOpened()",
							"open()",
							"read()",
							"retrieve()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADNAAAAVGlja01ldGVyCiAgY29uc3RydWN0b3IoKQogIHJlc2V0KCkKICBzdGFydCgpCiAgc3RvcCgpCiAgZ2V0IGNvdW50ZXIoKQogIGdldCB0aW1lTWljcm8oKQogIGdldCB0aW1lTWlsbGkoKQogIGdldCB0aW1lU2VjKCkKICBnZXQgdGltZVRpY2tzKCkKICBnZXQgYXZnVGltZU1pbGxpKCkKICBnZXQgYXZnVGltZVNlYygpCiAgZ2V0IGZwcygpCiAgdG9TdHJpbmcoKQAAAAAAAAAAdAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					136,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
						"symkeys":
						[
							[
								92,
								104
							],
							[
								117,
								131
							],
							[
								183,
								199
							],
							[
								399,
								419
							],
							[
								422,
								446
							],
							[
								521,
								537
							],
							[
								624,
								633
							],
							[
								778,
								802
							],
							[
								837,
								861
							],
							[
								897,
								921
							],
							[
								959,
								983
							],
							[
								1020,
								1044
							],
							[
								1080,
								1104
							],
							[
								1143,
								1167
							],
							[
								1290,
								1310
							],
							[
								1645,
								1669
							],
							[
								1879,
								1904
							],
							[
								2028,
								2050
							],
							[
								2087,
								2097
							],
							[
								2100,
								2122
							],
							[
								2225,
								2229
							],
							[
								2367,
								2372
							],
							[
								2649,
								2668
							],
							[
								2672,
								2685
							],
							[
								2712,
								2731
							],
							[
								2735,
								2759
							],
							[
								2811,
								2834
							],
							[
								2838,
								2857
							],
							[
								3011,
								3034
							],
							[
								3713,
								3726
							],
							[
								3782,
								3797
							],
							[
								3886,
								3907
							],
							[
								4159,
								4180
							],
							[
								4315,
								4327
							],
							[
								4370,
								4379
							],
							[
								4635,
								4648
							],
							[
								4652,
								4665
							],
							[
								4681,
								4703
							],
							[
								4707,
								4729
							],
							[
								4784,
								4802
							],
							[
								4826,
								4850
							],
							[
								4867,
								4882
							],
							[
								4911,
								4935
							],
							[
								5171,
								5195
							],
							[
								5541,
								5577
							],
							[
								5581,
								5598
							],
							[
								5641,
								5665
							],
							[
								5697,
								5714
							],
							[
								5793,
								5808
							],
							[
								5812,
								5827
							],
							[
								5845,
								5859
							],
							[
								5863,
								5887
							],
							[
								5997,
								6021
							],
							[
								6063,
								6077
							],
							[
								6182,
								6203
							],
							[
								6207,
								6212
							],
							[
								6280,
								6300
							],
							[
								6425,
								6441
							],
							[
								6445,
								6467
							],
							[
								6515,
								6529
							],
							[
								6533,
								6548
							],
							[
								6552,
								6565
							],
							[
								6571,
								6594
							],
							[
								6598,
								6614
							],
							[
								6730,
								6750
							],
							[
								6758,
								6778
							],
							[
								6946,
								6969
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"DISABLE_WERROR",
							"CMAKE_BUILD_TYPE",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BUILD_TYPE",
							"LIBWS2_32",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"POSITION_INDEPENDENT_CODE",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBPTHREAD",
							"CMAKE_THREAD_LIBS_INIT",
							"LIBM",
							"LIBDL",
							"CMAKE_INSTALL_RPATH",
							"OPENCV_LIBDIR",
							"OPENCV_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_REQUIRED_INCLUDES",
							"OPENCV_INCLUDE_DIRS",
							"OPENCV_FREETYPE_LIBRARY",
							"CMAKE_C_FLAGS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_COMPILER_ID",
							"CMAKE_CXX_COMPILER_ID",
							"DEBUG_OUTPUT",
							"DEBUG_MAT",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"quickjs_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_LIBRARY",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CXX11_EXTENSION_COMPILE_OPTION",
							"CXX_STANDARD_FLAG",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BUILD_SHARED_LIBS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_FLAGS",
							"LCCV_LIBRARIES",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"OPENCV_SOURCES",
							"QUICKJS_MODULE_CFLAGS",
							"F_PIC",
							"CMAKE_INSTALL_PREFIX",
							"PNG_INCLUDE_DIRS",
							"LIBCAMERA_INCLUDE_DIRS",
							"LCCV_LIBRARIES",
							"QUICKJS_LIBRARY",
							"PNG_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY",
							"OPENCV_LIBRARIES",
							"QUICKJS_C_MODULE_DIR",
							"jsbindings_LIBRARIES",
							"OPENCV_FREETYPE_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAVmlkZW9DYXB0dXJlCiAgY29uc3RydWN0b3IoKQogIGdldCgpCiAgc2V0KCkKICBnZXRCYWNrZW5kTmFtZSgpCiAgZ3JhYigpCiAgaXNPcGVuZWQoKQogIG9wZW4oKQogIHJlYWQoKQogIHJldHJpZXZlKCkAAAAAAAAAACMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					137,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/clahe.js",
						"symkeys":
						[
							[
								30,
								35
							],
							[
								77,
								90
							],
							[
								183,
								190
							],
							[
								292,
								308
							],
							[
								363,
								378
							],
							[
								437,
								456
							]
						],
						"symlist":
						[
							"CLAHE",
							"constructor()",
							"apply()",
							"collectGarbage()",
							"get clipLimit()",
							"get tilesGridSize()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjBQAAUFJPSkVDVF9OQU1FCkRJU0FCTEVfV0VSUk9SCkNNQUtFX0JVSUxEX1RZUEUKUVVJQ0tKU19TT1VSQ0VTX1JPT1QKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JVSUxEX1RZUEUKTElCV1MyXzMyCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9USFJFQURfTElCU19JTklUCkxJQlBUSFJFQUQKQ01BS0VfVEhSRUFEX0xJQlNfSU5JVApMSUJNCkxJQkRMCkNNQUtFX0lOU1RBTExfUlBBVEgKT1BFTkNWX0xJQkRJUgpPUEVOQ1ZfSU5DTFVERV9ESVJTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9SRVFVSVJFRF9JTkNMVURFUwpPUEVOQ1ZfSU5DTFVERV9ESVJTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCkNNQUtFX0NfRkxBR1MKQ01BS0VfQ1hYX0ZMQUdTCkNNQUtFX0NYWF9DT01QSUxFUl9JRApDTUFLRV9DWFhfQ09NUElMRVJfSUQKREVCVUdfT1VUUFVUCkRFQlVHX01BVApDTUFLRV9DX0ZMQUdTCkNNQUtFX0NfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCiAgcXVpY2tqc19CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DWFgxMV9FWFRFTlNJT05fQ09NUElMRV9PUFRJT04KQ1hYX1NUQU5EQVJEX0ZMQUcKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJVSUxEX1NIQVJFRF9MSUJTCkNNQUtFX0NYWF9GTEFHUwpDTUFLRV9DWFhfRkxBR1MKTENDVl9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpPUEVOQ1ZfU09VUkNFUwpRVUlDS0pTX01PRFVMRV9DRkxBR1MKRl9QSUMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKUE5HX0lOQ0xVREVfRElSUwpMSUJDQU1FUkFfSU5DTFVERV9ESVJTCkxDQ1ZfTElCUkFSSUVTClFVSUNLSlNfTElCUkFSWQpQTkdfTElCUkFSSUVTCk9QRU5DVl9GUkVFVFlQRV9MSUJSQVJZCk9QRU5DVl9MSUJSQVJJRVMKUVVJQ0tKU19DX01PRFVMRV9ESVIKICBqc2JpbmRpbmdzX0xJQlJBUklFUwpPUEVOQ1ZfRlJFRVRZUEVfTElCUkFSWQAAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					138,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/contour.js",
						"symkeys":
						[
							[
								32,
								39
							],
							[
								83,
								96
							],
							[
								190,
								196
							],
							[
								289,
								294
							],
							[
								391,
								400
							],
							[
								495,
								502
							],
							[
								598,
								606
							],
							[
								702,
								710
							],
							[
								764,
								776
							],
							[
								828,
								838
							],
							[
								892,
								904
							],
							[
								957,
								968
							],
							[
								1027,
								1044
							],
							[
								1098,
								1110
							],
							[
								1166,
								1180
							],
							[
								1246,
								1270
							],
							[
								1329,
								1346
							],
							[
								1406,
								1424
							],
							[
								1526,
								1540
							],
							[
								1640,
								1652
							],
							[
								1763,
								1786
							],
							[
								1886,
								1898
							],
							[
								1995,
								2004
							],
							[
								2109,
								2126
							],
							[
								2224,
								2234
							],
							[
								2335,
								2348
							],
							[
								2456,
								2476
							],
							[
								2586,
								2608
							],
							[
								2714,
								2732
							],
							[
								2850,
								2880
							],
							[
								2979,
								2990
							],
							[
								3092,
								3106
							],
							[
								3212,
								3230
							],
							[
								3341,
								3364
							],
							[
								3468,
								3484
							],
							[
								3586,
								3600
							],
							[
								3712,
								3736
							],
							[
								3842,
								3860
							],
							[
								3972,
								3996
							],
							[
								4115,
								4146
							],
							[
								4243,
								4252
							],
							[
								4350,
								4360
							],
							[
								4458,
								4468
							],
							[
								4563,
								4570
							],
							[
								4666,
								4674
							],
							[
								4800,
								4810
							],
							[
								5032,
								5049
							]
						],
						"symlist":
						[
							"Contour",
							"constructor()",
							"push()",
							"pop()",
							"unshift()",
							"shift()",
							"concat()",
							"getMat()",
							"get length()",
							"get area()",
							"get buffer()",
							"get array()",
							"get aspectRatio()",
							"get extent()",
							"get solidity()",
							"get equivalentDiameter()",
							"get orientation()",
							"get boundingRect()",
							"approxPolyDP()",
							"convexHull()",
							"getBoundingClientRect()",
							"fitEllipse()",
							"fitLine()",
							"intersectConvex()",
							"isConvex()",
							"minAreaRect()",
							"minEnclosingCircle()",
							"minEnclosingTriangle()",
							"pointPolygonTest()",
							"rotatedRectangleIntersection()",
							"arcLength()",
							"rotatePoints()",
							"convexityDefects()",
							"simplifyReumannWitkam()",
							"simplifyOpheim()",
							"simplifyLang()",
							"simplifyDouglasPeucker()",
							"simplifyNthPoint()",
							"simplifyRadialDistance()",
							"simplifyPerpendicularDistance()",
							"toArray()",
							"toString()",
							"toSource()",
							"lines()",
							"points()",
							"get size()",
							"static fromRect()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAAAAQ0xBSEUKICBjb25zdHJ1Y3RvcigpCiAgYXBwbHkoKQogIGNvbGxlY3RHYXJiYWdlKCkKICBnZXQgY2xpcExpbWl0KCkKICBnZXQgdGlsZXNHcmlkU2l6ZSgpAAAAAAAAAAAsAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					139,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.cpp",
						"symkeys":
						[
							[
								193,
								241
							],
							[
								423,
								460
							],
							[
								2691,
								2731
							],
							[
								2800,
								2840
							],
							[
								2867,
								2905
							],
							[
								2978,
								3016
							],
							[
								3043,
								3082
							],
							[
								3178,
								3217
							],
							[
								3254,
								3292
							],
							[
								3379,
								3417
							],
							[
								3453,
								3486
							],
							[
								3537,
								3570
							],
							[
								3618,
								3632
							],
							[
								4092,
								4109
							],
							[
								5117,
								5129
							],
							[
								5561,
								5573
							],
							[
								6440,
								6447
							],
							[
								6971,
								6979
							],
							[
								7223,
								7231
							],
							[
								7779,
								7788
							],
							[
								8506,
								8517
							],
							[
								8800,
								8810
							],
							[
								9001,
								9013
							],
							[
								9130,
								9140
							]
						],
						"symlist":
						[
							"dominant_colors_grabber::dominant_colors_grabber",
							"dominant_colors_grabber::GetDomColors",
							"dominant_colors_grabber::SetDistanceType",
							"dominant_colors_grabber::GetDistanceType",
							"dominant_colors_grabber::SetColorSpace",
							"dominant_colors_grabber::GetColorSpace",
							"dominant_colors_grabber::SetColorsCount",
							"dominant_colors_grabber::GetColorsCount",
							"dominant_colors_grabber::SetColorsPart",
							"dominant_colors_grabber::GetColorsPart",
							"dominant_colors_grabber::SetParam",
							"dominant_colors_grabber::GetParam",
							"MarkNearColors",
							"MarkNearColorsCIE",
							"GetCIE76Dist",
							"GetCIE94Dist",
							"GetHist",
							"DrawCube",
							"DrawCube",
							"GetCenter",
							"GetGabarits",
							"CycleRange",
							"CyclePoint3d",
							"ShowColors"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAsAwAAQ29udG91cgogIGNvbnN0cnVjdG9yKCkKICBwdXNoKCkKICBwb3AoKQogIHVuc2hpZnQoKQogIHNoaWZ0KCkKICBjb25jYXQoKQogIGdldE1hdCgpCiAgZ2V0IGxlbmd0aCgpCiAgZ2V0IGFyZWEoKQogIGdldCBidWZmZXIoKQogIGdldCBhcnJheSgpCiAgZ2V0IGFzcGVjdFJhdGlvKCkKICBnZXQgZXh0ZW50KCkKICBnZXQgc29saWRpdHkoKQogIGdldCBlcXVpdmFsZW50RGlhbWV0ZXIoKQogIGdldCBvcmllbnRhdGlvbigpCiAgZ2V0IGJvdW5kaW5nUmVjdCgpCiAgYXBwcm94UG9seURQKCkKICBjb252ZXhIdWxsKCkKICBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogIGZpdEVsbGlwc2UoKQogIGZpdExpbmUoKQogIGludGVyc2VjdENvbnZleCgpCiAgaXNDb252ZXgoKQogIG1pbkFyZWFSZWN0KCkKICBtaW5FbmNsb3NpbmdDaXJjbGUoKQogIG1pbkVuY2xvc2luZ1RyaWFuZ2xlKCkKICBwb2ludFBvbHlnb25UZXN0KCkKICByb3RhdGVkUmVjdGFuZ2xlSW50ZXJzZWN0aW9uKCkKICBhcmNMZW5ndGgoKQogIHJvdGF0ZVBvaW50cygpCiAgY29udmV4aXR5RGVmZWN0cygpCiAgc2ltcGxpZnlSZXVtYW5uV2l0a2FtKCkKICBzaW1wbGlmeU9waGVpbSgpCiAgc2ltcGxpZnlMYW5nKCkKICBzaW1wbGlmeURvdWdsYXNQZXVja2VyKCkKICBzaW1wbGlmeU50aFBvaW50KCkKICBzaW1wbGlmeVJhZGlhbERpc3RhbmNlKCkKICBzaW1wbGlmeVBlcnBlbmRpY3VsYXJEaXN0YW5jZSgpCiAgdG9BcnJheSgpCiAgdG9TdHJpbmcoKQogIHRvU291cmNlKCkKICBsaW5lcygpCiAgcG9pbnRzKCkKICBnZXQgc2l6ZSgpCiAgc3RhdGljIGZyb21SZWN0KCkAAAAAAAAAAH4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					140,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/imgproc.js",
						"symkeys":
						[
							[
								27,
								29
							],
							[
								68,
								81
							],
							[
								170,
								176
							],
							[
								273,
								287
							],
							[
								384,
								398
							],
							[
								493,
								505
							],
							[
								601,
								614
							],
							[
								711,
								725
							],
							[
								815,
								822
							],
							[
								926,
								947
							],
							[
								1040,
								1050
							],
							[
								1147,
								1161
							],
							[
								1255,
								1266
							],
							[
								1366,
								1383
							],
							[
								1480,
								1494
							],
							[
								1591,
								1605
							],
							[
								1706,
								1724
							],
							[
								1821,
								1835
							],
							[
								1928,
								1938
							],
							[
								2029,
								2037
							],
							[
								2127,
								2134
							],
							[
								2231,
								2245
							],
							[
								2340,
								2352
							],
							[
								2452,
								2469
							],
							[
								2571,
								2590
							],
							[
								2697,
								2721
							],
							[
								2820,
								2836
							],
							[
								2936,
								2953
							],
							[
								3050,
								3064
							],
							[
								3161,
								3175
							],
							[
								3270,
								3282
							],
							[
								3384,
								3403
							],
							[
								3504,
								3522
							],
							[
								3625,
								3645
							],
							[
								3749,
								3770
							],
							[
								3869,
								3885
							],
							[
								3987,
								4006
							],
							[
								4102,
								4115
							],
							[
								4217,
								4236
							],
							[
								4330,
								4341
							],
							[
								4433,
								4442
							],
							[
								4535,
								4545
							],
							[
								4639,
								4650
							],
							[
								4748,
								4763
							],
							[
								4855,
								4864
							],
							[
								4960,
								4973
							],
							[
								5076,
								5096
							],
							[
								5204,
								5229
							],
							[
								5327,
								5342
							],
							[
								5446,
								5467
							],
							[
								5572,
								5594
							],
							[
								5700,
								5723
							],
							[
								5819,
								5832
							],
							[
								5925,
								5935
							],
							[
								6025,
								6032
							],
							[
								6123,
								6131
							],
							[
								6226,
								6238
							],
							[
								6338,
								6355
							],
							[
								6449,
								6460
							],
							[
								6560,
								6577
							],
							[
								6666,
								6672
							],
							[
								6766,
								6777
							],
							[
								6874,
								6888
							],
							[
								6979,
								6987
							],
							[
								7077,
								7084
							],
							[
								7177,
								7187
							],
							[
								7284,
								7298
							],
							[
								7398,
								7415
							],
							[
								7514,
								7530
							],
							[
								7632,
								7651
							],
							[
								7757,
								7780
							],
							[
								7874,
								7885
							],
							[
								7980,
								7992
							],
							[
								8105,
								8135
							],
							[
								8232,
								8246
							],
							[
								8338,
								8347
							],
							[
								8453,
								8476
							],
							[
								8566,
								8573
							],
							[
								8664,
								8672
							],
							[
								8768,
								8781
							],
							[
								8871,
								8878
							],
							[
								8978,
								8995
							],
							[
								9092,
								9106
							],
							[
								9203,
								9217
							],
							[
								9311,
								9322
							],
							[
								9416,
								9427
							],
							[
								9531,
								9552
							],
							[
								9665,
								9695
							],
							[
								9791,
								9804
							],
							[
								9899,
								9911
							],
							[
								10012,
								10030
							],
							[
								10144,
								10175
							],
							[
								10286,
								10314
							],
							[
								10409,
								10421
							],
							[
								10519,
								10534
							],
							[
								10635,
								10653
							],
							[
								10745,
								10754
							],
							[
								10848,
								10859
							],
							[
								10965,
								10988
							],
							[
								11088,
								11105
							],
							[
								11201,
								11214
							],
							[
								11310,
								11323
							],
							[
								11426,
								11446
							],
							[
								11551,
								11573
							],
							[
								11686,
								11716
							]
						],
						"symlist":
						[
							"cv",
							"constructor()",
							"blur()",
							"boundingRect()",
							"GaussianBlur()",
							"HoughLines()",
							"HoughLinesP()",
							"HoughCircles()",
							"Canny()",
							"goodFeaturesToTrack()",
							"cvtColor()",
							"equalizeHist()",
							"threshold()",
							"bilateralFilter()",
							"findContours()",
							"drawContours()",
							"pointPolygonTest()",
							"cornerHarris()",
							"calcHist()",
							"dilate()",
							"erode()",
							"morphologyEx()",
							"medianBlur()",
							"skeletonization()",
							"pixelNeighborhood()",
							"pixelNeighborhoodCross()",
							"pixelFindValue()",
							"paletteGenerate()",
							"paletteApply()",
							"paletteMatch()",
							"accumulate()",
							"accumulateProduct()",
							"accumulateSquare()",
							"accumulateWeighted()",
							"createHanningWindow()",
							"phaseCorrelate()",
							"adaptiveThreshold()",
							"blendLinear()",
							"distanceTransform()",
							"floodFill()",
							"grabCut()",
							"integral()",
							"watershed()",
							"applyColorMap()",
							"moments()",
							"convertMaps()",
							"getAffineTransform()",
							"getPerspectiveTransform()",
							"getRectSubPix()",
							"getRotationMatrix2D()",
							"getRotationMatrix2D_()",
							"invertAffineTransform()",
							"linearPolar()",
							"logPolar()",
							"remap()",
							"resize()",
							"warpAffine()",
							"warpPerspective()",
							"warpPolar()",
							"bilateralFilter()",
							"blur()",
							"boxFilter()",
							"buildPyramid()",
							"dilate()",
							"erode()",
							"filter2D()",
							"GaussianBlur()",
							"getDerivKernels()",
							"getGaborKernel()",
							"getGaussianKernel()",
							"getStructuringElement()",
							"Laplacian()",
							"medianBlur()",
							"morphologyDefaultBorderValue()",
							"morphologyEx()",
							"pyrDown()",
							"pyrMeanShiftFiltering()",
							"pyrUp()",
							"Scharr()",
							"sepFilter2D()",
							"Sobel()",
							"spatialGradient()",
							"sqrBoxFilter()",
							"approxPolyDP()",
							"arcLength()",
							"boxPoints()",
							"connectedComponents()",
							"connectedComponentsWithStats()",
							"contourArea()",
							"convexHull()",
							"convexityDefects()",
							"createGeneralizedHoughBallard()",
							"createGeneralizedHoughGuil()",
							"fitEllipse()",
							"fitEllipseAMS()",
							"fitEllipseDirect()",
							"fitLine()",
							"HuMoments()",
							"intersectConvexConvex()",
							"isContourConvex()",
							"matchShapes()",
							"minAreaRect()",
							"minEnclosingCircle()",
							"minEnclosingTriangle()",
							"rotatedRectangleIntersection()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB+AgAAICBkb21pbmFudF9jb2xvcnNfZ3JhYmJlcjo6ZG9taW5hbnRfY29sb3JzX2dyYWJiZXIKICBkb21pbmFudF9jb2xvcnNfZ3JhYmJlcjo6R2V0RG9tQ29sb3JzCiAgZG9taW5hbnRfY29sb3JzX2dyYWJiZXI6OlNldERpc3RhbmNlVHlwZQogIGRvbWluYW50X2NvbG9yc19ncmFiYmVyOjpHZXREaXN0YW5jZVR5cGUKICBkb21pbmFudF9jb2xvcnNfZ3JhYmJlcjo6U2V0Q29sb3JTcGFjZQogIGRvbWluYW50X2NvbG9yc19ncmFiYmVyOjpHZXRDb2xvclNwYWNlCiAgZG9taW5hbnRfY29sb3JzX2dyYWJiZXI6OlNldENvbG9yc0NvdW50CiAgZG9taW5hbnRfY29sb3JzX2dyYWJiZXI6OkdldENvbG9yc0NvdW50CiAgZG9taW5hbnRfY29sb3JzX2dyYWJiZXI6OlNldENvbG9yc1BhcnQKICBkb21pbmFudF9jb2xvcnNfZ3JhYmJlcjo6R2V0Q29sb3JzUGFydAogIGRvbWluYW50X2NvbG9yc19ncmFiYmVyOjpTZXRQYXJhbQogIGRvbWluYW50X2NvbG9yc19ncmFiYmVyOjpHZXRQYXJhbQpNYXJrTmVhckNvbG9ycwpNYXJrTmVhckNvbG9yc0NJRQpHZXRDSUU3NkRpc3QKR2V0Q0lFOTREaXN0CkdldEhpc3QKRHJhd0N1YmUKRHJhd0N1YmUKR2V0Q2VudGVyCkdldEdhYmFyaXRzCkN5Y2xlUmFuZ2UKQ3ljbGVQb2ludDNkClNob3dDb2xvcnMAAAAAAAAAADwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "js_raspi_cam.cpp",
			"settings":
			{
				"buffer_size": 6053,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					890,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOAmAAAAAAAA4SYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CYAAAAAAADgJgAAAAAAAAAAAAAAAPC/"
				],
				[
					903,
					1,
					"paste",
					null,
					"AQAAAM4EAAAAAAAA+gUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgQAAAAAAADOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					907,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOEEAAAAAAAA4gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"left_delete",
					null,
					"AQAAAOEEAAAAAAAA4QQAAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gQAAAAAAADiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"paste",
					null,
					"AgAAAM4EAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAeBgAAAAAAACsBAAAKdm9pZApqc19yYXNwaV9jYW1fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgSlNSYXNwaUNhbURhdGEqIHMgPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZSh2YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwogIC8qIE5vdGU6ICdzJyBjYW4gYmUgTlVMTCBpbiBjYXNlIEpTX1NldE9wYXF1ZSgpIHdhcyBub3QgY2FsbGVkICovCgogIHMtPn5KU1Jhc3BpQ2FtRGF0YSgpOwogIGpzX2RlYWxsb2NhdGUocnQsIHMpOwoKICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgQAAAAAAAD5BQAAAAAAAAAAAAAAQGBA"
				],
				[
					962,
					1,
					"paste",
					null,
					"AgAAAAkqAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABQMAAAAAAAAEEGAAAKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX29wdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IG1hZ2ljKSB7CiAgSlNSYXNwaUNhbURhdGEqIHMgPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CgogIHJldHVybiBqc19yYXNwaV9jYW1fb3B0aW9uc193cmFwKGN0eCwgcy0+R2V0T3B0aW9ucygpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNSYXNwaUNhbURhdGEqIHMgPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50MzJfdCBwcm9wSUQ7CiAgZG91YmxlIHZhbHVlID0gMDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIE1FVEhPRF9DQU1FUkFfSUQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9PUEVOX0NBTUVSQTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0NMT1NFX0NBTUVSQTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0NPTkZJR1VSRV9TVElMTDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0NPTkZJR1VSRV9WSUVXRklOREVSOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfVEVBUkRPV046IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9TVEFSVF9DQU1FUkE6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9TVE9QX0NBTUVSQTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1dBSVQ6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9QT1NUX01FU1NBR0U6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9HRVRfU1RSRUFNOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfVklFV0ZJTkRFUl9TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9TVElMTF9TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9SQVdfU1RSRUFNOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfVklERU9fU1RSRUFNOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfTE9SRVNfU1RSRUFNOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfR0VUX01BSU5fU1RSRUFNOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfTU1BUDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1NFVF9DT05UUk9MUzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1NUUkVBTV9ESU1FTlNJT05TOiB7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACSoAAAAAAABKMAAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": "\ncam->OpenCa"
					},
					"DgAAAJMsAAAAAAAAlCwAAAAAAAAAAAAAlCwAAAAAAACYLAAAAAAAAAAAAACYLAAAAAAAAJosAAAAAAAAAAAAAJosAAAAAAAAmywAAAAAAAAAAAAAmywAAAAAAACcLAAAAAAAAAAAAACcLAAAAAAAAJ0sAAAAAAAAAAAAAJ0sAAAAAAAAniwAAAAAAAAAAAAAniwAAAAAAACfLAAAAAAAAAAAAACfLAAAAAAAAKAsAAAAAAAAAAAAAKAsAAAAAAAAoSwAAAAAAAAAAAAAoSwAAAAAAACiLAAAAAAAAAAAAACiLAAAAAAAAKMsAAAAAAAAAAAAAKMsAAAAAAAApCwAAAAAAAAAAAAApCwAAAAAAAClLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkywAAAAAAACTLAAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "mera"
					},
					"BAAAAKUsAAAAAAAApiwAAAAAAAAAAAAApiwAAAAAAACnLAAAAAAAAAAAAACnLAAAAAAAAKgsAAAAAAAAAAAAAKgsAAAAAAAAqSwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApSwAAAAAAAClLAAAAAAAAAAAAAAAAPC/"
				],
				[
					967,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKksAAAAAAAAqywAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqSwAAAAAAACpLAAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKssAAAAAAAArCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqywAAAAAAACrLAAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"cut",
					null,
					"AQAAAJQsAAAAAAAAlCwAAAAAAAAZAAAAICAgICAgY2FtLT5PcGVuQ2FtZXJhKCk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArSwAAAAAAACULAAAAAAAAAAAAAAAAAAA"
				],
				[
					973,
					1,
					"paste",
					null,
					"AQAAAJQsAAAAAAAArSwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlCwAAAAAAACULAAAAAAAAAAAAAAAAPC/"
				],
				[
					975,
					1,
					"paste",
					null,
					"AQAAAOAsAAAAAAAA+SwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4CwAAAAAAADgLAAAAAAAAAAAAAAAAAAA"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "CloseCamera"
					},
					"DAAAAOssAAAAAAAA7CwAAAAAAAAAAAAA7CwAAAAAAADsLAAAAAAAAAoAAABPcGVuQ2FtZXJh7CwAAAAAAADtLAAAAAAAAAAAAADtLAAAAAAAAO4sAAAAAAAAAAAAAO4sAAAAAAAA7ywAAAAAAAAAAAAA7ywAAAAAAADwLAAAAAAAAAAAAADwLAAAAAAAAPEsAAAAAAAAAAAAAPEsAAAAAAAA8iwAAAAAAAAAAAAA8iwAAAAAAADzLAAAAAAAAAAAAADzLAAAAAAAAPQsAAAAAAAAAAAAAPQsAAAAAAAA9SwAAAAAAAAAAAAA9SwAAAAAAAD2LAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6ywAAAAAAAD1LAAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"paste",
					null,
					"AQAAANI4AAAAAAAAPToAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0jgAAAAAAADSOAAAAAAAAAAAAAAAAPC/"
				],
				[
					993,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOE4AAAAAAAA4jgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4TgAAAAAAADhOAAAAAAAAAAAAAAAAPC/"
				],
				[
					995,
					1,
					"insert",
					{
						"characters": "Camer"
					},
					"BQAAAOE4AAAAAAAA4jgAAAAAAAAAAAAA4jgAAAAAAADjOAAAAAAAAAAAAADjOAAAAAAAAOQ4AAAAAAAAAAAAAOQ4AAAAAAAA5TgAAAAAAAAAAAAA5TgAAAAAAADmOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4TgAAAAAAADhOAAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					5,
					"left_delete",
					null,
					"BQAAAOU4AAAAAAAA5TgAAAAAAAABAAAAcuQ4AAAAAAAA5DgAAAAAAAABAAAAZeM4AAAAAAAA4zgAAAAAAAABAAAAbeI4AAAAAAAA4jgAAAAAAAABAAAAYeE4AAAAAAAA4TgAAAAAAAABAAAAQw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5jgAAAAAAADmOAAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "LibcameraApp"
					},
					"DAAAAOE4AAAAAAAA4jgAAAAAAAAAAAAA4jgAAAAAAADjOAAAAAAAAAAAAADjOAAAAAAAAOQ4AAAAAAAAAAAAAOQ4AAAAAAAA5TgAAAAAAAAAAAAA5TgAAAAAAADmOAAAAAAAAAAAAADmOAAAAAAAAOc4AAAAAAAAAAAAAOc4AAAAAAAA6DgAAAAAAAAAAAAA6DgAAAAAAADpOAAAAAAAAAAAAADpOAAAAAAAAOo4AAAAAAAAAAAAAOo4AAAAAAAA6zgAAAAAAAAAAAAA6zgAAAAAAADsOAAAAAAAAAAAAADsOAAAAAAAAO04AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4TgAAAAAAADhOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1002,
					2,
					"right_delete",
					null,
					"AgAAAOE4AAAAAAAA4TgAAAAAAAAMAAAATGliY2FtZXJhQXBw4TgAAAAAAADhOAAAAAAAAAEAAAAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4TgAAAAAAADtOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"",
					null,
					"AQAAAOE4AAAAAAAA9DgAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4TgAAAAAAADmOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					1,
					"",
					null,
					"AQAAABA5AAAAAAAAIzkAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEDkAAAAAAAAVOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1010,
					1,
					"",
					null,
					"AQAAAD45AAAAAAAAUTkAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPjkAAAAAAABDOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1011,
					1,
					"",
					null,
					"AQAAAGw5AAAAAAAAfzkAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbDkAAAAAAABxOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1012,
					1,
					"",
					null,
					"AQAAAJo5AAAAAAAArTkAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmjkAAAAAAACfOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1013,
					1,
					"",
					null,
					"AQAAANI5AAAAAAAA5TkAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0jkAAAAAAADXOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1014,
					1,
					"",
					null,
					"AQAAAAo6AAAAAAAAHToAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACjoAAAAAAAAPOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1015,
					1,
					"",
					null,
					"AQAAAEA6AAAAAAAAUzoAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQDoAAAAAAABFOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1016,
					1,
					"",
					null,
					"AQAAAG86AAAAAAAAgjoAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbzoAAAAAAAB0OgAAAAAAAAAAAAAAAPC/"
				],
				[
					1017,
					1,
					"",
					null,
					"AQAAAJ06AAAAAAAAsDoAAAAAAAAFAAAARkxBR18",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnToAAAAAAACiOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGYgAAAAAAAAZyAAAAAAAAAAAAAAZyAAAAAAAABnIAAAAAAAAGQCAAAKc3RhdGljIGJvb2wKanNfcmFzcGlfY2FtX29wZW4oSlNDb250ZXh0KiBjdHgsIEpTUmFzcGlDYW1EYXRhKiBzLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIGludDMyX3QgY2FtSUQgPSAtMSwgYXBpUHJlZmVyZW5jZSA9IGN2OjpDQVBfQU5ZOwogIGN2OjpTdHJpbmcgZmlsZW5hbWU7CgogIGZpbGVuYW1lID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CgogIGlmKGFyZ2MgPiAxKQogICAgSlNfVG9JbnQzMihjdHgsICZhcGlQcmVmZXJlbmNlLCBhcmd2WzFdKTsKCiAgaWYoaXNfbnVtZXJpYyhmaWxlbmFtZSkpIHsKICAgIEpTX1RvSW50MzIoY3R4LCAmY2FtSUQsIGFyZ3ZbMF0pOwogICAgZmlsZW5hbWUgPSAiIjsKICB9CgogIHN0ZDo6Y2VyciA8PCAiUmFzcGlDYW0ub3BlbiBmaWxlbmFtZT0nIiA8PCBmaWxlbmFtZSA8PCAiJywgY2FtSUQ9IiA8PCBjYW1JRCA8PCAiLCBhcGlQcmVmZXJlbmNlPSIgPDwgYXBpUHJlZmVyZW5jZSA8PCBzdGQ6OmVuZGw7CgogIGlmKGZpbGVuYW1lLmVtcHR5KCkpCiAgICByZXR1cm4gcy0+b3BlbihjYW1JRCwgYXBpUHJlZmVyZW5jZSk7CgogIHJldHVybiBzLT5vcGVuKGZpbGVuYW1lLCBhcGlQcmVmZXJlbmNlKTsKfQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZiAAAAAAAADKIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1046,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI8hAAAAAAAAkCEAAAAAAAAAAAAAkCEAAAAAAACQIQAAAAAAAJwAAAAKICBpZihhcmdjID4gMCkgewogICAgaWYoIWpzX3Jhc3BpX2NhbV9vcGVuKGN0eCwgcywgYXJnYywgYXJndikpIHsKICAgICAgZGVsZXRlIHM7CiAgICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiUmFzcGlDYW0ub3BlbiBlcnJvciIpOwogICAgfQogIH0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjyEAAAAAAAArIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1088,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANM1AAAAAAAA1DUAAAAAAAAAAAAA1DUAAAAAAADUNQAAAAAAAPcBAAAKSlNfQ1ZfQ09OU1RBTlQoTGliY2FtZXJhQXBwOjpGTEFHX1NUSUxMX05PTkUpLApKU19DVl9DT05TVEFOVChMaWJjYW1lcmFBcHA6OkZMQUdfU1RJTExfQkdSKSwKSlNfQ1ZfQ09OU1RBTlQoTGliY2FtZXJhQXBwOjpGTEFHX1NUSUxMX1JHQiksCkpTX0NWX0NPTlNUQU5UKExpYmNhbWVyYUFwcDo6RkxBR19TVElMTF9SQVcpLApKU19DVl9DT05TVEFOVChMaWJjYW1lcmFBcHA6OkZMQUdfU1RJTExfRE9VQkxFX0JVRkZFUiksCkpTX0NWX0NPTlNUQU5UKExpYmNhbWVyYUFwcDo6RkxBR19TVElMTF9UUklQTEVfQlVGRkVSKSwKSlNfQ1ZfQ09OU1RBTlQoTGliY2FtZXJhQXBwOjpGTEFHX1NUSUxMX0JVRkZFUl9NQVNLKSwKSlNfQ1ZfQ09OU1RBTlQoTGliY2FtZXJhQXBwOjpGTEFHX1ZJREVPX05PTkUpLApKU19DVl9DT05TVEFOVChMaWJjYW1lcmFBcHA6OkZMQUdfVklERU9fUkFXKSwKSlNfQ1ZfQ09OU1RBTlQoTGliY2FtZXJhQXBwOjpGTEFHX1ZJREVPX0pQRUdfQ09MT1VSU1BBQ0UpLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyjcAAAAAAADTNQAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"paste",
					null,
					"AgAAABQvAAAAAAAAsDAAAAAAAAAAAAAAsDAAAAAAAACwMAAAAAAAAIoGAAAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjYW1lcmFJZCIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9DQU1FUkFfSUQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJvcGVuQ2FtZXJhIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX09QRU5fQ0FNRVJBKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2xvc2VDYW1lcmEiLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfQ0xPU0VfQ0FNRVJBKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY29uZmlndXJlU3RpbGwiLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfQ09ORklHVVJFX1NUSUxMKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY29uZmlndXJlVmlld2ZpbmRlciIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9DT05GSUdVUkVfVklFV0ZJTkRFUiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRlYXJkb3duIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX1RFQVJET1dOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRDYW1lcmEiLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfU1RBUlRfQ0FNRVJBKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RvcENhbWVyYSIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9TVE9QX0NBTUVSQSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIndhaXQiLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfV0FJVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInBvc3RNZXNzYWdlIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX1BPU1RfTUVTU0FHRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFN0cmVhbSIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9HRVRfU1RSRUFNKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidmlld2ZpbmRlclN0cmVhbSIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9WSUVXRklOREVSX1NUUkVBTSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0aWxsU3RyZWFtIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX1NUSUxMX1NUUkVBTSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJhd1N0cmVhbSIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9SQVdfU1RSRUFNKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigidmlkZW9TdHJlYW0iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfVklERU9fU1RSRUFNKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibG9yZXNTdHJlYW0iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBNRVRIT0RfTE9SRVNfU1RSRUFNKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0TWFpblN0cmVhbSIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9HRVRfTUFJTl9TVFJFQU0pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJtbWFwIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX01NQVApLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRDb250cm9scyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIE1FVEhPRF9TRVRfQ09OVFJPTFMpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdHJlYW1EaW1lbnNpb25zIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgTUVUSE9EX1NUUkVBTV9ESU1FTlNJT05TKSwKICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnjUAAAAAAAAULwAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"paste",
					null,
					"AgAAADwlAAAAAAAAsyUAAAAAAAAAAAAAsyUAAAAAAACzJQAAAAAAAMoBAAAgIE1FVEhPRF9DQU1FUkFfSUQgPSAwLAogIE1FVEhPRF9PUEVOX0NBTUVSQSwKICBNRVRIT0RfQ0xPU0VfQ0FNRVJBLAogIE1FVEhPRF9DT05GSUdVUkVfU1RJTEwsCiAgTUVUSE9EX0NPTkZJR1VSRV9WSUVXRklOREVSLAogIE1FVEhPRF9URUFSRE9XTiwKICBNRVRIT0RfU1RBUlRfQ0FNRVJBLAogIE1FVEhPRF9TVE9QX0NBTUVSQSwKICBNRVRIT0RfV0FJVCwKICBNRVRIT0RfUE9TVF9NRVNTQUdFLAogIE1FVEhPRF9HRVRfU1RSRUFNLAogIE1FVEhPRF9WSUVXRklOREVSX1NUUkVBTSwKICBNRVRIT0RfU1RJTExfU1RSRUFNLAogIE1FVEhPRF9SQVdfU1RSRUFNLAogIE1FVEhPRF9WSURFT19TVFJFQU0sCiAgTUVUSE9EX0xPUkVTX1NUUkVBTSwKICBNRVRIT0RfR0VUX01BSU5fU1RSRUFNLAogIE1FVEhPRF9NTUFQLAogIE1FVEhPRF9TRVRfQ09OVFJPTFMsCiAgTUVUSE9EX1NUUkVBTV9ESU1FTlNJT05TLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABicAAAAAAAA8JQAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert",
					{
						"characters": "=0"
					},
					"AgAAAFMlAAAAAAAAVCUAAAAAAAAAAAAAVCUAAAAAAABVJQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUyUAAAAAAABTJQAAAAAAAAAAAAAAAPC/"
				],
				[
					1129,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPgnAAAAAAAA+ScAAAAAAAAAAAAA+ScAAAAAAAD5JwAAAAAAACcEAAAgIGNhc2UgTUVUSE9EX0NBTUVSQV9JRDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX09QRU5fQ0FNRVJBOiB7CiAgICAgIGNhbS0+T3BlbkNhbWVyYSgpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0NMT1NFX0NBTUVSQTogewogICAgICBjYW0tPkNsb3NlQ2FtZXJhKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfQ09ORklHVVJFX1NUSUxMOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfQ09ORklHVVJFX1ZJRVdGSU5ERVI6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9URUFSRE9XTjogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1NUQVJUX0NBTUVSQTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1NUT1BfQ0FNRVJBOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfV0FJVDogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1BPU1RfTUVTU0FHRTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0dFVF9TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9WSUVXRklOREVSX1NUUkVBTTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1NUSUxMX1NUUkVBTTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1JBV19TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9WSURFT19TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9MT1JFU19TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9HRVRfTUFJTl9TVFJFQU06IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9NTUFQOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfU0VUX0NPTlRST0xTOiB7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfU1RSRUFNX0RJTUVOU0lPTlM6IHsKICAgICAgYnJlYWs7CiAgICB9",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+CcAAAAAAAAfLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1132,
					1,
					"paste",
					null,
					"AQAAAPknAAAAAAAAwCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ScAAAAAAAD5JwAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD9AQAAAAAAAFAAAAAsIHJhc3BpX2NhbV9vcHRpb25zX3Byb3RvID0gSlNfVU5ERUZJTkVELCByYXNwaV9jYW1fb3B0aW9uc19jbGFzcyA9IEpTX1VOREVGSU5FRA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AEAAAAAAABMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					3,
					"left_delete",
					null,
					"AwAAADkCAAAAAAAAOQIAAAAAAAAdAAAAanNfcmFzcGlfY2FtX29wdGlvbnNfY2xhc3NfaWQ4AgAAAAAAADgCAAAAAAAAAQAAACA3AgAAAAAAADcCAAAAAAAAAQAAACw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					4,
					"right_delete",
					null,
					"BAAAADcCAAAAAAAANwIAAAAAAAABAAAAIDcCAAAAAAAANwIAAAAAAAABAAAAPTcCAAAAAAAANwIAAAAAAAABAAAAIDcCAAAAAAAANwIAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"cut",
					null,
					"AQAAADwBAAAAAAAAPAEAAAAAAAAnAAAAdHlwZWRlZiBPcHRpb25zIEpTUmFzcGlDYW1PcHRpb25zRGF0YTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPAEAAAAAAABjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1172,
					1,
					"insert",
					{
						"characters": " "
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwIAAAAAAADOHwAAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABGFgAAI2luY2x1ZGUgImpzX2FsbG9jLmhwcCIKI2luY2x1ZGUgImpzX21hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRCA7CnRocmVhZF9sb2NhbCBWSVNJQkxFIEpTQ2xhc3NJRCBqc19yYXNwaV9jYW1fY2xhc3NfaWQgPSAwOwp9IAoKCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwogCgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwogIEpTX1NldE9wYXF1ZShvYmosIHMpOwogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZGVhbGxvY2F0ZShjdHgsIHMpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKZXh0ZXJuICJDIiBWSVNJQkxFIEpTUmFzcGlDYW1EYXRhKgpqc19yYXNwaV9jYW1fZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKfQoKdm9pZApqc19yYXNwaV9jYW1fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgSlNSYXNwaUNhbURhdGEqIHMgPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZSh2YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwogIC8qIE5vdGU6ICdzJyBjYW4gYmUgTlVMTCBpbiBjYXNlIEpTX1NldE9wYXF1ZSgpIHdhcyBub3QgY2FsbGVkICovCgogIHMtPn5KU1Jhc3BpQ2FtRGF0YSgpOwogIGpzX2RlYWxsb2NhdGUocnQsIHMpOwoKICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKZW51bSB7ClJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPPTAsClJBU1BJX0NBTV9TVE9QX1BIT1RPLApSQVNQSV9DQU1fU1RBUlRfVklERU8sClJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUUsClJBU1BJX0NBTV9TVE9QX1ZJREVPLAoKCn07CgpzdGF0aWMgSlNWYWx1ZQpqc19yYXNwaV9jYW1fb3B0aW9ucyhKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBKU1Jhc3BpQ2FtRGF0YSogY2FtID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwoKICByZXR1cm4ganNfcmFzcGlfY2FtX29wdGlvbnNfd3JhcChjdHgsIGNhbS0+R2V0T3B0aW9ucygpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNSYXNwaUNhbURhdGEqIGNhbSA9IHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHRoaXNfdmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBpbnQzMl90IHByb3BJRDsKICBkb3VibGUgdmFsdWUgPSAwOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgY2FzZSBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTzogeyBicmVhazsgfQpjYXNlIFJBU1BJX0NBTV9TVE9QX1BIT1RPOiB7IGJyZWFrOyB9CmNhc2UgUkFTUElfQ0FNX1NUQVJUX1ZJREVPOiB7IGJyZWFrOyB9CmNhc2UgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRTogeyBicmVhazsgfQpjYXNlIFJBU1BJX0NBTV9TVE9QX1ZJREVPOiB7IGJyZWFrOyB9CgogIH0KCiAgcmV0dXJuIHJldDsKfQoKVklTSUJMRSBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV93cmFwKEpTQ29udGV4dCogY3R4LCBSYXNwaUNhbURhdGEqIGNhbSkgewogIEpTVmFsdWUgcmV0OwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcmFzcGlfY2FtX3Byb3RvLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwoKICAvLyBjYXAtPmFkZHJlZigpOwoKICBKU19TZXRPcGFxdWUocmV0LCBjYW0pOwoKICByZXR1cm4gcmV0Owp9CgpKU0NsYXNzRGVmIGpzX3Jhc3BpX2NhbV9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIlJhc3BpQ2FtIiwKICAgIC5maW5hbGl6ZXIgPSBqc19yYXNwaV9jYW1fZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcmFzcGlfY2FtX3Byb3RvX2Z1bmNzW10gPSB7CkpTX0NGVU5DX01BR0lDX0RFRigiY2FwdHVyZVBob3RvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLApKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1BIT1RPKSwKSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdGFydFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUQVJUX1ZJREVPKSwKSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRWaWRlb0ZyYW1lIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRSksCkpTX0NGVU5DX01BR0lDX0RFRigic3RvcFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUT1BfVklERU8pLAogIEpTX0NHRVRTRVRfREVGKCJvcHRpb25zIiwganNfcmFzcGlfY2FtX29wdGlvbnMsIDApLCAKCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIlJhc3BpQ2FtIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAoKfTsKCmludApqc19yYXNwaV9jYW1faW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfcmFzcGlfY2FtX2NsYXNzX2lkID09IDApIHsKICAgIC8qIGNyZWF0ZSB0aGUgUmFzcGlDYW0gY2xhc3MgKi8KICAgIEpTX05ld0NsYXNzSUQoJmpzX3Jhc3BpX2NhbV9jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCwgJmpzX3Jhc3BpX2NhbV9jbGFzcyk7CgogICAgcmFzcGlfY2FtX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHJhc3BpX2NhbV9wcm90bywganNfcmFzcGlfY2FtX3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCwgcmFzcGlfY2FtX3Byb3RvKTsKCiAgICByYXNwaV9jYW1fY2xhc3MgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfcmFzcGlfY2FtX2N0b3IsICJSYXNwaUNhbSIsIDIsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIC8qIHNldCBwcm90by5jICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgcmFzcGlfY2FtX2NsYXNzLCByYXNwaV9jYW1fcHJvdG8pOwpvbnN0cnVjdG9yIGFuZCBjdG9yLnByb3RvdHlwZSAqLwoKICAgIEpTX05ld0NsYXNzSUQoJmpzX3Jhc3BpX2NhbV9vcHRpb25zX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfcmFzcGlfY2FtX29wdGlvbnNfY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fb3B0aW9uc19jbGFzcyk7CgogICAgcmFzcGlfY2FtX29wdGlvbnNfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmFzcGlfY2FtX29wdGlvbnNfcHJvdG8sIGpzX3Jhc3BpX2NhbV9vcHRpb25zX3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3Jhc3BpX2NhbV9vcHRpb25zX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfcmFzcGlfY2FtX29wdGlvbnNfY2xhc3NfaWQsIHJhc3BpX2NhbV9vcHRpb25zX3Byb3RvKTsKCiAgICByYXNwaV9jYW1fb3B0aW9uc19jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19yYXNwaV9jYW1fb3B0aW9uc19jdG9yLCAiUmFzcGlDYW1PcHRpb25zIiwgMiwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogIH0KCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIiwgcmFzcGlfY2FtX2NsYXNzKTsKICB9CgogIHJldHVybiAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgdm9pZApqc19yYXNwaV9jYW1fZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJSYXNwaUNhbSIpOwp9Cgp2b2lkCmpzX3Jhc3BpX2NhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChyYXNwaV9jYW1fY2xhc3MpKQogICAganNfcmFzcGlfY2FtX2luaXQoY3R4LCAwKTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBwYXJlbnQsIG5hbWUgPyBuYW1lIDogIlJhc3BpQ2FtIiwgcmFzcGlfY2FtX2NsYXNzKTsKfQoKI2lmZGVmIEpTX01FVEhPRF9NT0RVTEUKI2RlZmluZSBKU19JTklUX01PRFVMRSBWSVNJQkxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfcmFzcGlfY2FtCiNlbmRpZgoKZXh0ZXJuICJDIiBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX3Jhc3BpX2NhbV9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIGpzX3Jhc3BpX2NhbV9leHBvcnQoY3R4LCBtKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAKMWAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgIAAAAAAAAWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1183,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFERAAAAAAAAUhEAAAAAAAAAAAAAUhEAAAAAAABSEQAAAAAAAKYBAAAKICAgIEpTX05ld0NsYXNzSUQoJmpzX3Jhc3BpX2NhbV9vcHRpb25zX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfcmFzcGlfY2FtX29wdGlvbnNfY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fb3B0aW9uc19jbGFzcyk7CgogICAgcmFzcGlfY2FtX29wdGlvbnNfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmFzcGlfY2FtX29wdGlvbnNfcHJvdG8sIGpzX3Jhc3BpX2NhbV9vcHRpb25zX3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3Jhc3BpX2NhbV9vcHRpb25zX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfcmFzcGlfY2FtX29wdGlvbnNfY2xhc3NfaWQsIHJhc3BpX2NhbV9vcHRpb25zX3Byb3RvKTsKCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUREAAAAAAAD3EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFIRAAAAAAAAUxEAAAAAAAAAAAAAUxEAAAAAAABUEQAAAAAAAAAAAABUEQAAAAAAAFQRAAAAAAAAgAAAACAgICByYXNwaV9jYW1fb3B0aW9uc19jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19yYXNwaV9jYW1fb3B0aW9uc19jdG9yLCAiUmFzcGlDYW1PcHRpb25zIiwgMiwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwog",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUhEAAAAAAADSEQAAAAAAAAAAAAAAACRA"
				],
				[
					1194,
					1,
					"insert",
					{
						"characters": "options"
					},
					"CAAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABiCAAAAAAAAAwAAABHZXRPcHRpb25zKCliCAAAAAAAAGMIAAAAAAAAAAAAAGMIAAAAAAAAZAgAAAAAAAAAAAAAZAgAAAAAAABlCAAAAAAAAAAAAABlCAAAAAAAAGYIAAAAAAAAAAAAAGYIAAAAAAAAZwgAAAAAAAAAAAAAZwgAAAAAAABoCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"paste",
					null,
					"AgAAAD0IAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABaCAAAAAAAABkAAABqc19yYXNwaV9jYW1fb3B0aW9uc193cmFw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQgAAAAAAABWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1243,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAIAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1275,
					1,
					"paste",
					null,
					"AgAAAB8LAAAAAAAALQsAAAAAAAAAAAAALQsAAAAAAAAtCwAAAAAAAAwAAABSYXNwaUNhbURhdGE",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwsAAAAAAAArCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					7,
					"left_delete",
					null,
					"BwAAAN8HAAAAAAAA3wcAAAAAAAAFAAAAbWFnaWPeBwAAAAAAAN4HAAAAAAAAAQAAACDdBwAAAAAAAN0HAAAAAAAAAQAAAHTcBwAAAAAAANwHAAAAAAAAAQAAAG7bBwAAAAAAANsHAAAAAAAAAQAAAGnaBwAAAAAAANoHAAAAAAAAAQAAACDZBwAAAAAAANkHAAAAAAAAAQAAACw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wcAAAAAAADkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1292,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWFAAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfbWF0LmhwcCIKI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSA8b3BlbmN2Mi9jb3JlLmhwcD4KI2luY2x1ZGUgPGxjY3YuaHBwPgojaW5jbHVkZSA8cXVpY2tqcy5oPgovKiNpbmNsdWRlIDxjY3R5cGU+CiNpbmNsdWRlIDxzdGRkZWYuaD4KI2luY2x1ZGUgPGNzdGRpbnQ+CiNpbmNsdWRlIDxhbGdvcml0aG0+CiNpbmNsdWRlIDxpb3N0cmVhbT4KI2luY2x1ZGUgPG5ldz4KI2luY2x1ZGUgPHN0cmluZz4qLwoKdHlwZWRlZiBsY2N2OjpQaUNhbWVyYSBKU1Jhc3BpQ2FtRGF0YTsKCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCmV4dGVybiAiQyIgewpKU1ZhbHVlIHJhc3BpX2NhbV9wcm90byA9IEpTX1VOREVGSU5FRCwgcmFzcGlfY2FtX2NsYXNzID0gSlNfVU5ERUZJTkVEOwp0aHJlYWRfbG9jYWwgVklTSUJMRSBKU0NsYXNzSUQganNfcmFzcGlfY2FtX2NsYXNzX2lkID0gMDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX2N0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTUmFzcGlDYW1EYXRhKiBzOwogIEpTVmFsdWUgb2JqID0gSlNfVU5ERUZJTkVEOwogIEpTVmFsdWUgcHJvdG8sIHJldDsKCiAgcyA9IGpzX2FsbG9jYXRlPEpTUmFzcGlDYW1EYXRhPihjdHgpOwogIGlmKCFzKQogICAgcmV0dXJuIEpTX1Rocm93T3V0T2ZNZW1vcnkoY3R4KTsKCiAgbmV3KHMpIEpTUmFzcGlDYW1EYXRhKCk7CgogIC8qIHVzaW5nIG5ld190YXJnZXQgdG8gZ2V0IHRoZSBwcm90b3R5cGUgaXMgbmVjZXNzYXJ5IHdoZW4gdGhlCiAgICAgY2xhc3MgaXMgZXh0ZW5kZWQuICovCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHByb3RvKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwogIEpTX1NldE9wYXF1ZShvYmosIHMpOwogIHJldHVybiBvYmo7CmZhaWw6CiAganNfZGVhbGxvY2F0ZShjdHgsIHMpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIG9iaik7CiAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKfQoKZXh0ZXJuICJDIiBWSVNJQkxFIEpTUmFzcGlDYW1EYXRhKgpqc19yYXNwaV9jYW1fZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKfQoKdm9pZApqc19yYXNwaV9jYW1fZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgSlNSYXNwaUNhbURhdGEqIHMgPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZSh2YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwogIC8qIE5vdGU6ICdzJyBjYW4gYmUgTlVMTCBpbiBjYXNlIEpTX1NldE9wYXF1ZSgpIHdhcyBub3QgY2FsbGVkICovCgogIHMtPn5KU1Jhc3BpQ2FtRGF0YSgpOwogIGpzX2RlYWxsb2NhdGUocnQsIHMpOwoKICBKU19GcmVlVmFsdWVSVChydCwgdmFsKTsKfQoKZW51bSB7CiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8gPSAwLAogIFJBU1BJX0NBTV9TVE9QX1BIT1RPLAogIFJBU1BJX0NBTV9TVEFSVF9WSURFTywKICBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FLAogIFJBU1BJX0NBTV9TVE9QX1ZJREVPLAoKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9vcHRpb25zKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwpIHsKICBKU1Jhc3BpQ2FtRGF0YSogY2FtID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwoKICByZXR1cm4ganNfbGliY2FtZXJhX2FwcF9vcHRpb25zX3dyYXAoY3R4LCBjYW0tPm9wdGlvbnMpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19yYXNwaV9jYW1fbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1Jhc3BpQ2FtRGF0YSogY2FtID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludDMyX3QgcHJvcElEOwogIGRvdWJsZSB2YWx1ZSA9IDA7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfUEhPVE86IHsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9WSURFTzogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRTogewogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfVklERU86IHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpWSVNJQkxFIEpTVmFsdWUKanNfcmFzcGlfY2FtX3dyYXAoSlNDb250ZXh0KiBjdHgsIEpTUmFzcGlDYW1EYXRhKiBjYW0pIHsKICBKU1ZhbHVlIHJldDsKCiAgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHJhc3BpX2NhbV9wcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKCiAgLy8gY2FwLT5hZGRyZWYoKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgY2FtKTsKCiAgcmV0dXJuIHJldDsKfQoKSlNDbGFzc0RlZiBqc19yYXNwaV9jYW1fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSYXNwaUNhbSIsCiAgICAuZmluYWxpemVyID0ganNfcmFzcGlfY2FtX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjYXB0dXJlUGhvdG8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVEFSVF9WSURFTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFZpZGVvRnJhbWUiLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RvcFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUT1BfVklERU8pLAogICAgSlNfQ0dFVFNFVF9ERUYoIm9wdGlvbnMiLCBqc19yYXNwaV9jYW1fb3B0aW9ucywgMCksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSYXNwaUNhbSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCn07CgppbnQKanNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJhc3BpQ2FtIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fY2xhc3MpOwoKICAgIHJhc3BpX2NhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcywgY291bnRvZihqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsIHJhc3BpX2NhbV9wcm90byk7CgogICAgcmFzcGlfY2FtX2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3Jhc3BpX2NhbV9jdG9yLCAiUmFzcGlDYW0iLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uYyAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIHJhc3BpX2NhbV9jbGFzcywgcmFzcGlfY2FtX3Byb3RvKTsKb25zdHJ1Y3RvciBhbmQgY3Rvci5wcm90b3R5cGUgKi8KIAogIH0KCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIiwgcmFzcGlfY2FtX2NsYXNzKTsKICB9CgogIHJldHVybiAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgdm9pZApqc19yYXNwaV9jYW1fZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJSYXNwaUNhbSIpOwp9Cgp2b2lkCmpzX3Jhc3BpX2NhbV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChyYXNwaV9jYW1fY2xhc3MpKQogICAganNfcmFzcGlfY2FtX2luaXQoY3R4LCAwKTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBwYXJlbnQsIG5hbWUgPyBuYW1lIDogIlJhc3BpQ2FtIiwgcmFzcGlfY2FtX2NsYXNzKTsKfQoKI2lmZGVmIEpTX01FVEhPRF9NT0RVTEUKI2RlZmluZSBKU19JTklUX01PRFVMRSBWSVNJQkxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfcmFzcGlfY2FtCiNlbmRpZgoKZXh0ZXJuICJDIiBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX3Jhc3BpX2NhbV9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIGpzX3Jhc3BpX2NhbV9leHBvcnQoY3R4LCBtKTsKICByZXR1cm4gbTsKfQoAAAAAAAAAAJQUAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QcAAAAAAADZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1295,
					1,
					"insert",
					{
						"characters": "\ncam->capture"
					},
					"DwAAAOIJAAAAAAAA4wkAAAAAAAAAAAAA4wkAAAAAAADnCQAAAAAAAAAAAADnCQAAAAAAAOkJAAAAAAAAAAAAAOkJAAAAAAAA6gkAAAAAAAAAAAAA6gkAAAAAAADrCQAAAAAAAAAAAADrCQAAAAAAAOwJAAAAAAAAAAAAAOwJAAAAAAAA7QkAAAAAAAAAAAAA7QkAAAAAAADuCQAAAAAAAAAAAADuCQAAAAAAAO8JAAAAAAAAAAAAAO8JAAAAAAAA8AkAAAAAAAAAAAAA8AkAAAAAAADxCQAAAAAAAAAAAADxCQAAAAAAAPIJAAAAAAAAAAAAAPIJAAAAAAAA8wkAAAAAAAAAAAAA8wkAAAAAAAD0CQAAAAAAAAAAAAD0CQAAAAAAAPUJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gkAAAAAAADiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1296,
					1,
					"insert",
					{
						"characters": "Photo"
					},
					"BQAAAPUJAAAAAAAA9gkAAAAAAAAAAAAA9gkAAAAAAAD3CQAAAAAAAAAAAAD3CQAAAAAAAPgJAAAAAAAAAAAAAPgJAAAAAAAA+QkAAAAAAAAAAAAA+QkAAAAAAAD6CQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9QkAAAAAAAD1CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPoJAAAAAAAA/AkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1299,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPwJAAAAAAAA/QkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AkAAAAAAAD8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					1301,
					1,
					"cut",
					null,
					"AQAAAOkJAAAAAAAA6QkAAAAAAAAUAAAAY2FtLT5jYXB0dXJlUGhvdG8oKTs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QkAAAAAAADpCQAAAAAAAAAAAAAAAE5A"
				],
				[
					1302,
					1,
					"paste",
					null,
					"AQAAAOkJAAAAAAAA/QkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QkAAAAAAADpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1305,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADEKAAAAAAAAMgoAAAAAAAAAAAAAMgoAAAAAAAA2CgAAAAAAAAAAAAA2CgAAAAAAADgKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQoAAAAAAAAxCgAAAAAAAP///////+9/"
				],
				[
					1306,
					1,
					"paste",
					null,
					"AQAAADgKAAAAAAAATAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1311,
					1,
					"insert",
					{
						"characters": "stopPhoto"
					},
					"CgAAAD0KAAAAAAAAPgoAAAAAAAAAAAAAPgoAAAAAAAA+CgAAAAAAAAwAAABjYXB0dXJlUGhvdG8+CgAAAAAAAD8KAAAAAAAAAAAAAD8KAAAAAAAAQAoAAAAAAAAAAAAAQAoAAAAAAABBCgAAAAAAAAAAAABBCgAAAAAAAEIKAAAAAAAAAAAAAEIKAAAAAAAAQwoAAAAAAAAAAAAAQwoAAAAAAABECgAAAAAAAAAAAABECgAAAAAAAEUKAAAAAAAAAAAAAEUKAAAAAAAARgoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQoAAAAAAABJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1314,
					1,
					"cut",
					null,
					"AQAAADgKAAAAAAAAOAoAAAAAAAARAAAAY2FtLT5zdG9wUGhvdG8oKTs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAoAAAAAAABJCgAAAAAAAP///////+9/"
				],
				[
					1315,
					1,
					"paste",
					null,
					"AQAAADgKAAAAAAAASQoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1318,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAH4KAAAAAAAAfwoAAAAAAAAAAAAAfwoAAAAAAACDCgAAAAAAAAAAAACDCgAAAAAAAIUKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfgoAAAAAAAB+CgAAAAAAAP///////+9/"
				],
				[
					1319,
					1,
					"paste",
					null,
					"AQAAAIUKAAAAAAAAlgoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQoAAAAAAACFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1326,
					1,
					"cut",
					null,
					"AQAAAMEJAAAAAAAAwQkAAAAAAABPAAAAICBjYXNlIFJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPOiB7CiAgICAgIGNhbS0+Y2FwdHVyZVBob3RvKCk7CiAgICAgIGJyZWFrOwogICAgfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQkAAAAAAAAQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1327,
					2,
					"paste",
					null,
					"AgAAAMEJAAAAAAAAEAoAAAAAAAAAAAAAEAoAAAAAAABfCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQkAAAAAAADBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1330,
					1,
					"insert",
					{
						"characters": "START"
					},
					"BgAAANIJAAAAAAAA0wkAAAAAAAAAAAAA0wkAAAAAAADTCQAAAAAAAAYAAABDQVBUVVLTCQAAAAAAANQJAAAAAAAAAAAAANQJAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADWCQAAAAAAAAAAAADWCQAAAAAAANcJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0gkAAAAAAADYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1331,
					1,
					"right_delete",
					null,
					"AQAAANcJAAAAAAAA1wkAAAAAAAABAAAARQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wkAAAAAAADXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1334,
					7,
					"left_delete",
					null,
					"BwAAAPIJAAAAAAAA8gkAAAAAAAABAAAAZfEJAAAAAAAA8QkAAAAAAAABAAAAcvAJAAAAAAAA8AkAAAAAAAABAAAAde8JAAAAAAAA7wkAAAAAAAABAAAAdO4JAAAAAAAA7gkAAAAAAAABAAAAcO0JAAAAAAAA7QkAAAAAAAABAAAAYewJAAAAAAAA7AkAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wkAAAAAAADzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1335,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAAOwJAAAAAAAA7QkAAAAAAAAAAAAA7QkAAAAAAADuCQAAAAAAAAAAAADuCQAAAAAAAO8JAAAAAAAAAAAAAO8JAAAAAAAA8AkAAAAAAAAAAAAA8AkAAAAAAADxCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AkAAAAAAADsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": "startVideo"
					},
					"CwAAANUKAAAAAAAA1goAAAAAAAAAAAAA1goAAAAAAADWCgAAAAAAAAkAAABzdG9wUGhvdG/WCgAAAAAAANcKAAAAAAAAAAAAANcKAAAAAAAA2AoAAAAAAAAAAAAA2AoAAAAAAADZCgAAAAAAAAAAAADZCgAAAAAAANoKAAAAAAAAAAAAANoKAAAAAAAA2woAAAAAAAAAAAAA2woAAAAAAADcCgAAAAAAAAAAAADcCgAAAAAAAN0KAAAAAAAAAAAAAN0KAAAAAAAA3goAAAAAAAAAAAAA3goAAAAAAADfCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QoAAAAAAADeCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1363,
					1,
					"paste",
					null,
					"AQAAAB8LAAAAAAAAOAsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwsAAAAAAAAfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": "getVid"
					},
					"BwAAACoLAAAAAAAAKwsAAAAAAAAAAAAAKwsAAAAAAAArCwAAAAAAAAoAAABzdGFydFZpZGVvKwsAAAAAAAAsCwAAAAAAAAAAAAAsCwAAAAAAAC0LAAAAAAAAAAAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKgsAAAAAAAA0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					1,
					"insert",
					{
						"characters": "eoFrame"
					},
					"BwAAADALAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAyCwAAAAAAAAAAAAAyCwAAAAAAADMLAAAAAAAAAAAAADMLAAAAAAAANAsAAAAAAAAAAAAANAsAAAAAAAA1CwAAAAAAAAAAAAA1CwAAAAAAADYLAAAAAAAAAAAAADYLAAAAAAAANwsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAsAAAAAAAAwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1387,
					1,
					"paste",
					null,
					"AQAAAG4LAAAAAAAAjQsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgsAAAAAAABuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1392,
					1,
					"insert",
					{
						"characters": "stopVideo"
					},
					"CgAAAHwLAAAAAAAAfQsAAAAAAAAAAAAAfQsAAAAAAAB9CwAAAAAAAA0AAABnZXRWaWRlb0ZyYW1lfQsAAAAAAAB+CwAAAAAAAAAAAAB+CwAAAAAAAH8LAAAAAAAAAAAAAH8LAAAAAAAAgAsAAAAAAAAAAAAAgAsAAAAAAACBCwAAAAAAAAAAAACBCwAAAAAAAIILAAAAAAAAAAAAAIILAAAAAAAAgwsAAAAAAAAAAAAAgwsAAAAAAACECwAAAAAAAAAAAACECwAAAAAAAIULAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQsAAAAAAAB8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					1,
					"cut",
					null,
					"AQAAAAYHAAAAAAAABgcAAAAAAAAfAAAAICBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTyA9IDAsCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgcAAAAAAAAlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					2,
					"paste",
					null,
					"AgAAAAYHAAAAAAAAJQcAAAAAAAAAAAAAJQcAAAAAAABEBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgcAAAAAAAAGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": "START"
					},
					"BgAAABIHAAAAAAAAEwcAAAAAAAAAAAAAEwcAAAAAAAATBwAAAAAAAAcAAABDQVBUVVJFEwcAAAAAAAAUBwAAAAAAAAAAAAAUBwAAAAAAABUHAAAAAAAAAAAAABUHAAAAAAAAFgcAAAAAAAAAAAAAFgcAAAAAAAAXBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgcAAAAAAAAZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					3,
					"left_delete",
					null,
					"AwAAAD8HAAAAAAAAPwcAAAAAAAABAAAAMD4HAAAAAAAAPgcAAAAAAAABAAAAID0HAAAAAAAAPQcAAAAAAAABAAAAPQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwcAAAAAAABABwAAAAAAAAAAAAAAAPC/"
				],
				[
					1421,
					1,
					"cut",
					null,
					"AQAAAFkNAAAAAAAAWQ0AAAAAAABZAAAAICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2FwdHVyZVBob3RvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQ0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1422,
					2,
					"paste",
					null,
					"AgAAAFkNAAAAAAAAsg0AAAAAAAAAAAAAsg0AAAAAAAALDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQ0AAAAAAABZDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1425,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BgAAAHENAAAAAAAAcg0AAAAAAAAAAAAAcg0AAAAAAAByDQAAAAAAAAcAAABjYXB0dXJlcg0AAAAAAABzDQAAAAAAAAAAAABzDQAAAAAAAHQNAAAAAAAAAAAAAHQNAAAAAAAAdQ0AAAAAAAAAAAAAdQ0AAAAAAAB2DQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQ0AAAAAAAB4DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1434,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANcNAAAAAAAA2A0AAAAAAAAAAAAA2A0AAAAAAADYDQAAAAAAAAEAAAAw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1w0AAAAAAADYDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1443,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANkOAAAAAAAA2g4AAAAAAAAAAAAA2g4AAAAAAADaDgAAAAAAAAEAAAAw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2Q4AAAAAAADaDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEcKAAAAAAAASAoAAAAAAAAAAAAASAoAAAAAAABMCgAAAAAAAAAAAABMCgAAAAAAAE4KAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwoAAAAAAABHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					1,
					"paste",
					null,
					"AQAAAE4KAAAAAAAAXAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgoAAAAAAABOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4KAAAAAAAATwoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgoAAAAAAABOCgAAAAAAAAAAAAAAAE5A"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": "JSInpu"
					},
					"BgAAAE4KAAAAAAAATwoAAAAAAAAAAAAATwoAAAAAAABQCgAAAAAAAAAAAABQCgAAAAAAAFEKAAAAAAAAAAAAAFEKAAAAAAAAUgoAAAAAAAAAAAAAUgoAAAAAAABTCgAAAAAAAAAAAABTCgAAAAAAAFQKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgoAAAAAAABOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1466,
					1,
					"insert_completion",
					{
						"completion": "JSInputOutputArray",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JSInputOutputArray"
					},
					"AgAAAE4KAAAAAAAATgoAAAAAAAAGAAAASlNJbnB1TgoAAAAAAABgCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAoAAAAAAABUCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					1,
					"insert",
					{
						"characters": " mat"
					},
					"BAAAAGAKAAAAAAAAYQoAAAAAAAAAAAAAYQoAAAAAAABiCgAAAAAAAAAAAABiCgAAAAAAAGMKAAAAAAAAAAAAAGMKAAAAAAAAZAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAoAAAAAAABgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGQKAAAAAAAAZQoAAAAAAAAAAAAAZQoAAAAAAABmCgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAoAAAAAAABkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1470,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUKAAAAAAAAdwoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQoAAAAAAAB1CgAAAAAAAP///////+9/"
				],
				[
					1471,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAHYKAAAAAAAAdwoAAAAAAAAAAAAAdwoAAAAAAAB4CgAAAAAAAAAAAAB4CgAAAAAAAHkKAAAAAAAAAAAAAHkKAAAAAAAAegoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgoAAAAAAAB2CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1472,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAAHoKAAAAAAAAewoAAAAAAAAAAAAAewoAAAAAAAB8CgAAAAAAAAAAAAB8CgAAAAAAAH0KAAAAAAAAAAAAAH0KAAAAAAAAfgoAAAAAAAAAAAAAfgoAAAAAAAB/CgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegoAAAAAAAB6CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1473,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAH8KAAAAAAAAgQoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwoAAAAAAAB/CgAAAAAAAAAAAAAAAPC/"
				],
				[
					1474,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIAKAAAAAAAAgQoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAoAAAAAAACACgAAAAAAAAAAAAAAAPC/"
				],
				[
					1476,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIMKAAAAAAAAhAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwoAAAAAAACDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": "mat.getMat"
					},
					"CgAAAJ0KAAAAAAAAngoAAAAAAAAAAAAAngoAAAAAAACfCgAAAAAAAAAAAACfCgAAAAAAAKAKAAAAAAAAAAAAAKAKAAAAAAAAoQoAAAAAAAAAAAAAoQoAAAAAAACiCgAAAAAAAAAAAACiCgAAAAAAAKMKAAAAAAAAAAAAAKMKAAAAAAAApAoAAAAAAAAAAAAApAoAAAAAAAClCgAAAAAAAAAAAAClCgAAAAAAAKYKAAAAAAAAAAAAAKYKAAAAAAAApwoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQoAAAAAAACdCgAAAAAAAAAAAAAAAG5A"
				],
				[
					1482,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKcKAAAAAAAAqQoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwoAAAAAAACnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1502,
					1,
					"insert",
					{
						"characters": "Ref"
					},
					"AwAAAKgKAAAAAAAAqQoAAAAAAAAAAAAAqQoAAAAAAACqCgAAAAAAAAAAAACqCgAAAAAAAKsKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAoAAAAAAACoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					1,
					"paste",
					null,
					"AgAAAIMLAAAAAAAA6QsAAAAAAAAAAAAA6QsAAAAAAADpCwAAAAAAAB8AAAAgICAgICAgICBjYW0tPmdldFZpZGVvRnJhbWUoKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwsAAAAAAACiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOALAAAAAAAA4QsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1541,
					1,
					"left_delete",
					null,
					"AQAAAOALAAAAAAAA4AsAAAAAAAABAAAAZw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QsAAAAAAADhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1548,
					1,
					"insert",
					{
						"characters": "getVideoF"
					},
					"CgAAAMsLAAAAAAAAzAsAAAAAAAAAAAAAzAsAAAAAAADMCwAAAAAAAAwAAABjYXB0dXJlUGhvdG/MCwAAAAAAAM0LAAAAAAAAAAAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADPCwAAAAAAAAAAAADPCwAAAAAAANALAAAAAAAAAAAAANALAAAAAAAA0QsAAAAAAAAAAAAA0QsAAAAAAADSCwAAAAAAAAAAAADSCwAAAAAAANMLAAAAAAAAAAAAANMLAAAAAAAA1AsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1549,
					1,
					"left_delete",
					null,
					"AQAAANMLAAAAAAAA0wsAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AsAAAAAAADUCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1550,
					1,
					"insert",
					{
						"characters": "Frame"
					},
					"BQAAANMLAAAAAAAA1AsAAAAAAAAAAAAA1AsAAAAAAADVCwAAAAAAAAAAAADVCwAAAAAAANYLAAAAAAAAAAAAANYLAAAAAAAA1wsAAAAAAAAAAAAA1wsAAAAAAADYCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wsAAAAAAADTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1558,
					1,
					"insert",
					{
						"characters": "\nuint32_t"
					},
					"CgAAAL8LAAAAAAAAwAsAAAAAAAAAAAAAwAsAAAAAAADGCwAAAAAAAAAAAADGCwAAAAAAAMcLAAAAAAAAAAAAAMcLAAAAAAAAyAsAAAAAAAAAAAAAyAsAAAAAAADJCwAAAAAAAAAAAADJCwAAAAAAAMoLAAAAAAAAAAAAAMoLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADMCwAAAAAAAAAAAADMCwAAAAAAAM0LAAAAAAAAAAAAAM0LAAAAAAAAzgsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwsAAAAAAAC/CwAAAAAAAP///////+9/"
				],
				[
					1559,
					1,
					"insert",
					{
						"characters": " timeout;"
					},
					"CQAAAM4LAAAAAAAAzwsAAAAAAAAAAAAAzwsAAAAAAADQCwAAAAAAAAAAAADQCwAAAAAAANELAAAAAAAAAAAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAADTCwAAAAAAANQLAAAAAAAAAAAAANQLAAAAAAAA1QsAAAAAAAAAAAAA1QsAAAAAAADWCwAAAAAAAAAAAADWCwAAAAAAANcLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgsAAAAAAADOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1563,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADeCwAAAAAAAAAAAADeCwAAAAAAAN8LAAAAAAAAAAAAAN8LAAAAAAAA4AsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1564,
					2,
					"left_delete",
					null,
					"AgAAAN8LAAAAAAAA3wsAAAAAAAABAAAAZt4LAAAAAAAA3gsAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1568,
					1,
					"insert",
					{
						"characters": "=1000"
					},
					"BgAAANYLAAAAAAAA1wsAAAAAAAAAAAAA2QsAAAAAAADZCwAAAAAAAAYAAAAgICAgICDXCwAAAAAAANgLAAAAAAAAAAAAANgLAAAAAAAA2QsAAAAAAAAAAAAA2QsAAAAAAADaCwAAAAAAAAAAAADaCwAAAAAAANsLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1gsAAAAAAADWCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAANwLAAAAAAAA3QsAAAAAAAAAAAAA3QsAAAAAAADjCwAAAAAAAAAAAADjCwAAAAAAAOQLAAAAAAAAAAAAAOQLAAAAAAAA5QsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AsAAAAAAADcCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOULAAAAAAAA5wsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QsAAAAAAADlCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1572,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gsAAAAAAADmCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"left_delete",
					null,
					"AQAAAOcLAAAAAAAA5wsAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AsAAAAAAADoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1574,
					1,
					"insert",
					{
						"characters": "rgc"
					},
					"AwAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA6AsAAAAAAADpCwAAAAAAAAAAAADpCwAAAAAAAOoLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1575,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADsCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gsAAAAAAADqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1576,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA7QsAAAAAAADuCwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AsAAAAAAADsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1578,
					1,
					"insert",
					{
						"characters": "\nJS_ToInt32"
					},
					"DgAAAO8LAAAAAAAA8AsAAAAAAAAAAAAA8AsAAAAAAAD2CwAAAAAAAAAAAADwCwAAAAAAAPALAAAAAAAABgAAACAgICAgIPALAAAAAAAA+AsAAAAAAAAAAAAA+AsAAAAAAAD5CwAAAAAAAAAAAAD5CwAAAAAAAPoLAAAAAAAAAAAAAPoLAAAAAAAA+wsAAAAAAAAAAAAA+wsAAAAAAAD8CwAAAAAAAAAAAAD8CwAAAAAAAP0LAAAAAAAAAAAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA/gsAAAAAAAD/CwAAAAAAAAAAAAD/CwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAACDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wsAAAAAAADvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAIMAAAAAAAABAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAAMMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAFDAAAAAAAAAAAAAAFDAAAAAAAAAYMAAAAAAAAAAAAAAYMAAAAAAAABwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"insert",
					{
						"characters": " &timeout,"
					},
					"CgAAAAcMAAAAAAAACAwAAAAAAAAAAAAACAwAAAAAAAAJDAAAAAAAAAAAAAAJDAAAAAAAAAoMAAAAAAAAAAAAAAoMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAAA0MAAAAAAAAAAAAAA0MAAAAAAAADgwAAAAAAAAAAAAADgwAAAAAAAAPDAAAAAAAAAAAAAAPDAAAAAAAABAMAAAAAAAAAAAAABAMAAAAAAAAEQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwwAAAAAAAAHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1582,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEMAAAAAAAAEgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQwAAAAAAAARDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1587,
					1,
					"left_delete",
					null,
					"AQAAAP0LAAAAAAAA/QsAAAAAAAABAAAASQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/gsAAAAAAAD+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1588,
					1,
					"insert",
					{
						"characters": "Ui"
					},
					"AgAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA/gsAAAAAAAD/CwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QsAAAAAAAD9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					1,
					"insert",
					{
						"characters": "argv"
					},
					"BAAAABMMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAVDAAAAAAAAAAAAAAVDAAAAAAAABYMAAAAAAAAAAAAABYMAAAAAAAAFwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwwAAAAAAAATDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1592,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABcMAAAAAAAAGQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwwAAAAAAAAXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1593,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAABgMAAAAAAAAGQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAwAAAAAAAAYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1595,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABsMAAAAAAAAHAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwwAAAAAAAAbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1598,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEYMAAAAAAAARwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgwAAAAAAABGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1599,
					1,
					"insert",
					{
						"characters": " timeout"
					},
					"CAAAAEcMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABJDAAAAAAAAAAAAABJDAAAAAAAAEoMAAAAAAAAAAAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAE0MAAAAAAAAAAAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABPDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwwAAAAAAABHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1604,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPFgAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdW1hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRDsKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9IDA7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBKU19TZXRPcGFxdWUob2JqLCBzKTsKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2RlYWxsb2NhdGUoY3R4LCBzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmV4dGVybiAiQyIgVklTSUJMRSBKU1Jhc3BpQ2FtRGF0YSoKanNfcmFzcGlfY2FtX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBzID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUodmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICAvKiBOb3RlOiAncycgY2FuIGJlIE5VTEwgaW4gY2FzZSBKU19TZXRPcGFxdWUoKSB3YXMgbm90IGNhbGxlZCAqLwoKICBzLT5+SlNSYXNwaUNhbURhdGEoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCmVudW0gewogIFJBU1BJX0NBTV9TVEFSVF9QSE9UTyA9IDAsCiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8gLAogIFJBU1BJX0NBTV9TVE9QX1BIT1RPLAogIFJBU1BJX0NBTV9TVEFSVF9WSURFTywKICBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FLAogIFJBU1BJX0NBTV9TVE9QX1ZJREVPLAoKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9vcHRpb25zKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwpIHsKICBKU1Jhc3BpQ2FtRGF0YSogY2FtID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwoKICByZXR1cm4ganNfbGliY2FtZXJhX2FwcF9vcHRpb25zX3dyYXAoY3R4LCBjYW0tPm9wdGlvbnMpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19yYXNwaV9jYW1fbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBKU1Jhc3BpQ2FtRGF0YSogY2FtID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCkpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludDMyX3QgcHJvcElEOwogIGRvdWJsZSB2YWx1ZSA9IDA7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBSQVNQSV9DQU1fU1RBUlRfUEhPVE86IHsKICAgICAgY2FtLT5zdGFydFBob3RvKCk7CiAgICAgIGJyZWFrOwogICAgfSAgY2FzZSBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTzogewogICAgICBKU0lucHV0T3V0cHV0QXJyYXkgbWF0ID0ganNfdW1hdF9vcl9tYXQoY3R4LCBhcmd2WzBdKTsKICAgICAgY2FtLT5jYXB0dXJlUGhvdG8obWF0LmdldE1hdFJlZigpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVE9QX1BIT1RPOiB7CiAgICAgIGNhbS0+c3RvcFBob3RvKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSQVNQSV9DQU1fU1RBUlRfVklERU86IHsKICAgICAgY2FtLT5zdGFydFZpZGVvKCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FOiB7CiAgICAgIEpTSW5wdXRPdXRwdXRBcnJheSBtYXQgPSBqc191bWF0X29yX21hdChjdHgsIGFyZ3ZbMF0pOwogICAgICB1aW50MzJfdCB0aW1lb3V0PTEwMDA7CiAgICAgIGlmKGFyZ2MgPiAxKQogICAgICAgIEpTX1RvVWludDMyKGN0eCwgJnRpbWVvdXQsIGFyZ3ZbMV0pOwoKICAgICAgY2FtLT5nZXRWaWRlb0ZyYW1lKG1hdC5nZXRNYXRSZWYoKSwgdGltZW91dCk7ICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVE9QX1ZJREVPOiB7CiAgICAgICAgICAgY2FtLT5zdG9wVmlkZW8oKTsKICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKVklTSUJMRSBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV93cmFwKEpTQ29udGV4dCogY3R4LCBKU1Jhc3BpQ2FtRGF0YSogY2FtKSB7CiAgSlNWYWx1ZSByZXQ7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCk7CgogIC8vIGNhcC0+YWRkcmVmKCk7CgogIEpTX1NldE9wYXF1ZShyZXQsIGNhbSk7CgogIHJldHVybiByZXQ7Cn0KCkpTQ2xhc3NEZWYganNfcmFzcGlfY2FtX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiUmFzcGlDYW0iLAogICAgLmZpbmFsaXplciA9IGpzX3Jhc3BpX2NhbV9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2FwdHVyZVBob3RvIiwgMSwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdG9wUGhvdG8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fU1RPUF9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0YXJ0VmlkZW8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fU1RBUlRfVklERU8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRWaWRlb0ZyYW1lIiwgMSwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1ZJREVPKSwKICAgIEpTX0NHRVRTRVRfREVGKCJvcHRpb25zIiwganNfcmFzcGlfY2FtX29wdGlvbnMsIDApLAoKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiUmFzcGlDYW0iLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCgp9OwoKaW50CmpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19yYXNwaV9jYW1fY2xhc3NfaWQgPT0gMCkgewogICAgLyogY3JlYXRlIHRoZSBSYXNwaUNhbSBjbGFzcyAqLwogICAgSlNfTmV3Q2xhc3NJRCgmanNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfcmFzcGlfY2FtX2NsYXNzX2lkLCAmanNfcmFzcGlfY2FtX2NsYXNzKTsKCiAgICByYXNwaV9jYW1fcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcmFzcGlfY2FtX3Byb3RvLCBqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MsIGNvdW50b2YoanNfcmFzcGlfY2FtX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfcmFzcGlfY2FtX2NsYXNzX2lkLCByYXNwaV9jYW1fcHJvdG8pOwoKICAgIHJhc3BpX2NhbV9jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19yYXNwaV9jYW1fY3RvciwgIlJhc3BpQ2FtIiwgMiwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgLyogc2V0IHByb3RvLmMgICAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByYXNwaV9jYW1fY2xhc3MsIHJhc3BpX2NhbV9wcm90byk7Cm9uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX3Jhc3BpX2NhbV9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIik7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKHJhc3BpX2NhbV9jbGFzcykpCiAgICBqc19yYXNwaV9jYW1faW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwp9CgojaWZkZWYgSlNfTUVUSE9EX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIFZJU0lCTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9yYXNwaV9jYW0KI2VuZGlmCgpleHRlcm4gIkMiIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfcmFzcGlfY2FtX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfcmFzcGlfY2FtX2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9CgAAAAAAAAAA1BYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"cut",
					null,
					"AQAAAIYTAAAAAAAAhhMAAAAAAAAgAAAAb25zdHJ1Y3RvciBhbmQgY3Rvci5wcm90b3R5cGUgKi8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAphMAAAAAAACGEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1646,
					1,
					"paste",
					null,
					"AQAAAEgTAAAAAAAAaBMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASBMAAAAAAABIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADUFgAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdW1hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRDsKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9IDA7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBKU19TZXRPcGFxdWUob2JqLCBzKTsKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2RlYWxsb2NhdGUoY3R4LCBzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmV4dGVybiAiQyIgVklTSUJMRSBKU1Jhc3BpQ2FtRGF0YSoKanNfcmFzcGlfY2FtX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBzID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUodmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICAvKiBOb3RlOiAncycgY2FuIGJlIE5VTEwgaW4gY2FzZSBKU19TZXRPcGFxdWUoKSB3YXMgbm90IGNhbGxlZCAqLwoKICBzLT5+SlNSYXNwaUNhbURhdGEoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCmVudW0gewogIFJBU1BJX0NBTV9TVEFSVF9QSE9UTyA9IDAsCiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8sCiAgUkFTUElfQ0FNX1NUT1BfUEhPVE8sCiAgUkFTUElfQ0FNX1NUQVJUX1ZJREVPLAogIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUUsCiAgUkFTUElfQ0FNX1NUT1BfVklERU8sCgp9OwoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX29wdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CgogIHJldHVybiBqc19saWJjYW1lcmFfYXBwX29wdGlvbnNfd3JhcChjdHgsIGNhbS0+b3B0aW9ucyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50MzJfdCBwcm9wSUQ7CiAgZG91YmxlIHZhbHVlID0gMDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9QSE9UTzogewogICAgICBjYW0tPnN0YXJ0UGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPOiB7CiAgICAgIEpTSW5wdXRPdXRwdXRBcnJheSBtYXQgPSBqc191bWF0X29yX21hdChjdHgsIGFyZ3ZbMF0pOwogICAgICBjYW0tPmNhcHR1cmVQaG90byhtYXQuZ2V0TWF0UmVmKCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfUEhPVE86IHsKICAgICAgY2FtLT5zdG9wUGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9WSURFTzogewogICAgICBjYW0tPnN0YXJ0VmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUU6IHsKICAgICAgSlNJbnB1dE91dHB1dEFycmF5IG1hdCA9IGpzX3VtYXRfb3JfbWF0KGN0eCwgYXJndlswXSk7CiAgICAgIHVpbnQzMl90IHRpbWVvdXQgPSAxMDAwOwogICAgICBpZihhcmdjID4gMSkKICAgICAgICBKU19Ub1VpbnQzMihjdHgsICZ0aW1lb3V0LCBhcmd2WzFdKTsKCiAgICAgIGNhbS0+Z2V0VmlkZW9GcmFtZShtYXQuZ2V0TWF0UmVmKCksIHRpbWVvdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfVklERU86IHsKICAgICAgY2FtLT5zdG9wVmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpWSVNJQkxFIEpTVmFsdWUKanNfcmFzcGlfY2FtX3dyYXAoSlNDb250ZXh0KiBjdHgsIEpTUmFzcGlDYW1EYXRhKiBjYW0pIHsKICBKU1ZhbHVlIHJldDsKCiAgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHJhc3BpX2NhbV9wcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKCiAgLy8gY2FwLT5hZGRyZWYoKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgY2FtKTsKCiAgcmV0dXJuIHJldDsKfQoKSlNDbGFzc0RlZiBqc19yYXNwaV9jYW1fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSYXNwaUNhbSIsCiAgICAuZmluYWxpemVyID0ganNfcmFzcGlfY2FtX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdGFydFBob3RvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjYXB0dXJlUGhvdG8iLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVEFSVF9WSURFTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFZpZGVvRnJhbWUiLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RvcFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUT1BfVklERU8pLAogICAgSlNfQ0dFVFNFVF9ERUYoIm9wdGlvbnMiLCBqc19yYXNwaV9jYW1fb3B0aW9ucywgMCksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSYXNwaUNhbSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCn07CgppbnQKanNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJhc3BpQ2FtIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fY2xhc3MpOwoKICAgIHJhc3BpX2NhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcywgY291bnRvZihqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsIHJhc3BpX2NhbV9wcm90byk7CgogICAgcmFzcGlfY2FtX2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3Jhc3BpX2NhbV9jdG9yLCAiUmFzcGlDYW0iLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgcmFzcGlfY2FtX2NsYXNzLCByYXNwaV9jYW1fcHJvdG8pOwoKICB9CgogIGlmKG0pIHsKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJSYXNwaUNhbSIsIHJhc3BpX2NhbV9jbGFzcyk7CiAgfQoKICByZXR1cm4gMDsKfQoKZXh0ZXJuICJDIiBWSVNJQkxFIHZvaWQKanNfcmFzcGlfY2FtX2V4cG9ydChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmFzcGlDYW0iKTsKfQoKdm9pZApqc19yYXNwaV9jYW1fY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgcGFyZW50LCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgaWYoSlNfSXNVbmRlZmluZWQocmFzcGlfY2FtX2NsYXNzKSkKICAgIGpzX3Jhc3BpX2NhbV9pbml0KGN0eCwgMCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcGFyZW50LCBuYW1lID8gbmFtZSA6ICJSYXNwaUNhbSIsIHJhc3BpX2NhbV9jbGFzcyk7Cn0KCiNpZmRlZiBKU19NRVRIT0RfTU9EVUxFCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUgVklTSUJMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX3Jhc3BpX2NhbQojZW5kaWYKCmV4dGVybiAiQyIgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19yYXNwaV9jYW1faW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBqc19yYXNwaV9jYW1fZXhwb3J0KGN0eCwgbSk7CiAgcmV0dXJuIG07Cn0KAAAAAAAAAADQFgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaBMAAAAAAABoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1652,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGgTAAAAAAAAaRMAAAAAAAAAAAAAaRMAAAAAAABtEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaBMAAAAAAABoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1659,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVFgAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdW1hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRDsKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9IDA7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBKU19TZXRPcGFxdWUob2JqLCBzKTsKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2RlYWxsb2NhdGUoY3R4LCBzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmV4dGVybiAiQyIgVklTSUJMRSBKU1Jhc3BpQ2FtRGF0YSoKanNfcmFzcGlfY2FtX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBzID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUodmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICAvKiBOb3RlOiAncycgY2FuIGJlIE5VTEwgaW4gY2FzZSBKU19TZXRPcGFxdWUoKSB3YXMgbm90IGNhbGxlZCAqLwoKICBzLT5+SlNSYXNwaUNhbURhdGEoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCmVudW0gewogIFJBU1BJX0NBTV9TVEFSVF9QSE9UTyA9IDAsCiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8sCiAgUkFTUElfQ0FNX1NUT1BfUEhPVE8sCiAgUkFTUElfQ0FNX1NUQVJUX1ZJREVPLAogIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUUsCiAgUkFTUElfQ0FNX1NUT1BfVklERU8sCgp9OwoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX29wdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CgogIHJldHVybiBqc19saWJjYW1lcmFfYXBwX29wdGlvbnNfd3JhcChjdHgsIGNhbS0+b3B0aW9ucyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50MzJfdCBwcm9wSUQ7CiAgZG91YmxlIHZhbHVlID0gMDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9QSE9UTzogewogICAgICBjYW0tPnN0YXJ0UGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPOiB7CiAgICAgIEpTSW5wdXRPdXRwdXRBcnJheSBtYXQgPSBqc191bWF0X29yX21hdChjdHgsIGFyZ3ZbMF0pOwogICAgICBjYW0tPmNhcHR1cmVQaG90byhtYXQuZ2V0TWF0UmVmKCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfUEhPVE86IHsKICAgICAgY2FtLT5zdG9wUGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9WSURFTzogewogICAgICBjYW0tPnN0YXJ0VmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUU6IHsKICAgICAgSlNJbnB1dE91dHB1dEFycmF5IG1hdCA9IGpzX3VtYXRfb3JfbWF0KGN0eCwgYXJndlswXSk7CiAgICAgIHVpbnQzMl90IHRpbWVvdXQgPSAxMDAwOwogICAgICBpZihhcmdjID4gMSkKICAgICAgICBKU19Ub1VpbnQzMihjdHgsICZ0aW1lb3V0LCBhcmd2WzFdKTsKCiAgICAgIGNhbS0+Z2V0VmlkZW9GcmFtZShtYXQuZ2V0TWF0UmVmKCksIHRpbWVvdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfVklERU86IHsKICAgICAgY2FtLT5zdG9wVmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpWSVNJQkxFIEpTVmFsdWUKanNfcmFzcGlfY2FtX3dyYXAoSlNDb250ZXh0KiBjdHgsIEpTUmFzcGlDYW1EYXRhKiBjYW0pIHsKICBKU1ZhbHVlIHJldDsKCiAgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHJhc3BpX2NhbV9wcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKCiAgLy8gY2FwLT5hZGRyZWYoKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgY2FtKTsKCiAgcmV0dXJuIHJldDsKfQoKSlNDbGFzc0RlZiBqc19yYXNwaV9jYW1fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSYXNwaUNhbSIsCiAgICAuZmluYWxpemVyID0ganNfcmFzcGlfY2FtX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdGFydFBob3RvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjYXB0dXJlUGhvdG8iLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVEFSVF9WSURFTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFZpZGVvRnJhbWUiLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RvcFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUT1BfVklERU8pLAogICAgSlNfQ0dFVFNFVF9ERUYoIm9wdGlvbnMiLCBqc19yYXNwaV9jYW1fb3B0aW9ucywgMCksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSYXNwaUNhbSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCn07CgppbnQKanNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJhc3BpQ2FtIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fY2xhc3MpOwoKICAgIHJhc3BpX2NhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcywgY291bnRvZihqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsIHJhc3BpX2NhbV9wcm90byk7CgogICAgcmFzcGlfY2FtX2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3Jhc3BpX2NhbV9jdG9yLCAiUmFzcGlDYW0iLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByYXNwaV9jYW1fY2xhc3MsIHJhc3BpX2NhbV9wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX3Jhc3BpX2NhbV9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIik7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKHJhc3BpX2NhbV9jbGFzcykpCiAgICBqc19yYXNwaV9jYW1faW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwp9CgojaWZkZWYgSlNfTUVUSE9EX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIFZJU0lCTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9yYXNwaV9jYW0KI2VuZGlmCgpleHRlcm4gIkMiIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfcmFzcGlfY2FtX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfcmFzcGlfY2FtX2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9CgAAAAAAAAAA1BYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRMAAAAAAAA1EwAAAAAAAP///////+9/"
				],
				[
					1663,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADYTAAAAAAAANxMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANhMAAAAAAAA2EwAAAAAAAAAAAAAAAAAA"
				],
				[
					1683,
					2,
					"left_delete",
					null,
					"AgAAAKIOAAAAAAAAog4AAAAAAAAGAAAAQVBUVVJFoQ4AAAAAAAChDgAAAAAAAAEAAABD",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAog4AAAAAAACoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "START"
					},
					"BQAAAKEOAAAAAAAAog4AAAAAAAAAAAAAog4AAAAAAACjDgAAAAAAAAAAAACjDgAAAAAAAKQOAAAAAAAAAAAAAKQOAAAAAAAApQ4AAAAAAAAAAAAApQ4AAAAAAACmDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQ4AAAAAAAChDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1726,
					1,
					"indent",
					null,
					"AQAAAF8QAAAAAAAAYRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXxAAAAAAAACXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1736,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVFgAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdW1hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRDsKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9IDA7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBKU19TZXRPcGFxdWUob2JqLCBzKTsKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2RlYWxsb2NhdGUoY3R4LCBzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmV4dGVybiAiQyIgVklTSUJMRSBKU1Jhc3BpQ2FtRGF0YSoKanNfcmFzcGlfY2FtX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBzID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUodmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICAvKiBOb3RlOiAncycgY2FuIGJlIE5VTEwgaW4gY2FzZSBKU19TZXRPcGFxdWUoKSB3YXMgbm90IGNhbGxlZCAqLwoKICBzLT5+SlNSYXNwaUNhbURhdGEoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCmVudW0gewogIFJBU1BJX0NBTV9TVEFSVF9QSE9UTyA9IDAsCiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8sCiAgUkFTUElfQ0FNX1NUT1BfUEhPVE8sCiAgUkFTUElfQ0FNX1NUQVJUX1ZJREVPLAogIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUUsCiAgUkFTUElfQ0FNX1NUT1BfVklERU8sCgp9OwoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX29wdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CgogIHJldHVybiBqc19saWJjYW1lcmFfYXBwX29wdGlvbnNfd3JhcChjdHgsIGNhbS0+b3B0aW9ucyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50MzJfdCBwcm9wSUQ7CiAgZG91YmxlIHZhbHVlID0gMDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9QSE9UTzogewogICAgICBjYW0tPnN0YXJ0UGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9DQVBUVVJFX1BIT1RPOiB7CiAgICAgIEpTSW5wdXRPdXRwdXRBcnJheSBtYXQgPSBqc191bWF0X29yX21hdChjdHgsIGFyZ3ZbMF0pOwogICAgICBjYW0tPmNhcHR1cmVQaG90byhtYXQuZ2V0TWF0UmVmKCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfUEhPVE86IHsKICAgICAgY2FtLT5zdG9wUGhvdG8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9TVEFSVF9WSURFTzogewogICAgICBjYW0tPnN0YXJ0VmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUU6IHsKICAgICAgSlNJbnB1dE91dHB1dEFycmF5IG1hdCA9IGpzX3VtYXRfb3JfbWF0KGN0eCwgYXJndlswXSk7CiAgICAgIHVpbnQzMl90IHRpbWVvdXQgPSAxMDAwOwogICAgICBpZihhcmdjID4gMSkKICAgICAgICBKU19Ub1VpbnQzMihjdHgsICZ0aW1lb3V0LCBhcmd2WzFdKTsKCiAgICAgIGNhbS0+Z2V0VmlkZW9GcmFtZShtYXQuZ2V0TWF0UmVmKCksIHRpbWVvdXQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUT1BfVklERU86IHsKICAgICAgY2FtLT5zdG9wVmlkZW8oKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpWSVNJQkxFIEpTVmFsdWUKanNfcmFzcGlfY2FtX3dyYXAoSlNDb250ZXh0KiBjdHgsIEpTUmFzcGlDYW1EYXRhKiBjYW0pIHsKICBKU1ZhbHVlIHJldDsKCiAgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHJhc3BpX2NhbV9wcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKCiAgLy8gY2FwLT5hZGRyZWYoKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgY2FtKTsKCiAgcmV0dXJuIHJldDsKfQoKSlNDbGFzc0RlZiBqc19yYXNwaV9jYW1fY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJSYXNwaUNhbSIsCiAgICAuZmluYWxpemVyID0ganNfcmFzcGlfY2FtX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdGFydFBob3RvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUQVJUX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2FwdHVyZVBob3RvIiwgMSwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzdG9wUGhvdG8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fU1RPUF9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0YXJ0VmlkZW8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fU1RBUlRfVklERU8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRWaWRlb0ZyYW1lIiwgMSwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1ZJREVPKSwKICAgICAgSlNfQ0dFVFNFVF9ERUYoIm9wdGlvbnMiLCBqc19yYXNwaV9jYW1fb3B0aW9ucywgMCksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSYXNwaUNhbSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCn07CgppbnQKanNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJhc3BpQ2FtIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fY2xhc3MpOwoKICAgIHJhc3BpX2NhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcywgY291bnRvZihqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsIHJhc3BpX2NhbV9wcm90byk7CgogICAgcmFzcGlfY2FtX2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3Jhc3BpX2NhbV9jdG9yLCAiUmFzcGlDYW0iLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogICAgLyogc2V0IHByb3RvLmNvbnN0cnVjdG9yIGFuZCBjdG9yLnByb3RvdHlwZSAqLwogICAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByYXNwaV9jYW1fY2xhc3MsIHJhc3BpX2NhbV9wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX3Jhc3BpX2NhbV9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIik7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKHJhc3BpX2NhbV9jbGFzcykpCiAgICBqc19yYXNwaV9jYW1faW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwp9CgojaWZkZWYgSlNfTUVUSE9EX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIFZJU0lCTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9yYXNwaV9jYW0KI2VuZGlmCgpleHRlcm4gIkMiIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfcmFzcGlfY2FtX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfcmFzcGlfY2FtX2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9CgAAAAAAAAAA0xYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					1751,
					1,
					"paste",
					null,
					"AQAAAMgJAAAAAAAA0AkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAkAAAAAAADICQAAAAAAAAAAAAAAAPC/"
				],
				[
					1756,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADbFgAAI2luY2x1ZGUgImpzX2xpYmNhbWVyYV9hcHAuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdW1hdC5ocHAiCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPG9wZW5jdjIvY29yZS5ocHA+CiNpbmNsdWRlIDxsY2N2LmhwcD4KI2luY2x1ZGUgPHF1aWNranMuaD4KLyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8KCnR5cGVkZWYgbGNjdjo6UGlDYW1lcmEgSlNSYXNwaUNhbURhdGE7CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3Jhc3BpX2NhbV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSByYXNwaV9jYW1fcHJvdG8gPSBKU19VTkRFRklORUQsIHJhc3BpX2NhbV9jbGFzcyA9IEpTX1VOREVGSU5FRDsKdGhyZWFkX2xvY2FsIFZJU0lCTEUgSlNDbGFzc0lEIGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9IDA7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICBKU1Jhc3BpQ2FtRGF0YSogczsKICBKU1ZhbHVlIG9iaiA9IEpTX1VOREVGSU5FRDsKICBKU1ZhbHVlIHByb3RvLCByZXQ7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1Jhc3BpQ2FtRGF0YT4oY3R4KTsKICBpZighcykKICAgIHJldHVybiBKU19UaHJvd091dE9mTWVtb3J5KGN0eCk7CgogIG5ldyhzKSBKU1Jhc3BpQ2FtRGF0YSgpOwoKICAvKiB1c2luZyBuZXdfdGFyZ2V0IHRvIGdldCB0aGUgcHJvdG90eXBlIGlzIG5lY2Vzc2FyeSB3aGVuIHRoZQogICAgIGNsYXNzIGlzIGV4dGVuZGVkLiAqLwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcmFzcGlfY2FtX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CiAgaWYoSlNfSXNFeGNlcHRpb24ob2JqKSkKICAgIGdvdG8gZmFpbDsKICBKU19TZXRPcGFxdWUob2JqLCBzKTsKICByZXR1cm4gb2JqOwpmYWlsOgogIGpzX2RlYWxsb2NhdGUoY3R4LCBzKTsKICBKU19GcmVlVmFsdWUoY3R4LCBvYmopOwogIHJldHVybiBKU19FWENFUFRJT047Cn0KCmV4dGVybiAiQyIgVklTSUJMRSBKU1Jhc3BpQ2FtRGF0YSoKanNfcmFzcGlfY2FtX2RhdGEyKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmFzcGlDYW1EYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBzID0gc3RhdGljX2Nhc3Q8SlNSYXNwaUNhbURhdGEqPihKU19HZXRPcGFxdWUodmFsLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpKTsKICAvKiBOb3RlOiAncycgY2FuIGJlIE5VTEwgaW4gY2FzZSBKU19TZXRPcGFxdWUoKSB3YXMgbm90IGNhbGxlZCAqLwoKICBzLT5+SlNSYXNwaUNhbURhdGEoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKCiAgSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7Cn0KCmVudW0gewogIFJBU1BJX0NBTV9TVEFSVF9QSE9UTyA9IDAsCiAgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE8sCiAgUkFTUElfQ0FNX1NUT1BfUEhPVE8sCiAgUkFTUElfQ0FNX1NUQVJUX1ZJREVPLAogIFJBU1BJX0NBTV9HRVRfVklERU9fRlJBTUUsCiAgUkFTUElfQ0FNX1NUT1BfVklERU8sCgp9OwoKc3RhdGljIEpTVmFsdWUKanNfcmFzcGlfY2FtX29wdGlvbnMoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCkgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CgogIHJldHVybiBqc19saWJjYW1lcmFfYXBwX29wdGlvbnNfd3JhcChjdHgsIGNhbS0+b3B0aW9ucyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3Jhc3BpX2NhbV9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIEpTUmFzcGlDYW1EYXRhKiBjYW0gPSBzdGF0aWNfY2FzdDxKU1Jhc3BpQ2FtRGF0YSo+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmFzcGlfY2FtX2NsYXNzX2lkKSk7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgaW50MzJfdCBwcm9wSUQ7CiAgZG91YmxlIHZhbHVlID0gMDsKCiAgIHRyeSB7CiBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUkFTUElfQ0FNX1NUQVJUX1BIT1RPOiB7CiAgICAgIGNhbS0+c3RhcnRQaG90bygpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX0NBUFRVUkVfUEhPVE86IHsKICAgICAgSlNJbnB1dE91dHB1dEFycmF5IG1hdCA9IGpzX3VtYXRfb3JfbWF0KGN0eCwgYXJndlswXSk7CiAgICAgIGNhbS0+Y2FwdHVyZVBob3RvKG1hdC5nZXRNYXRSZWYoKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSQVNQSV9DQU1fU1RPUF9QSE9UTzogewogICAgICBjYW0tPnN0b3BQaG90bygpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX1NUQVJUX1ZJREVPOiB7CiAgICAgIGNhbS0+c3RhcnRWaWRlbygpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUkFTUElfQ0FNX0dFVF9WSURFT19GUkFNRTogewogICAgICBKU0lucHV0T3V0cHV0QXJyYXkgbWF0ID0ganNfdW1hdF9vcl9tYXQoY3R4LCBhcmd2WzBdKTsKICAgICAgdWludDMyX3QgdGltZW91dCA9IDEwMDA7CiAgICAgIGlmKGFyZ2MgPiAxKQogICAgICAgIEpTX1RvVWludDMyKGN0eCwgJnRpbWVvdXQsIGFyZ3ZbMV0pOwoKICAgICAgY2FtLT5nZXRWaWRlb0ZyYW1lKG1hdC5nZXRNYXRSZWYoKSwgdGltZW91dCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBSQVNQSV9DQU1fU1RPUF9WSURFTzogewogICAgICBjYW0tPnN0b3BWaWRlbygpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KClZJU0lCTEUgSlNWYWx1ZQpqc19yYXNwaV9jYW1fd3JhcChKU0NvbnRleHQqIGN0eCwgSlNSYXNwaUNhbURhdGEqIGNhbSkgewogIEpTVmFsdWUgcmV0OwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcmFzcGlfY2FtX3Byb3RvLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwoKICAvLyBjYXAtPmFkZHJlZigpOwoKICBKU19TZXRPcGFxdWUocmV0LCBjYW0pOwoKICByZXR1cm4gcmV0Owp9CgpKU0NsYXNzRGVmIGpzX3Jhc3BpX2NhbV9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIlJhc3BpQ2FtIiwKICAgIC5maW5hbGl6ZXIgPSBqc19yYXNwaV9jYW1fZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcmFzcGlfY2FtX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0YXJ0UGhvdG8iLCAwLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fU1RBUlRfUEhPVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjYXB0dXJlUGhvdG8iLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fQ0FQVFVSRV9QSE9UTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInN0b3BQaG90byIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVE9QX1BIT1RPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RhcnRWaWRlbyIsIDAsIGpzX3Jhc3BpX2NhbV9tZXRob2QsIFJBU1BJX0NBTV9TVEFSVF9WSURFTyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFZpZGVvRnJhbWUiLCAxLCBqc19yYXNwaV9jYW1fbWV0aG9kLCBSQVNQSV9DQU1fR0VUX1ZJREVPX0ZSQU1FKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3RvcFZpZGVvIiwgMCwganNfcmFzcGlfY2FtX21ldGhvZCwgUkFTUElfQ0FNX1NUT1BfVklERU8pLAogICAgSlNfQ0dFVFNFVF9ERUYoIm9wdGlvbnMiLCBqc19yYXNwaV9jYW1fb3B0aW9ucywgMCksCgogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSYXNwaUNhbSIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCn07CgppbnQKanNfcmFzcGlfY2FtX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3Jhc3BpX2NhbV9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJhc3BpQ2FtIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19yYXNwaV9jYW1fY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsICZqc19yYXNwaV9jYW1fY2xhc3MpOwoKICAgIHJhc3BpX2NhbV9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByYXNwaV9jYW1fcHJvdG8sIGpzX3Jhc3BpX2NhbV9wcm90b19mdW5jcywgY291bnRvZihqc19yYXNwaV9jYW1fcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yYXNwaV9jYW1fY2xhc3NfaWQsIHJhc3BpX2NhbV9wcm90byk7CgogICAgcmFzcGlfY2FtX2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3Jhc3BpX2NhbV9jdG9yLCAiUmFzcGlDYW0iLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CgogICAgLyogc2V0IHByb3RvLmNvbnN0cnVjdG9yIGFuZCBjdG9yLnByb3RvdHlwZSAqLwogICAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCByYXNwaV9jYW1fY2xhc3MsIHJhc3BpX2NhbV9wcm90byk7CiAgfQoKICBpZihtKSB7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX3Jhc3BpX2NhbV9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJhc3BpQ2FtIik7Cn0KCnZvaWQKanNfcmFzcGlfY2FtX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKHJhc3BpX2NhbV9jbGFzcykpCiAgICBqc19yYXNwaV9jYW1faW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiUmFzcGlDYW0iLCByYXNwaV9jYW1fY2xhc3MpOwp9CgojaWZkZWYgSlNfTUVUSE9EX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIFZJU0lCTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9yYXNwaV9jYW0KI2VuZGlmCgpleHRlcm4gIkMiIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfcmFzcGlfY2FtX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfcmFzcGlfY2FtX2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9CgAAAAAAAAAAixcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0AkAAAAAAADQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1760,
					1,
					"paste",
					null,
					"AQAAAP8MAAAAAAAAxg0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wwAAAAAAAD/DAAAAAAAAAAAAAAAACRA"
				],
				[
					1763,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYNAAAAAAAAxw0AAAAAAAAAAAAAxw0AAAAAAADJDQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxg0AAAAAAADGDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1770,
					3,
					"right_delete",
					null,
					"BAAAAJgNAAAAAAAAmA0AAAAAAAACAAAAY3bFDQAAAAAAAMUNAAAAAAAAAgAAACAgmA0AAAAAAACYDQAAAAAAAAEAAAA6mA0AAAAAAACYDQAAAAAAAAEAAAA6",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmA0AAAAAAACaDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1773,
					3,
					"left_delete",
					null,
					"AwAAALQNAAAAAAAAtA0AAAAAAAAIAAAAIHBvcyArIDGzDQAAAAAAALMNAAAAAAAAAQAAACuyDQAAAAAAALINAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtA0AAAAAAAC8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					1782,
					2,
					"left_delete",
					null,
					"AgAAAEMNAAAAAAAAQw0AAAAAAAAuAAAAICAgIGNvbnN0IGF1dG8gcG9zID0gbXNnLmZpbmRfbGFzdF9vZigiL1xcIik7CkINAAAAAAAAQg0AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQw0AAAAAAABxDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1789,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQg0AAAAAAABCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1828,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAA8NAAAAAAAAEA0AAAAAAAAAAAAAEA0AAAAAAAAQDQAAAAAAAAIAAABjdhANAAAAAAAAEQ0AAAAAAAAAAAAAEQ0AAAAAAAASDQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADw0AAAAAAAARDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1833,
					1,
					"insert",
					{
						"characters": "exception"
					},
					"CgAAABQNAAAAAAAAFQ0AAAAAAAAAAAAAFQ0AAAAAAAAVDQAAAAAAAAkAAABFeGNlcHRpb24VDQAAAAAAABYNAAAAAAAAAAAAABYNAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAYDQAAAAAAAAAAAAAYDQAAAAAAABkNAAAAAAAAAAAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAAbDQAAAAAAABwNAAAAAAAAAAAAABwNAAAAAAAAHQ0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFA0AAAAAAAAdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1834,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0NAAAAAAAAHg0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQ0AAAAAAAAdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					1835,
					1,
					"left_delete",
					null,
					"AQAAAB0NAAAAAAAAHQ0AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHg0AAAAAAAAeDQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "js_video_capture.cpp",
			"settings":
			{
				"buffer_size": 7899,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste",
					null,
					"AQAAAIwTAAAAAAAAUxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjBMAAAAAAACMEwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"right_delete",
					null,
					"AQAAACUUAAAAAAAAJRQAAAAAAAAEAAAAY3Y6Og",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJRQAAAAAAAApFAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAC4UAAAAAAAALxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhQAAAAAAAAuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAANATAAAAAAAA0BMAAAAAAAAvAAAAICAgIGNvbnN0IGF1dG8gcG9zID0gbXNnLmZpbmRfbGFzdF9vZigiL1xcIik7Cgo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0BMAAAAAAAD/EwAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					11,
					"left_delete",
					null,
					"CwAAABoUAAAAAAAAGhQAAAAAAAABAAAAMRkUAAAAAAAAGRQAAAAAAAABAAAAIBgUAAAAAAAAGBQAAAAAAAABAAAAKxcUAAAAAAAAFxQAAAAAAAABAAAAIBYUAAAAAAAAFhQAAAAAAAABAAAAcxUUAAAAAAAAFRQAAAAAAAABAAAAbxQUAAAAAAAAFBQAAAAAAAABAAAAcBMUAAAAAAAAExQAAAAAAAABAAAAIBIUAAAAAAAAEhQAAAAAAAABAAAAKxEUAAAAAAAAERQAAAAAAAABAAAAIBAUAAAAAAAAEBQAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGxQAAAAAAAAbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABEUAAAAAAAAEhQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAERQAAAAAAAARFAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAABEUAAAAAAAAERQAAAAAAAABAAAAPQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhQAAAAAAAASFAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABEUAAAAAAAAEhQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAERQAAAAAAAARFAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABIUAAAAAAAAFBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhQAAAAAAAASFAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABIUAAAAAAAAEhQAAAAAAAABAAAAKBIUAAAAAAAAEhQAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAExQAAAAAAAATFAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0BMAAAAAAADQEwAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOg0AAAAAAAA6DQAAAAAAAAAAAAAAACRA"
				]
			]
		},
		{
			"file": "js_imgproc.cpp",
			"settings":
			{
				"buffer_size": 67056,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 7004,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BQAAABEXAAAAAAAAEhcAAAAAAAAAAAAAEhcAAAAAAAAUFwAAAAAAAAAAAAAUFwAAAAAAABUXAAAAAAAAAAAAABUXAAAAAAAAFhcAAAAAAAAAAAAAFhcAAAAAAAAXFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAERcAAAAAAAARFwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABcXAAAAAAAAGRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxcAAAAAAAAXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "CMAKE_C_FLAGS"
					},
					"DQAAABgXAAAAAAAAGRcAAAAAAAAAAAAAGRcAAAAAAAAaFwAAAAAAAAAAAAAaFwAAAAAAABsXAAAAAAAAAAAAABsXAAAAAAAAHBcAAAAAAAAAAAAAHBcAAAAAAAAdFwAAAAAAAAAAAAAdFwAAAAAAAB4XAAAAAAAAAAAAAB4XAAAAAAAAHxcAAAAAAAAAAAAAHxcAAAAAAAAgFwAAAAAAAAAAAAAgFwAAAAAAACEXAAAAAAAAAAAAACEXAAAAAAAAIhcAAAAAAAAAAAAAIhcAAAAAAAAjFwAAAAAAAAAAAAAjFwAAAAAAACQXAAAAAAAAAAAAACQXAAAAAAAAJRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBcAAAAAAAAYFwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUXAAAAAAAAJhcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJRcAAAAAAAAlFwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACYXAAAAAAAAKBcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJhcAAAAAAAAmFwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "${CMAKE_C_FLAGS}"
					},
					"EAAAACcXAAAAAAAAKBcAAAAAAAAAAAAAKBcAAAAAAAApFwAAAAAAAAAAAAApFwAAAAAAACoXAAAAAAAAAAAAACoXAAAAAAAAKxcAAAAAAAAAAAAAKxcAAAAAAAAsFwAAAAAAAAAAAAAsFwAAAAAAAC0XAAAAAAAAAAAAAC0XAAAAAAAALhcAAAAAAAAAAAAALhcAAAAAAAAvFwAAAAAAAAAAAAAvFwAAAAAAADAXAAAAAAAAAAAAADAXAAAAAAAAMRcAAAAAAAAAAAAAMRcAAAAAAAAyFwAAAAAAAAAAAAAyFwAAAAAAADMXAAAAAAAAAAAAADMXAAAAAAAANBcAAAAAAAAAAAAANBcAAAAAAAA1FwAAAAAAAAAAAAA1FwAAAAAAADYXAAAAAAAAAAAAADYXAAAAAAAANxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJxcAAAAAAAAnFwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " -fPIC"
					},
					"BgAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA5FwAAAAAAAAAAAAA5FwAAAAAAADoXAAAAAAAAAAAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA8FwAAAAAAAD0XAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANxcAAAAAAAA3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAANsWAAAAAAAA3BYAAAAAAAAAAAAA3BYAAAAAAADeFgAAAAAAAAAAAADeFgAAAAAAAN8WAAAAAAAAAAAAAN8WAAAAAAAA4BYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2xYAAAAAAADbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAWAAAAAAAA4hYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BYAAAAAAADgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "BUILD"
					},
					"BQAAAOEWAAAAAAAA4hYAAAAAAAAAAAAA4hYAAAAAAADjFgAAAAAAAAAAAADjFgAAAAAAAOQWAAAAAAAAAAAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA5RYAAAAAAADmFgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					5,
					"left_delete",
					null,
					"BQAAAOUWAAAAAAAA5RYAAAAAAAABAAAAROQWAAAAAAAA5BYAAAAAAAABAAAATOMWAAAAAAAA4xYAAAAAAAABAAAASeIWAAAAAAAA4hYAAAAAAAABAAAAVeEWAAAAAAAA4RYAAAAAAAABAAAAQg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5hYAAAAAAADmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "USE_LCCV"
					},
					"CAAAAOEWAAAAAAAA4hYAAAAAAAAAAAAA4hYAAAAAAADjFgAAAAAAAAAAAADjFgAAAAAAAOQWAAAAAAAAAAAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA5RYAAAAAAADmFgAAAAAAAAAAAADmFgAAAAAAAOcWAAAAAAAAAAAAAOcWAAAAAAAA6BYAAAAAAAAAAAAA6BYAAAAAAADpFgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4RYAAAAAAADhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\nendif"
					},
					"BwAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADNFwAAAAAAAAAAAADNFwAAAAAAAM4XAAAAAAAAAAAAAM4XAAAAAAAAzxcAAAAAAAAAAAAAzxcAAAAAAADQFwAAAAAAAAAAAADQFwAAAAAAANEXAAAAAAAAAAAAANEXAAAAAAAA0hcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyhcAAAAAAADKFwAAAAAAAP///////+9/"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AwAAANIXAAAAAAAA1BcAAAAAAAAAAAAAyxcAAAAAAADLFwAAAAAAAAIAAAAgIMsXAAAAAAAAyxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0hcAAAAAAADSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "USE_LCCV"
					},
					"CAAAANEXAAAAAAAA0hcAAAAAAAAAAAAA0hcAAAAAAADTFwAAAAAAAAAAAADTFwAAAAAAANQXAAAAAAAAAAAAANQXAAAAAAAA1RcAAAAAAAAAAAAA1RcAAAAAAADWFwAAAAAAAAAAAADWFwAAAAAAANcXAAAAAAAAAAAAANcXAAAAAAAA2BcAAAAAAAAAAAAA2BcAAAAAAADZFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0RcAAAAAAADRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"indent",
					null,
					"BQAAAOsWAAAAAAAA7RYAAAAAAAAAAAAAChcAAAAAAAAMFwAAAAAAAAAAAAAlFwAAAAAAACcXAAAAAAAAAAAAAFUXAAAAAAAAVxcAAAAAAAAAAAAA0xcAAAAAAADVFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2xcAAAAAAADrFgAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADtFgAAAAAAAAAAAADtFgAAAAAAAO8WAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hYAAAAAAADqFgAAAAAAAP///////+9/"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAO8WAAAAAAAAIxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7xYAAAAAAADvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAANwaAAAAAAAAHBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3BoAAAAAAADcGgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"paste",
					null,
					"AgAAAP8aAAAAAAAAChsAAAAAAAAAAAAAChsAAAAAAAAKGwAAAAAAACEAAAA8dGFyZ2V0PiBbPHRhcmdldC1kZXBlbmRlbmN5Pl0uLi4",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/xoAAAAAAAAgGwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAobAAAAAAAACxsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAChsAAAAAAAAKGwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"paste",
					null,
					"AQAAAAsbAAAAAAAAEhsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACxsAAAAAAAALGwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABcbAAAAAAAAGBsAAAAAAAAAAAAAGBsAAAAAAAAYGwAAAAAAAOUAAAAgIHNldChCVUlMRF9TSEFSRURfTElCUyBPRkYpCiAgICBhZGRfc3ViZGlyZWN0b3J5KExDQ1YpCiAgICBzZXQoQ01BS0VfQ19GTEFHUyAiJHtDTUFLRV9DX0ZMQUdTfSAtZlBJQyIpCiAgICBzZXQoTENDVl9MSUJSQVJJRVMgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfS9MQ0NWL2xpYmxjY3YuYSIgY2FtZXJhIGNhbWVyYS1iYXNlIGV2ZW50IGV2ZW50X3B0aHJlYWRzIFRocmVhZHM6OlRocmVhZHMp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxsAAAAAAAD8GwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOsWAAAAAAAA7BYAAAAAAAAAAAAA7BYAAAAAAADsFgAAAAAAADgAAAAgICAgYWRkX2RlcGVuZGVuY2llcyg8dGFyZ2V0PiBbPHRhcmdldC1kZXBlbmRlbmN5Pl0uLi4pCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6xYAAAAAAAAjFwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAAOsWAAAAAAAA6xYAAAAAAAABAAAAIOoWAAAAAAAA6hYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"reindent",
					{
						"event":
						{
							"modifier_keys":
							{
							}
						},
						"single_line": true
					},
					"SgAAAAoBAAAAAAAADAEAAAAAAAAAAAAACAEAAAAAAAAIAQAAAAAAAAIAAAAgIIcBAAAAAAAAigEAAAAAAAAAAAAAWAEAAAAAAABYAQAAAAAAAC8AAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAUCAAAAAAAABwIAAAAAAAAAAAAAAwIAAAAAAAADAgAAAAAAAAIAAAAgIGwCAAAAAAAAbgIAAAAAAAAAAAAAagIAAAAAAABqAgAAAAAAAAIAAAAgIM0CAAAAAAAAzwIAAAAAAAAAAAAAywIAAAAAAADLAgAAAAAAAAIAAAAgIMMEAAAAAAAAxQQAAAAAAAAAAAAAwQQAAAAAAADBBAAAAAAAAAIAAAAgIAYFAAAAAAAACAUAAAAAAAAAAAAABAUAAAAAAAAEBQAAAAAAAAIAAAAgICgFAAAAAAAALAUAAAAAAAAAAAAAIgUAAAAAAAAiBQAAAAAAAAYAAAAgICAgICBjBgAAAAAAAGUGAAAAAAAAAAAAAGEGAAAAAAAAYQYAAAAAAAACAAAAICBTBwAAAAAAAFUHAAAAAAAAAAAAAFEHAAAAAAAAUQcAAAAAAAACAAAAICAjCAAAAAAAACUIAAAAAAAAAAAAACEIAAAAAAAAIQgAAAAAAAACAAAAICCtCAAAAAAAAK8IAAAAAAAAAAAAAKsIAAAAAAAAqwgAAAAAAAACAAAAICA7CQAAAAAAAD0JAAAAAAAAAAAAADkJAAAAAAAAOQkAAAAAAAACAAAAICDmCQAAAAAAAOcJAAAAAAAAAAAAANEJAAAAAAAA0QkAAAAAAAAVAAAAICAgICAgICAgICAgICAgICAgICAg3QoAAAAAAADfCgAAAAAAAAAAAADJCgAAAAAAAMkKAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAglAsAAAAAAACWCwAAAAAAAAAAAACSCwAAAAAAAJILAAAAAAAAAgAAACAgfgwAAAAAAACADAAAAAAAAAAAAAB8DAAAAAAAAHwMAAAAAAAAAgAAACAgSg0AAAAAAABMDQAAAAAAAAAAAAAyDQAAAAAAADINAAAAAAAAGAAAACAgICAgICAgICAgICAgICAgICAgICAgIOMNAAAAAAAA5Q0AAAAAAAAAAAAA4Q0AAAAAAADhDQAAAAAAAAIAAAAgIF0PAAAAAAAAXw8AAAAAAAAAAAAAWw8AAAAAAABbDwAAAAAAAAIAAAAgILgRAAAAAAAAuhEAAAAAAAAAAAAAthEAAAAAAAC2EQAAAAAAAAIAAAAgIBcSAAAAAAAAGRIAAAAAAAAAAAAAFRIAAAAAAAAVEgAAAAAAAAIAAAAgICkUAAAAAAAAKxQAAAAAAAAAAAAAJxQAAAAAAAAnFAAAAAAAAAIAAAAgIMEUAAAAAAAAwhQAAAAAAAAAAAAAvBQAAAAAAAC8FAAAAAAAAAUAAAAgICAgIDcWAAAAAAAAORYAAAAAAAAAAAAA8RUAAAAAAADxFQAAAAAAAEYAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLBYAAAAAAAAuFgAAAAAAAAAAAAAqFgAAAAAAACoWAAAAAAAAAgAAACAgPRYAAAAAAABBFgAAAAAAAAAAAAA5FgAAAAAAADkWAAAAAAAABAAAACAgICCvFwAAAAAAALEXAAAAAAAAAAAAAK0XAAAAAAAArRcAAAAAAAACAAAAICABGAAAAAAAAAMYAAAAAAAAAAAAAOkXAAAAAAAA6RcAAAAAAAAYAAAAICAgICAgICAgICAgICAgICAgICAgICAgXxgAAAAAAABgGAAAAAAAAAAAAABEGAAAAAAAAEQYAAAAAAAAGwAAACAgICAgICAgICAgICAgICAgICAgICAgICAgIDUZAAAAAAAANxkAAAAAAAAAAAAAMxkAAAAAAAAzGQAAAAAAAAIAAAAgIJEZAAAAAAAAkxkAAAAAAAAAAAAAfRkAAAAAAAB9GQAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgILAZAAAAAAAAsBkAAAAAAAAAAAAArxkAAAAAAACvGQAAAAAAAAEAAAAgwBkAAAAAAADCGQAAAAAAAAAAAAC8GQAAAAAAALwZAAAAAAAABAAAACAgICDoGQAAAAAAAOoZAAAAAAAAAAAAAOUZAAAAAAAA5RkAAAAAAAADAAAAICAg6hkAAAAAAADqGQAAAAAAAAAAAADoGQAAAAAAAOgZAAAAAAAAAgAAACAg1xoAAAAAAADZGgAAAAAAAAAAAADVGgAAAAAAANUaAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAuHAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "XX"
					},
					"AwAAAIIWAAAAAAAAgxYAAAAAAAAAAAAA5hkAAAAAAADmGQAAAAAAAAIAAAAgIIMWAAAAAAAAhBYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAghYAAAAAAACCFgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAAJYWAAAAAAAAlxYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlhYAAAAAAACWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAJYWAAAAAAAAlhYAAAAAAAABAAAAWA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlxYAAAAAAACXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "XX"
					},
					"AgAAAJUWAAAAAAAAlhYAAAAAAAAAAAAAlhYAAAAAAACXFgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlRYAAAAAAACVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMWAAAAAAAAcxYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "imgproc.js",
			"settings":
			{
				"buffer_size": 11722,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "build-opencv.sh",
			"settings":
			{
				"buffer_size": 1869,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "jha/**\n * @class Rect\n */\nclass Rect {\n  /**\n   *  @constructor Rect\n   */\n  constructor() {}\n\n  /**\n   * @var Rect.prototype.x\n   */\n  get x() {}\n\n  /**\n   * @var Rect.prototype.y\n   */\n  get y() {}\n\n  /**\n   * @var Rect.prototype.width\n   */\n  get width() {}\n\n  /**\n   * @var Rect.prototype.height\n   */\n  get height() {}\n\n  /**\n   * @var Rect.prototype.x1\n   */\n  get x1() {}\n\n  /**\n   * @var Rect.prototype.y1\n   */\n  get y1() {}\n\n  /**\n   * @var Rect.prototype.x2\n   */\n  get x2() {}\n\n  /**\n   * @var Rect.prototype.y2\n   */\n  get y2() {}\n\n  /**\n   * @var Rect.prototype.point\n   */\n  get point() {}\n\n  /**\n   * @var Rect.prototype.size\n   */\n  get size() {}\n\n  /**\n   * @var Rect.prototype.tl\n   */\n  get tl() {}\n\n  /**\n   * @var Rect.prototype.br\n   */\n  get br() {}\n\n  /**\n   * @function Rect.prototype.contains\n   * @returns {Object}  Returns null\n   */\n  contains() {}\n\n  /**\n   * @var Rect.prototype.empty\n   */\n  get empty() {}\n\n  /**\n   * @var Rect.prototype.area\n   */\n  get area() {}\n\n  /**\n   * @function Rect.prototype.br\n   * @returns {Object}  Returns null\n   */\n  br() {}\n\n  /**\n   * @function Rect.prototype.tl\n   * @returns {Object}  Returns null\n   */\n  tl() {}\n\n  /**\n   * @function Rect.prototype.inset\n   * @returns {Object}  Returns null\n   */\n  inset() {}\n\n  /**\n   * @function Rect.prototype.outset\n   * @returns {Object}  Returns null\n   */\n  outset() {}\n\n  /**\n   * @function Rect.prototype.hsplit\n   * @returns {Object}  Returns null\n   */\n  hsplit() {}\n\n  /**\n   * @function Rect.prototype.vsplit\n   * @returns {Object}  Returns null\n   */\n  vsplit() {}\n\n  /**\n   * @function Rect.prototype.merge\n   * @returns {Object}  Returns null\n   */\n  merge() {}\n\n  /**\n   * @function Rect.prototype.toString\n   * @returns {Object}  Returns null\n   */\n  toString() {}\n\n  /**\n   * @function Rect.prototype.toSource\n   * @returns {Object}  Returns null\n   */\n  toSource() {}\n\n  /**\n   * @function Rect.prototype.equals\n   * @returns {Object}  Returns null\n   */\n  equals() {}\n\n  /**\n   * @function Rect.prototype.round\n   * @returns {Object}  Returns null\n   */\n  round() {}\n\n  /**\n   * @function Rect.prototype.toObject\n   * @returns {Object}  Returns null\n   */\n  toObject() {}\n\n  /**\n   * @function Rect.prototype.toArray\n   * @returns {Object}  Returns null\n   */\n  toArray() {}\n\n  /**\n   * @var {string} Rect.prototype.[Symbol.toStringTag]\n   */\n  [Symbol.toStringTag] = 'Rect';\n\n  /**\n   * @function Rect.from\n   * @returns {Object}  Returns null\n   */\n  static from() {}\n}\n",
			"file": "rect.js",
			"file_size": 2498,
			"file_write_time": 132844918559163882,
			"settings":
			{
				"buffer_size": 2501,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "jha"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "utility.js",
			"settings":
			{
				"buffer_size": 1219,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_mat.hpp",
			"settings":
			{
				"buffer_size": 905,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_umat.hpp",
			"settings":
			{
				"buffer_size": 4317,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "pp/**\n * @class Mat\n */\nclass Mat {\n  /**\n   *  @constructor Mat\n   */\n  constructor() {}\n}\n\n/**\n * @class MatIterator\n */\nclass MatIterator {\n  /**\n   *  @constructor MatIterator\n   */\n  constructor() {}\n\n  /**\n   * @var MatIterator.prototype.cols\n   */\n  get cols() {}\n\n  /**\n   * @var MatIterator.prototype.rows\n   */\n  get rows() {}\n\n  /**\n   * @var MatIterator.prototype.channels\n   */\n  get channels() {}\n\n  /**\n   * @var MatIterator.prototype.type\n   */\n  get type() {}\n\n  /**\n   * @var MatIterator.prototype.depth\n   */\n  get depth() {}\n\n  /**\n   * @var MatIterator.prototype.empty\n   */\n  get empty() {}\n\n  /**\n   * @var MatIterator.prototype.total\n   */\n  get total() {}\n\n  /**\n   * @var MatIterator.prototype.size\n   */\n  get size() {}\n\n  /**\n   * @var MatIterator.prototype.continuous\n   */\n  get continuous() {}\n\n  /**\n   * @var MatIterator.prototype.submatrix\n   */\n  get submatrix() {}\n\n  /**\n   * @var MatIterator.prototype.step\n   */\n  get step() {}\n\n  /**\n   * @var MatIterator.prototype.elemSize\n   */\n  get elemSize() {}\n\n  /**\n   * @var MatIterator.prototype.elemSize1\n   */\n  get elemSize1() {}\n\n  /**\n   * @var MatIterator.prototype.buffer\n   */\n  get buffer() {}\n\n  /**\n   * @var MatIterator.prototype.array\n   */\n  get array() {}\n\n  /**\n   * @function MatIterator.prototype.col\n   * @returns {Object}  Returns null\n   */\n  col() {}\n\n  /**\n   * @function MatIterator.prototype.row\n   * @returns {Object}  Returns null\n   */\n  row() {}\n\n  /**\n   * @function MatIterator.prototype.colRange\n   * @returns {Object}  Returns null\n   */\n  colRange() {}\n\n  /**\n   * @function MatIterator.prototype.rowRange\n   * @returns {Object}  Returns null\n   */\n  rowRange() {}\n\n  /**\n   * @function MatIterator.prototype.clone\n   * @returns {Object}  Returns null\n   */\n  clone() {}\n\n  /**\n   * @function MatIterator.prototype.roi\n   * @returns {Object}  Returns null\n   */\n  roi() {}\n\n  /**\n   * @function MatIterator.prototype.release\n   * @returns {Object}  Returns null\n   */\n  release() {}\n\n  /**\n   * @function MatIterator.prototype.dup\n   * @returns {Object}  Returns null\n   */\n  dup() {}\n\n  /**\n   * @function MatIterator.prototype.clear\n   * @returns {Object}  Returns null\n   */\n  clear() {}\n\n  /**\n   * @function MatIterator.prototype.reset\n   * @returns {Object}  Returns null\n   */\n  reset() {}\n\n  /**\n   * @function MatIterator.prototype.resize\n   * @returns {Object}  Returns null\n   */\n  resize() {}\n\n  /**\n   * @function MatIterator.prototype.step1\n   * @returns {Object}  Returns null\n   */\n  step1() {}\n\n  /**\n   * @function MatIterator.prototype.locateROI\n   * @returns {Object}  Returns null\n   */\n  locateROI() {}\n\n  /**\n   * @function MatIterator.prototype.ptr\n   * @returns {Object}  Returns null\n   */\n  ptr() {}\n\n  /**\n   * @function MatIterator.prototype.and\n   * @returns {Object}  Returns null\n   */\n  and() {}\n\n  /**\n   * @function MatIterator.prototype.or\n   * @returns {Object}  Returns null\n   */\n  or() {}\n\n  /**\n   * @function MatIterator.prototype.xor\n   * @returns {Object}  Returns null\n   */\n  xor() {}\n\n  /**\n   * @function MatIterator.prototype.mul\n   * @returns {Object}  Returns null\n   */\n  mul() {}\n\n  /**\n   * @function MatIterator.prototype.zero\n   * @returns {Object}  Returns null\n   */\n  zero() {}\n\n  /**\n   * @function MatIterator.prototype.one\n   * @returns {Object}  Returns null\n   */\n  one() {}\n\n  /**\n   * @function MatIterator.prototype.toString\n   * @returns {Object}  Returns null\n   */\n  toString() {}\n\n  /**\n   * @function MatIterator.prototype.at\n   * @returns {Object}  Returns null\n   */\n  at() {}\n\n  /**\n   * @function MatIterator.prototype.set\n   * @returns {Object}  Returns null\n   */\n  set() {}\n\n  /**\n   * @function MatIterator.prototype.setTo\n   * @returns {Object}  Returns null\n   */\n  setTo() {}\n\n  /**\n   * @function MatIterator.prototype.convertTo\n   * @returns {Object}  Returns null\n   */\n  convertTo() {}\n\n  /**\n   * @function MatIterator.prototype.copyTo\n   * @returns {Object}  Returns null\n   */\n  copyTo() {}\n\n  /**\n   * @function MatIterator.prototype.reshape\n   * @returns {Object}  Returns null\n   */\n  reshape() {}\n\n  /**\n   * @function MatIterator.prototype.getUMat\n   * @returns {Object}  Returns null\n   */\n  getUMat() {}\n\n  /**\n   * @function MatIterator.prototype.keys\n   * @returns {Object}  Returns null\n   */\n  keys() {}\n\n  /**\n   * @function MatIterator.prototype.values\n   * @returns {Object}  Returns null\n   */\n  values() {}\n\n  /**\n   * @function MatIterator.prototype.entries\n   * @returns {Object}  Returns null\n   */\n  entries() {}\n\n  /**\n   * @alias values\n   */\n  get [Symbol.iterator]() {\n    return this.values;\n  }\n\n  /**\n   * @alias toString\n   */\n  get [Symbol.toPrimitive]() {\n    return this.toString;\n  }\n\n  /**\n   * @var {string} MatIterator.prototype.[Symbol.toStringTag]\n   */\n  [Symbol.toStringTag] = 'Mat';\n\n  /**\n   * @iterator MatIterator.prototype.next\n   */\n  get next() {}\n\n  /**\n   * @var {string} MatIterator.prototype.[Symbol.toStringTag]\n   */\n  [Symbol.toStringTag] = 'MatIterator';\n\n  /**\n   * @function MatIterator.prototype.[Symbol.iterator]\n   * @returns {Object}  Returns null\n   */\n  [Symbol.iterator]() {}\n\n  /**\n   * @function MatIterator.getRotationMatrix2D\n   * @returns {Object}  Returns null\n   */\n  static getRotationMatrix2D() {}\n\n  /**\n   * @function MatIterator.add\n   * @returns {Object}  Returns null\n   */\n  static add() {}\n\n  /**\n   * @function MatIterator.sub\n   * @returns {Object}  Returns null\n   */\n  static sub() {}\n\n  /**\n   * @function MatIterator.mul\n   * @returns {Object}  Returns null\n   */\n  static mul() {}\n\n  /**\n   * @function MatIterator.div\n   * @returns {Object}  Returns null\n   */\n  static div() {}\n\n  /**\n   * @function MatIterator.and\n   * @returns {Object}  Returns null\n   */\n  static and() {}\n\n  /**\n   * @function MatIterator.or\n   * @returns {Object}  Returns null\n   */\n  static or() {}\n\n  /**\n   * @function MatIterator.xor\n   * @returns {Object}  Returns null\n   */\n  static xor() {}\n\n  /**\n   * @function MatIterator.zeros\n   * @returns {Object}  Returns null\n   */\n  static zeros() {}\n\n  /**\n   * @function MatIterator.ones\n   * @returns {Object}  Returns null\n   */\n  static ones() {}\n\n  /**\n   * @var {number} MatIterator.CV_8U\n   */\n  static CV_8U = 0;\n}\n",
			"file": "mat.js",
			"file_size": 6243,
			"file_write_time": 132845202539033546,
			"settings":
			{
				"buffer_size": 6245,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "pp"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_libcamera_app.cpp",
			"settings":
			{
				"buffer_size": 17397,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					148,
					1,
					"",
					null,
					"CgAAAKw5AAAAAAAAvjkAAAAAAAAOAAAATGliY2FtZXJhQXBwOjp6OQAAAAAAAIw5AAAAAAAADgAAAExpYmNhbWVyYUFwcDo6RzkAAAAAAABZOQAAAAAAAA4AAABMaWJjYW1lcmFBcHA6Og05AAAAAAAAHzkAAAAAAAAOAAAATGliY2FtZXJhQXBwOjrROAAAAAAAAOM4AAAAAAAADgAAAExpYmNhbWVyYUFwcDo6lTgAAAAAAACnOAAAAAAAAA4AAABMaWJjYW1lcmFBcHA6OmM4AAAAAAAAdTgAAAAAAAAOAAAATGliY2FtZXJhQXBwOjoxOAAAAAAAAEM4AAAAAAAADgAAAExpYmNhbWVyYUFwcDo6/zcAAAAAAAAROAAAAAAAAA4AAABMaWJjYW1lcmFBcHA6Osw3AAAAAAAA3jcAAAAAAAAOAAAATGliY2FtZXJhQXBwOjo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzDcAAAAAAADaNwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"",
					null,
					"AQAAAOYDAAAAAAAA9AMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\n#incv"
					},
					"BgAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"left_delete",
					null,
					"AQAAAIgAAAAAAAAAiAAAAAAAAAABAAAAdg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "lude"
					},
					"BAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAI0AAAAAAAAAjwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"left_delete",
					null,
					"AQAAAI4AAAAAAAAAjgAAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwAAAAAAAACPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"paste",
					null,
					"AQAAAI4AAAAAAAAArQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					3,
					"left_delete",
					null,
					"AwAAAK4AAAAAAAAArgAAAAAAAAABAAAAK60AAAAAAAAArQAAAAAAAAABAAAAIqwAAAAAAAAArAAAAAAAAAABAAAAOg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAKwAAAAAAAAArQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"cut",
					null,
					"AQAAAIQAAAAAAAAAhAAAAAAAAAAqAAAAI2luY2x1ZGUgIkxDQ1YvaW5jbHVkZS9saWJjYW1lcmFfYXBwLmhwcCIK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAAAAAAAAACuAAAAAAAAAAAAAAAAAAAA"
				],
				[
					182,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAKgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "JS_U"
					},
					"BQAAAPU3AAAAAAAA9jcAAAAAAAAAAAAA9jcAAAAAAAD2NwAAAAAAAA4AAABKU19DVl9DT05TVEFOVPY3AAAAAAAA9zcAAAAAAAAAAAAA9zcAAAAAAAD4NwAAAAAAAAAAAAD4NwAAAAAAAPk3AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9TcAAAAAAAADOAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"left_delete",
					null,
					"AQAAAPg3AAAAAAAA+DcAAAAAAAABAAAAVQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+TcAAAAAAAD5NwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "INT"
					},
					"AwAAAPg3AAAAAAAA+TcAAAAAAAAAAAAA+TcAAAAAAAD6NwAAAAAAAAAAAAD6NwAAAAAAAPs3AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+DcAAAAAAAD4NwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					3,
					"left_delete",
					null,
					"AwAAAPo3AAAAAAAA+jcAAAAAAAABAAAAVPk3AAAAAAAA+TcAAAAAAAABAAAATvg3AAAAAAAA+DcAAAAAAAABAAAASQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+zcAAAAAAAD7NwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "PROP_IN"
					},
					"BwAAAPg3AAAAAAAA+TcAAAAAAAAAAAAA+TcAAAAAAAD6NwAAAAAAAAAAAAD6NwAAAAAAAPs3AAAAAAAAAAAAAPs3AAAAAAAA/DcAAAAAAAAAAAAA/DcAAAAAAAD9NwAAAAAAAAAAAAD9NwAAAAAAAP43AAAAAAAAAAAAAP43AAAAAAAA/zcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+DcAAAAAAAD4NwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert_completion",
					{
						"completion": "JS_PROP_INT32_DEF",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_PROP_INT32_DEF"
					},
					"AgAAAPU3AAAAAAAA9TcAAAAAAAAKAAAASlNfUFJPUF9JTvU3AAAAAAAABjgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/zcAAAAAAAD/NwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAAc4AAAAAAAACDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABzgAAAAAAAAHOAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"paste",
					null,
					"AQAAAAg4AAAAAAAAFzgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACDgAAAAAAAAIOAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAABc4AAAAAAAAGDgAAAAAAAAAAAAAGDgAAAAAAAAZOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFzgAAAAAAAAXOAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABk4AAAAAAAAGjgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGTgAAAAAAAAZOAAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"cut",
					null,
					"AQAAABo4AAAAAAAAGjgAAAAAAAASAAAALypMaWJjYW1lcmFBcHA6Oiov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGjgAAAAAAAAsOAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"cut",
					null,
					"AQAAAPE3AAAAAAAA8TcAAAAAAAA7AAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1NUSUxMX05PTkUiLCBGTEFHX1NUSUxMX05PTkUpLAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8TcAAAAAAAAsOAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					5,
					"paste",
					null,
					"BQAAAPE3AAAAAAAALDgAAAAAAAAAAAAALDgAAAAAAABnOAAAAAAAAAAAAABnOAAAAAAAAKI4AAAAAAAAAAAAAKI4AAAAAAAA3TgAAAAAAAAAAAAA3TgAAAAAAAAYOQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8TcAAAAAAADxNwAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "BGR"
					},
					"BAAAAGA4AAAAAAAAYTgAAAAAAAAAAAAAYTgAAAAAAABhOAAAAAAAAAQAAABOT05FYTgAAAAAAABiOAAAAAAAAAAAAABiOAAAAAAAAGM4AAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYDgAAAAAAABkOAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"paste",
					null,
					"AgAAAI84AAAAAAAAnTgAAAAAAAAAAAAAnTgAAAAAAACdOAAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjzgAAAAAAACeOAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"paste",
					null,
					"AgAAAH04AAAAAAAAizgAAAAAAAAAAAAAizgAAAAAAACLOAAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfTgAAAAAAACMOAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"paste",
					null,
					"AgAAAEM4AAAAAAAAUTgAAAAAAAAAAAAAUTgAAAAAAABROAAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQzgAAAAAAABSOAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"cut",
					null,
					"AQAAAGU4AAAAAAAAZTgAAAAAAAA5AAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1NUSUxMX1JHQiIsIEZMQUdfU1RJTExfUkdCKSwK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZTgAAAAAAACeOAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					2,
					"paste",
					null,
					"AgAAAGU4AAAAAAAAnjgAAAAAAAAAAAAAnjgAAAAAAADXOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZTgAAAAAAABlOAAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "AW"
					},
					"AwAAAME4AAAAAAAAwjgAAAAAAAAAAAAAwjgAAAAAAADCOAAAAAAAAAIAAABHQsI4AAAAAAAAwzgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwTgAAAAAAADDOAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"paste",
					null,
					"AgAAAMY4AAAAAAAA1DgAAAAAAAAAAAAA1DgAAAAAAADUOAAAAAAAAA4AAABGTEFHX1NUSUxMX1JHQg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxjgAAAAAAADUOAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"paste",
					null,
					"AgAAAO44AAAAAAAABjkAAAAAAAAAAAAABjkAAAAAAAAGOQAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7jgAAAAAAAD9OAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"paste",
					null,
					"AgAAAAk5AAAAAAAAITkAAAAAAAAAAAAAITkAAAAAAAAhOQAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACTkAAAAAAAAYOQAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"paste",
					null,
					"AgAAADs5AAAAAAAAUzkAAAAAAAAAAAAAUzkAAAAAAABTOQAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOzkAAAAAAABKOQAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"paste",
					null,
					"AgAAAFY5AAAAAAAAbjkAAAAAAAAAAAAAbjkAAAAAAABuOQAAAAAAAA8AAABGTEFHX1NUSUxMX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVjkAAAAAAABlOQAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"cut",
					null,
					"AQAAACQ5AAAAAAAAJDkAAAAAAABNAAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1NUSUxMX1RSSVBMRV9CVUZGRVIiLCBGTEFHX1NUSUxMX1RSSVBMRV9CVUZGRVIpLAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJDkAAAAAAABxOQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					2,
					"paste",
					null,
					"AgAAACQ5AAAAAAAAcTkAAAAAAAAAAAAAcTkAAAAAAAC+OQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJDkAAAAAAAAkOQAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"paste",
					null,
					"AgAAAIg5AAAAAAAAnjkAAAAAAAAAAAAAnjkAAAAAAACeOQAAAAAAABgAAABGTEFHX1NUSUxMX1RSSVBMRV9CVUZGRVI",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiDkAAAAAAACgOQAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"paste",
					null,
					"AgAAAKE5AAAAAAAAtzkAAAAAAAAAAAAAtzkAAAAAAAC3OQAAAAAAABgAAABGTEFHX1NUSUxMX1RSSVBMRV9CVUZGRVI",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoTkAAAAAAAC5OQAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"cut",
					null,
					"AQAAAHE5AAAAAAAAcTkAAAAAAABJAAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1NUSUxMX0JVRkZFUl9NQVNLIiwgRkxBR19TVElMTF9CVUZGRVJfTUFTSyksCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcTkAAAAAAAC6OQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					2,
					"paste",
					null,
					"AgAAAHE5AAAAAAAAujkAAAAAAAAAAAAAujkAAAAAAAADOgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcTkAAAAAAABxOQAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"paste",
					null,
					"AgAAANE5AAAAAAAA4DkAAAAAAAAAAAAA4DkAAAAAAADgOQAAAAAAABYAAABGTEFHX1NUSUxMX0JVRkZFUl9NQVNL",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0TkAAAAAAADnOQAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"paste",
					null,
					"AgAAAOM5AAAAAAAA8jkAAAAAAAAAAAAA8jkAAAAAAADyOQAAAAAAABYAAABGTEFHX1NUSUxMX0JVRkZFUl9NQVNL",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4zkAAAAAAAD5OQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"cut",
					null,
					"AQAAALo5AAAAAAAAujkAAAAAAAA7AAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1ZJREVPX05PTkUiLCBGTEFHX1ZJREVPX05PTkUpLAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAujkAAAAAAAD1OQAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					2,
					"paste",
					null,
					"AgAAALo5AAAAAAAA9TkAAAAAAAAAAAAA9TkAAAAAAAAwOgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAujkAAAAAAAC6OQAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"paste",
					null,
					"AgAAAAw6AAAAAAAAGjoAAAAAAAAAAAAAGjoAAAAAAAAaOgAAAAAAAA8AAABGTEFHX1ZJREVPX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADDoAAAAAAAAbOgAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"paste",
					null,
					"AgAAAB06AAAAAAAAKzoAAAAAAAAAAAAAKzoAAAAAAAArOgAAAAAAAA8AAABGTEFHX1ZJREVPX05PTkU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHToAAAAAAAAsOgAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"cut",
					null,
					"AQAAAPU5AAAAAAAA9TkAAAAAAAA5AAAAICAgIEpTX1BST1BfSU5UMzJfREVGKCJGTEFHX1ZJREVPX1JBVyIsIEZMQUdfVklERU9fUkFXKSwK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9TkAAAAAAAAuOgAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					2,
					"paste",
					null,
					"AgAAAPU5AAAAAAAALjoAAAAAAAAAAAAALjoAAAAAAABnOgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9TkAAAAAAAD1OQAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"paste",
					null,
					"AgAAAEU6AAAAAAAAYDoAAAAAAAAAAAAAYDoAAAAAAABgOgAAAAAAAA4AAABGTEFHX1ZJREVPX1JBVw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARToAAAAAAABTOgAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"paste",
					null,
					"AgAAAGM6AAAAAAAAfjoAAAAAAAAAAAAAfjoAAAAAAAB+OgAAAAAAAA4AAABGTEFHX1ZJREVPX1JBVw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYzoAAAAAAABxOgAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"",
					null,
					"AQAAABg4AAAAAAAALTgAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGDgAAAAAAAAfOAAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"",
					null,
					"AQAAAGA4AAAAAAAAdTgAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYDgAAAAAAABnOAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"",
					null,
					"AQAAAKc4AAAAAAAAvDgAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApzgAAAAAAACuOAAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"",
					null,
					"AQAAAO44AAAAAAAAAzkAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7jgAAAAAAAD1OAAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"",
					null,
					"AQAAAD85AAAAAAAAVDkAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPzkAAAAAAABGOQAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"",
					null,
					"AQAAAJo5AAAAAAAArzkAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmjkAAAAAAAChOQAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"",
					null,
					"AQAAAPM5AAAAAAAACDoAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8zkAAAAAAAD6OQAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"",
					null,
					"AQAAAEM6AAAAAAAAWDoAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQzoAAAAAAABKOgAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"",
					null,
					"AQAAAIs6AAAAAAAAoDoAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAizoAAAAAAACSOgAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"",
					null,
					"AQAAAN86AAAAAAAA9DoAAAAAAAAHAAAALCBGTEFHXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3zoAAAAAAADmOgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAA07AAAAAAAADjsAAAAAAAAAAAAADjsAAAAAAAAOOwAAAAAAAA8CAAAgICAgSlNfQ1ZfQ09OU1RBTlQoLypMaWJjYW1lcmFBcHA6OiovRkxBR19TVElMTF9CR1IpLAogICAgSlNfQ1ZfQ09OU1RBTlQoLypMaWJjYW1lcmFBcHA6OiovRkxBR19TVElMTF9SR0IpLAogICAgSlNfQ1ZfQ09OU1RBTlQoLypMaWJjYW1lcmFBcHA6OiovRkxBR19TVElMTF9SQVcpLAogICAgSlNfQ1ZfQ09OU1RBTlQoLypMaWJjYW1lcmFBcHA6OiovRkxBR19TVElMTF9ET1VCTEVfQlVGRkVSKSwKICAgIEpTX0NWX0NPTlNUQU5UKC8qTGliY2FtZXJhQXBwOjoqL0ZMQUdfU1RJTExfVFJJUExFX0JVRkZFUiksCiAgICBKU19DVl9DT05TVEFOVCgvKkxpYmNhbWVyYUFwcDo6Ki9GTEFHX1NUSUxMX0JVRkZFUl9NQVNLKSwKICAgIEpTX0NWX0NPTlNUQU5UKC8qTGliY2FtZXJhQXBwOjoqL0ZMQUdfVklERU9fTk9ORSksCiAgICBKU19DVl9DT05TVEFOVCgvKkxpYmNhbWVyYUFwcDo6Ki9GTEFHX1ZJREVPX1JBVyksCiAgICBKU19DVl9DT05TVEFOVCgvKkxpYmNhbWVyYUFwcDo6Ki9GTEFHX1ZJREVPX0pQRUdfQ09MT1VSU1BBQ0UpLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHD0AAAAAAAANOwAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADjsAAAAAAAAOOwAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"cut",
					null,
					"AQAAAK4AAAAAAAAArgAAAAAAAAAVAAAAI2luY2x1ZGUgPHF1aWNranMuaD4K",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"paste",
					null,
					"AQAAAK4AAAAAAAAAwwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"paste",
					null,
					"AgAAAPc3AAAAAAAACDgAAAAAAAAAAAAACDgAAAAAAAAIOAAAAAAAABEAAABKU19QUk9QX0lOVDMyX0RFRg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9zcAAAAAAAAIOAAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"",
					null,
					"AQAAADk4AAAAAAAAPjgAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOTgAAAAAAAA7OAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"",
					null,
					"AQAAAIM4AAAAAAAAiDgAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgzgAAAAAAACFOAAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"",
					null,
					"AQAAAM04AAAAAAAA0jgAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzTgAAAAAAADPOAAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"",
					null,
					"AQAAABc5AAAAAAAAHDkAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFzkAAAAAAAAZOQAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"",
					null,
					"AQAAAHU5AAAAAAAAejkAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdTkAAAAAAAB3OQAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"",
					null,
					"AQAAANM5AAAAAAAA2DkAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0zkAAAAAAADVOQAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"",
					null,
					"AQAAAC06AAAAAAAAMjoAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALToAAAAAAAAvOgAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"",
					null,
					"AQAAAHk6AAAAAAAAfjoAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeToAAAAAAAB7OgAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"",
					null,
					"AQAAAMM6AAAAAAAAyDoAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwzoAAAAAAADFOgAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"",
					null,
					"AQAAACc7AAAAAAAALDsAAAAAAAACAAAAKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJzsAAAAAAAApOwAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAI2luY2x1ZGUgIkxDQ1YvaW5jbHVkZS9saWJjYW1lcmFfYXBwLmhwcCIK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAqAAAAAAAAAAAAAAAAAAAA"
				],
				[
					522,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAKgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAI2luY2x1ZGUgIkxDQ1YvaW5jbHVkZS9saWJjYW1lcmFfYXBwLmhwcCIK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAKgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"paste",
					null,
					"AQAAACoAAAAAAAAAPgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAA9AAAAI2luY2x1ZGUgIkxDQ1YvaW5jbHVkZS9saWJjYW1lcmFfYXBwLmhwcCIKI2luY2x1ZGUgPGxjY3YuaHBwPg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					2,
					"right_delete",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABAAAACgAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					548,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"doxy_enter",
					null,
					"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAAAA"
				],
				[
					551,
					1,
					"paste",
					null,
					"AQAAAJoAAAAAAAAA1wAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"right_delete",
					null,
					"AQAAANcAAAAAAAAA1wAAAAAAAACGAAAALyojaW5jbHVkZSA8Y2N0eXBlPgojaW5jbHVkZSA8c3RkZGVmLmg+CiNpbmNsdWRlIDxjc3RkaW50PgojaW5jbHVkZSA8YWxnb3JpdGhtPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxuZXc+CiNpbmNsdWRlIDxzdHJpbmc+Ki8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wAAAAAAAABdAQAAAAAAAAAAAAAAwGdA"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACiAwAAAAAAABEAAAAgIGJjYW1lcmFBcHA6OiogLw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQMAAAAAAACyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADgkAAAAAAAAOSQAAAAAAAAAAAAAOSQAAAAAAAA5JAAAAAAAAAsAAABleHRlcm4gIkMiIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQyQAAAAAAAA4JAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOSQAAAAAAAA5JAAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"paste",
					null,
					"AgAAAN0uAAAAAAAA7y4AAAAAAAAAAAAA7y4AAAAAAADvLgAAAAAAABAAAABMaWJjYW1lcmFBcHBEYXRh",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3S4AAAAAAADtLgAAAAAAAAAAAAAAAPC/"
				],
				[
					627,
					3,
					"left_delete",
					null,
					"AwAAAGY3AAAAAAAAZjcAAAAAAAABAAAAMGU3AAAAAAAAZTcAAAAAAAABAAAAIGQ3AAAAAAAAZDcAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZjcAAAAAAABnNwAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGQ3AAAAAAAAZTcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZDcAAAAAAABkNwAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAGU3AAAAAAAAZjcAAAAAAAAAAAAAZjcAAAAAAABnNwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZTcAAAAAAABlNwAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					7,
					"left_delete",
					null,
					"BwAAAFsoAAAAAAAAWygAAAAAAAAFAAAAbWFnaWNaKAAAAAAAAFooAAAAAAAAAQAAACBZKAAAAAAAAFkoAAAAAAAAAQAAAHRYKAAAAAAAAFgoAAAAAAAAAQAAAG5XKAAAAAAAAFcoAAAAAAAAAQAAAGlWKAAAAAAAAFYoAAAAAAAAAQAAACBVKAAAAAAAAFUoAAAAAAAAAQAAACw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWygAAAAAAABgKAAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"right_delete",
					null,
					"AQAAAKsBAAAAAAAAqwEAAAAAAAA0AAAALAogICAgICAgIGxpYmNhbWVyYV9hcHBfb3B0aW9uc19jbGFzcyA9IEpTX1VOREVGSU5FRA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wEAAAAAAACrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIk/AAAAAAAAij8AAAAAAAAAAAAAij8AAAAAAACLPwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiT8AAAAAAACJPwAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiz8AAAAAAACLPwAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					1,
					"cut",
					null,
					"AQAAAJo9AAAAAAAAmj0AAAAAAAAiAAAAb25zdHJ1Y3RvciBhbmQgY3Rvci5wcm90b3R5cGUgKi8KCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmj0AAAAAAAC8PQAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"paste",
					null,
					"AQAAAFQ9AAAAAAAAdj0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVD0AAAAAAABUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEI9AAAAAAAAQz0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQj0AAAAAAABCPQAAAAAAAAAAAAAAAAAA"
				],
				[
					746,
					1,
					"left_delete",
					null,
					"AQAAAHU9AAAAAAAAdT0AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdj0AAAAAAAB2PQAAAAAAAAAAAAAAAAAA"
				],
				[
					763,
					2,
					"left_delete",
					null,
					"AgAAAIU/AAAAAAAAhT8AAAAAAACOAAAAICAgIC8vIGxpYmNhbWVyYV9hcHBfb3B0aW9uc19jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19saWJjYW1lcmFfYXBwX29wdGlvbnNfY3RvciwgIkxpYmNhbWVyYUFwcE9wdGlvbnMiLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CoQ/AAAAAAAAhD8AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhT8AAAAAAAATQAAAAAAAAAAAAAAAAPC/"
				],
				[
					775,
					1,
					"insert",
					{
						"characters": "cv"
					},
					"AgAAABpAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAcQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGkAAAAAAAAAaQAAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"paste",
					null,
					"AQAAAFYuAAAAAAAA5y4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVi4AAAAAAABWLgAAAAAAAAAAAAAAAPC/"
				],
				[
					779,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOcuAAAAAAAA6C4AAAAAAAAAAAAA6C4AAAAAAADqLgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5y4AAAAAAADnLgAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"left_delete",
					null,
					"AgAAAFouAAAAAAAAWi4AAAAAAAACAAAAfQrmLgAAAAAAAOYuAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWi4AAAAAAABcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"insert",
					{
						"characters": "tryx"
					},
					"BAAAABgqAAAAAAAAGSoAAAAAAAAAAAAAGSoAAAAAAAAaKgAAAAAAAAAAAAAaKgAAAAAAABsqAAAAAAAAAAAAABsqAAAAAAAAHCoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGCoAAAAAAAAYKgAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwqAAAAAAAAHSoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHCoAAAAAAAAcKgAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					2,
					"left_delete",
					null,
					"AgAAABwqAAAAAAAAHCoAAAAAAAABAAAAIBsqAAAAAAAAGyoAAAAAAAABAAAAeA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHSoAAAAAAAAdKgAAAAAAAAAAAAAAAPC/"
				],
				[
					792,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAABsqAAAAAAAAHCoAAAAAAAAAAAAAHCoAAAAAAAAdKgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGyoAAAAAAAAbKgAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHSoAAAAAAAAdKgAAAAAAAAAAAAAAAPC/"
				],
				[
					802,
					2,
					"left_delete",
					null,
					"AgAAAC9BAAAAAAAAL0EAAAAAAAABAAAAdi5BAAAAAAAALkEAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMEEAAAAAAAAwQQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "LCCV/include/lccv.hpp",
			"settings":
			{
				"buffer_size": 896,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "LCCV/src/libcamera_app.cpp",
			"settings":
			{
				"buffer_size": 16822,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"edut",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Bookmarks: Clear All"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Package Control Settings"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 158.0,
		"history":
		[
			"sublime.log_commands(True)",
			"Show"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/qjs-opencv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/qjs-opencv/js_size.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/example/takephoto.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/include/libcamera_app.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/include/libcamera_app_options.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/CCache.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/init_module.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_libcamera_app.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rotated_rect.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/libcamera.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/src/lccv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rotated_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rasp_cam.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/libcamera-opencv/CVCam.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/libcamera-opencv/CVCam.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/opt/opencv-4.5.5-aarch64/include/opencv4/opencv2/videoio.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/LCCV/README.md",
		"/home/roman/Projects/plot-cv/qjs-opencv/libcamera-opencv/mapped_framebuffer.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_contours.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/trace_skeleton.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/highgui.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/utility.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_imgproc.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/opencv/3rdparty/include/opencl/1.2/CL/cl.hpp",
		"/opt/opencv-4.5.5-x86_64/include/opencv4/opencv2/core/mat.hpp",
		"/opt/opencv-4.5.5-x86_64/include/opencv4/opencv2/core/matx.hpp",
		"/opt/opencv-4.5.5-x86_64/include/opencv4/opencv2/core/base.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_utility.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/point_iterator.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/pixel_neighborhood.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/include/lsd_opencv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/src/lsd_opencv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/src/lsd_wrap.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/README.md.backup",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/janos/Sources/plot-cv/qjs-opencv/js_imgproc.cpp",
		"/home/janos/Sources/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/janos/Sources/plot-cv/qjs-opencv/js_line.hpp",
		"/home/janos/Sources/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_video_capture.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_keypoint.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_size.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_iterator.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_slice_iterator.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_keypoint.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_segment_detector.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/build-opencv.sh",
		"/home/roman/Sources/opencv/cfg.sh",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/CheckFlags.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Sources/opencv/cfg.s",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvUtils.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/contour.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/cv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/keypoint.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/scripts/proto.sh",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_highgui.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/palette.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/include/lsd_wrap.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/pngpp/convert_color_space.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_rotated_rect.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_linesegmentdetector.jpg",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_png.js",
		"/home/roman/Projects/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_alloc.hpp",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Made of Code.tmTheme",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_video_writer.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_slice_iterator.cpp",
		"/home/roman/Projects/quickjs/quickjs.h",
		"/home/roman/Projects/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/qjs-opencv/js_imgproc.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/image-021.png",
		"/home/roman/Projects/plot-cv/qjs-opencv/image-022.png",
		"/home/roman/Projects/qjs-opencv/js_highgui.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/image-014.png",
		"/home/roman/Projects/plot-cv/qjs-opencv/image-005.png",
		"/home/roman/Projects/plot-cv/qjs-opencv/README.md",
		"/home/roman/Projects/plot-cv/qjs-opencv/qjs-opencv.cbp",
		"/home/roman/Projects/plot-cv/qjs-opencv/psimpl.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/png_write.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/types.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/gif_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.hpp",
		"/home/roman/Projects/qjs-opencv/js_line.cpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/matx.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/gifenc/gifenc.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.cpp",
		"/home/roman/Projects/qjs-opencv/pngpp/test/generate_palette.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/pngpp/image.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_fastlinedetector.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/pngpp/image_info.hpp"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/qjs-opencv,-*/opencv*,*.hpp,*.cpp",
			"/home/roman/Projects/plot-cv/qjs-opencv,*.hpp,*.cpp",
			"/home/roman/Projects/qjs-opencv,*.hpp,*.cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"try {",
			"libcamera_app_options_class",
			"0",
			"NULL",
			"\\),",
			"),",
			", FLAG_",
			"LibcameraApp",
			"LibcameraApp::",
			"this_val",
			"cam_open",
			"FLAG_",
			"OpenCamera",
			"_finalizer",
			"js_video_capture_init",
			"class.*Video",
			"VideoCapture",
			"Simple",
			"^option",
			"^op",
			"QUICKJS_LIB",
			"add_lib",
			"getScreenResolution",
			"js_contour_adjacent",
			"js_point_differe",
			"pixel_find_nonnull",
			"bool\\(uchar\\)",
			"point_inside",
			"\\.at",
			"mat.at",
			", r, mat, taken, index, pred",
			"pixel_neighborhood",
			"P = cv::Point",
			"const P",
			"pred =",
			"point_inside\\([^)]*\\) && ",
			"outImage",
			"baselineVal",
			"class js_array",
			"0xff",
			"pixel_find_nonnull",
			"taken",
			"CV_32",
			"js_draw_static_funcs",
			"js_draw_global_funcs",
			"\"draw",
			"pt\\.",
			"^operator",
			"js_contour_rect",
			"js_contour_tosource",
			"0x100",
			"js_contour_tostring",
			"js_contour_tosource",
			"cv::Point",
			"static_cast<JSContourData<double>\\*>\\(JS_GetOpaque\\(this_val, js_contour_class_id\\)\\)",
			"static_cast<JSContourData<double>*>(JS_GetOpaque(this_val, js_contour_class_id))",
			"js_global_get",
			"\\), result",
			"cv::Point\\(",
			", pred\\)",
			"INTERSE",
			"js_value_from",
			"js_value_to",
			"METHOD_INTERSECT",
			"intersect",
			"::to_array",
			"class.*Vec",
			"copy_sequence",
			"JSInputArray",
			"include_dir",
			"pixel_neighborhood",
			"BGR2RGBA",
			"\"cols",
			"\"position",
			"getWindowImageRect",
			"\"moveWindow",
			"EXPR_SH[RL]",
			"calcHist",
			"\"pow\"",
			"DIV",
			"EXPR_DIV",
			"EXPR_MUL",
			"^to_string",
			"to_string",
			"operator<<",
			"\"polyline",
			"js_mat_set",
			"SET:",
			"set",
			"FUNC_TOARRAY",
			"toArray",
			"PROP_POS:",
			"\"transform",
			"js_keypoint_init",
			"js_size_data2\\(",
			" FUNC_",
			"\\\\!",
			"^js_rect_set",
			"line_iterator",
			"\\*.cpp",
			"PROP_SUBMATRIX:",
			"\"ubmatrix",
			"js_rect_new",
			"\"clone\"",
			"js_color_new",
			"OTHER_RGB",
			"const cv::([A-Za-z]*)_<([TU])>\\&",
			"const cv::Point_<([TU])>\\&",
			"const cv::Point_<T>\\&",
			"js_point_argument",
			"^js_point_arith",
			"_MOD:",
			"METHOD_MAG",
			"\"round",
			"_NORM",
			"POINT_METHOD_NORM",
			"POINT_METHOD_NORM:",
			"\"diff",
			"INSTALL_RPATH",
			"qjs-opencv",
			"install\\(",
			"^\\s*include\\(",
			"^\\s*include",
			"class_name",
			"@return",
			"PROP_OR",
			"'boxes",
			"args\\[0\\]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			", 0),",
			", LibcameraApp::FLAG_",
			"/*LibcameraApp::*/",
			"LibcameraApp::FLAG_",
			"bool(unsigned)",
			", mat, taken, index, pred, r",
			"T",
			"const cv::Point_<T>",
			"",
			"P",
			"js_contour_data(this_val)",
			"js_contour_data2(ctx, this_val)",
			", result",
			"",
			")",
			" METHOD_",
			"!",
			"cv::\\1_<\\2>",
			"cv::Point_<\\1>",
			"cv::Point_<T>",
			"qjs-opencv-static",
			"@returns",
			"fontFile",
			"PROP_AREA",
			"PROP_EMPTY",
			"len",
			"dist",
			"\\1//printf",
			"contours_array",
			"hier_array",
			"hier_mat",
			"callback_hier",
			"array_hier",
			"{ break; }",
			", JS_PROP_ENUMERABLE),",
			"cv::Point_<U>",
			"NUM_COLORS",
			"",
			"PNGPalette",
			"IndexedPNG",
			"C",
			"delays_and_mats",
			"png_write",
			"",
			", ",
			">normal",
			",",
			"js_imgproc_filter",
			"",
			"JSRotatedRectData",
			"js_imgproc_misc",
			"js_to_scalar(color)",
			"cv::ximgproc::FastLineDetector",
			"_",
			"qjs-opencv",
			"qjs-opencv-a",
			"quickjs-opencv",
			"range_view<T>",
			"CMAKE_CXX_FLAGS",
			"ret = ",
			"js_is_array_like(ctx, ",
			"JS_IsBool",
			"js_value_to(ctx, ",
			"extern \"C\""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1852,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": "/home/roman/Projects/plot-cv/qjs-opencv/imgproc.js",
							"function_name_status_row": 9,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									27,
									29
								],
								[
									68,
									81
								],
								[
									170,
									176
								],
								[
									273,
									287
								],
								[
									384,
									398
								],
								[
									493,
									505
								],
								[
									601,
									614
								],
								[
									711,
									725
								],
								[
									815,
									822
								],
								[
									926,
									947
								],
								[
									1040,
									1050
								],
								[
									1147,
									1161
								],
								[
									1255,
									1266
								],
								[
									1366,
									1383
								],
								[
									1480,
									1494
								],
								[
									1591,
									1605
								],
								[
									1706,
									1724
								],
								[
									1821,
									1835
								],
								[
									1928,
									1938
								],
								[
									2029,
									2037
								],
								[
									2127,
									2134
								],
								[
									2231,
									2245
								],
								[
									2340,
									2352
								],
								[
									2452,
									2469
								],
								[
									2571,
									2590
								],
								[
									2697,
									2721
								],
								[
									2820,
									2836
								],
								[
									2936,
									2953
								],
								[
									3050,
									3064
								],
								[
									3161,
									3175
								],
								[
									3270,
									3282
								],
								[
									3384,
									3403
								],
								[
									3504,
									3522
								],
								[
									3625,
									3645
								],
								[
									3749,
									3770
								],
								[
									3869,
									3885
								],
								[
									3987,
									4006
								],
								[
									4102,
									4115
								],
								[
									4217,
									4236
								],
								[
									4330,
									4341
								],
								[
									4433,
									4442
								],
								[
									4535,
									4545
								],
								[
									4639,
									4650
								],
								[
									4748,
									4763
								],
								[
									4855,
									4864
								],
								[
									4960,
									4973
								],
								[
									5076,
									5096
								],
								[
									5204,
									5229
								],
								[
									5327,
									5342
								],
								[
									5446,
									5467
								],
								[
									5572,
									5594
								],
								[
									5700,
									5723
								],
								[
									5819,
									5832
								],
								[
									5925,
									5935
								],
								[
									6025,
									6032
								],
								[
									6123,
									6131
								],
								[
									6226,
									6238
								],
								[
									6338,
									6355
								],
								[
									6449,
									6460
								],
								[
									6560,
									6577
								],
								[
									6666,
									6672
								],
								[
									6766,
									6777
								],
								[
									6874,
									6888
								],
								[
									6979,
									6987
								],
								[
									7077,
									7084
								],
								[
									7177,
									7187
								],
								[
									7284,
									7298
								],
								[
									7398,
									7415
								],
								[
									7514,
									7530
								],
								[
									7632,
									7651
								],
								[
									7757,
									7780
								],
								[
									7874,
									7885
								],
								[
									7980,
									7992
								],
								[
									8105,
									8135
								],
								[
									8232,
									8246
								],
								[
									8338,
									8347
								],
								[
									8453,
									8476
								],
								[
									8566,
									8573
								],
								[
									8664,
									8672
								],
								[
									8768,
									8781
								],
								[
									8871,
									8878
								],
								[
									8978,
									8995
								],
								[
									9092,
									9106
								],
								[
									9203,
									9217
								],
								[
									9311,
									9322
								],
								[
									9416,
									9427
								],
								[
									9531,
									9552
								],
								[
									9665,
									9695
								],
								[
									9791,
									9804
								],
								[
									9899,
									9911
								],
								[
									10012,
									10030
								],
								[
									10144,
									10175
								],
								[
									10286,
									10314
								],
								[
									10409,
									10421
								],
								[
									10519,
									10534
								],
								[
									10635,
									10653
								],
								[
									10745,
									10754
								],
								[
									10848,
									10859
								],
								[
									10965,
									10988
								],
								[
									11088,
									11105
								],
								[
									11201,
									11214
								],
								[
									11310,
									11323
								],
								[
									11426,
									11446
								],
								[
									11551,
									11573
								],
								[
									11686,
									11716
								]
							],
							"symlist":
							[
								"  cv",
								"  constructor()",
								"  blur()",
								"  boundingRect()",
								"GaussianBlur()",
								"HoughLines()",
								"HoughLinesP()",
								"HoughCircles()",
								"Canny()",
								"  goodFeaturesToTrack()",
								"  cvtColor()",
								"  equalizeHist()",
								"  threshold()",
								"  bilateralFilter()",
								"  findContours()",
								"  drawContours()",
								"  pointPolygonTest()",
								"  cornerHarris()",
								"  calcHist()",
								"  dilate()",
								"  erode()",
								"  morphologyEx()",
								"  medianBlur()",
								"  skeletonization()",
								"  pixelNeighborhood()",
								"  pixelNeighborhoodCross()",
								"  pixelFindValue()",
								"  paletteGenerate()",
								"  paletteApply()",
								"  paletteMatch()",
								"  accumulate()",
								"  accumulateProduct()",
								"  accumulateSquare()",
								"  accumulateWeighted()",
								"  createHanningWindow()",
								"  phaseCorrelate()",
								"  adaptiveThreshold()",
								"  blendLinear()",
								"  distanceTransform()",
								"  floodFill()",
								"  grabCut()",
								"  integral()",
								"  watershed()",
								"  applyColorMap()",
								"  moments()",
								"  convertMaps()",
								"  getAffineTransform()",
								"  getPerspectiveTransform()",
								"  getRectSubPix()",
								"  getRotationMatrix2D()",
								"  getRotationMatrix2D_()",
								"  invertAffineTransform()",
								"  linearPolar()",
								"  logPolar()",
								"  remap()",
								"  resize()",
								"  warpAffine()",
								"  warpPerspective()",
								"  warpPolar()",
								"  bilateralFilter()",
								"  blur()",
								"  boxFilter()",
								"  buildPyramid()",
								"  dilate()",
								"  erode()",
								"  filter2D()",
								"GaussianBlur()",
								"  getDerivKernels()",
								"  getGaborKernel()",
								"  getGaussianKernel()",
								"  getStructuringElement()",
								"Laplacian()",
								"  medianBlur()",
								"  morphologyDefaultBorderValue()",
								"  morphologyEx()",
								"  pyrDown()",
								"  pyrMeanShiftFiltering()",
								"  pyrUp()",
								"Scharr()",
								"  sepFilter2D()",
								"Sobel()",
								"  spatialGradient()",
								"  sqrBoxFilter()",
								"  approxPolyDP()",
								"  arcLength()",
								"  boxPoints()",
								"  connectedComponents()",
								"  connectedComponentsWithStats()",
								"  contourArea()",
								"  convexHull()",
								"  convexityDefects()",
								"  createGeneralizedHoughBallard()",
								"  createGeneralizedHoughGuil()",
								"  fitEllipse()",
								"  fitEllipseAMS()",
								"  fitEllipseDirect()",
								"  fitLine()",
								"HuMoments()",
								"  intersectConvexConvex()",
								"  isContourConvex()",
								"  matchShapes()",
								"  minAreaRect()",
								"  minEnclosingCircle()",
								"  minEnclosingTriangle()",
								"  rotatedRectangleIntersection()"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658271088.2,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1034.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "js_raspi_cam.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6053,
						"regions":
						{
						},
						"selection":
						[
							[
								6053,
								6053
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 219,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658751678.24,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3658.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js_video_capture.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7899,
						"regions":
						{
						},
						"selection":
						[
							[
								2741,
								2741
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 97,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658751676.89,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1843.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js_imgproc.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67056,
						"regions":
						{
						},
						"selection":
						[
							[
								57045,
								57244
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1910,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658751182.18,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35980.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7004,
						"regions":
						{
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										83,
										90
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										57,
										57
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								5364,
								5364
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 177,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658751683.09,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3363.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "imgproc.js",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 11722,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 46,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658821010.28,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "build-opencv.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1869,
						"regions":
						{
						},
						"selection":
						[
							[
								1250,
								1250
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 46,
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658752259.95,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 915.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "rect.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2501,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658752982.33,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "utility.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1219,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658752995.43,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 855.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "js_mat.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 905,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658752260.75,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js_umat.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4317,
						"regions":
						{
						},
						"selection":
						[
							[
								1038,
								1052
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 37,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658681988.22,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "mat.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6245,
						"regions":
						{
						},
						"selection":
						[
							[
								211,
								205
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658752976.0,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "js_libcamera_app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17397,
						"regions":
						{
						},
						"selection":
						[
							[
								16686,
								16686
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 540,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658682010.06,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9855.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "LCCV/include/lccv.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 896,
						"regions":
						{
						},
						"selection":
						[
							[
								440,
								453
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 27,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1658683593.03,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "LCCV/src/libcamera_app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16822,
						"regions":
						{
						},
						"selection":
						[
							[
								345,
								345
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 12,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1658682072.08,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.702812434123,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "qjs-opencv.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"js_imgproc",
				"js_imgproc.cpp"
			],
			[
				"video_cap",
				"js_video_capture.cpp"
			],
			[
				"js_mat",
				"js_mat.cpp"
			],
			[
				"js_umat",
				"js_umat.hpp"
			],
			[
				"init_mo",
				"init_module.cpp"
			],
			[
				"js_array",
				"js_array.hpp"
			],
			[
				"line.hpp",
				"line.hpp"
			],
			[
				"lsd_open",
				"lsd/include/lsd_opencv.hpp"
			],
			[
				"imgpr",
				"js_imgproc.cpp"
			],
			[
				"js_cv",
				"js_cv.cpp"
			],
			[
				"js_rect",
				"js_rect.cpp"
			],
			[
				"js_cv.",
				"js_cv.cpp"
			],
			[
				"build-op",
				"build-opencv.sh"
			],
			[
				"contour.",
				"contour.js"
			],
			[
				"js_rec",
				"js_rect.cpp"
			],
			[
				"js_con",
				"js_contour.cpp"
			],
			[
				"js_size.",
				"js_size.hpp"
			],
			[
				"js_size.hpp",
				"js_size.hpp"
			],
			[
				"test_Gif",
				"tests/test_gif.js"
			],
			[
				"js_Cv",
				"js_cv.cpp"
			],
			[
				"test_",
				"lsd/tests/perf_test.cpp"
			],
			[
				"",
				"js_array.hpp"
			],
			[
				"js_clahe",
				"js_clahe.cpp"
			],
			[
				"jsbin",
				"jsbindings.hpp"
			],
			[
				"js_rot",
				"js_rotated_rect.hpp"
			],
			[
				"js_im",
				"js_imgproc.cpp"
			],
			[
				"js_img",
				"js_imgproc.cpp"
			],
			[
				"test_ro",
				"tests/test_rotated_rect.js"
			],
			[
				"js_high",
				"js_highgui.cpp"
			],
			[
				"umat.h",
				"js_umat.hpp"
			],
			[
				"js_type",
				"js_typed_array.hpp"
			],
			[
				"jsbind",
				"jsbindings.hpp"
			],
			[
				"util.hpp",
				"util.hpp"
			],
			[
				"js_rc",
				"js_rect.cpp"
			],
			[
				"js_lin",
				"js_line.cpp"
			],
			[
				"video",
				"js_video_capture.cpp"
			],
			[
				"js-bin",
				"cmake/js-bindings.cmake"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"wasi",
				"cmake/wasi.toolchain.cmake"
			],
			[
				"test-vid",
				"plot-cv/test-video.js"
			],
			[
				"cvPipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param",
				"plot-cv/param.js"
			],
			[
				"test-oencv",
				"plot-cv/test-opencv.js"
			],
			[
				"pixel_",
				"plot-cv/src/pixel_neighborhood.hpp"
			],
			[
				"test-opencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_typed",
				"plot-cv/src/js_typed_array.hpp"
			],
			[
				"opencv.cmake",
				"plot-cv/cmake/opencv.cmake"
			],
			[
				"test-vide",
				"plot-cv/test-video.js"
			],
			[
				"test-op",
				"plot-cv/test-opencv.js"
			],
			[
				"cvHigh",
				"plot-cv/cvHighGUI.js"
			],
			[
				"js.cpp",
				"plot-cv/src/js.cpp"
			],
			[
				"js_size",
				"plot-cv/src/js_size.hpp"
			],
			[
				"js_ma",
				"plot-cv/src/js_mat.cpp"
			],
			[
				"js_draw",
				"plot-cv/src/js_draw.cpp"
			],
			[
				"quickjs.h",
				"plot-cv/quickjs/quickjs.h"
			],
			[
				"test-open",
				"plot-cv/test-opencv.js"
			],
			[
				"js_cv.cp",
				"plot-cv/src/js_cv.cpp"
			],
			[
				"util.js",
				"plot-cv/lib/util.js"
			],
			[
				"cvpipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param.js",
				"plot-cv/param.js"
			],
			[
				"test-video",
				"plot-cv/test-video.js"
			],
			[
				"test_w",
				"plot-cv/test_worker_module.js"
			],
			[
				"test-wo",
				"plot-cv/test-worker.js"
			],
			[
				"cvPip",
				"plot-cv/cvPipeline.js"
			],
			[
				"worker",
				"plot-cv/worker.js"
			],
			[
				"worker.js",
				"plot-cv/worker.js"
			],
			[
				"test-work",
				"plot-cv/test-worker.js"
			],
			[
				"test-uma",
				"plot-cv/test-umat.js"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"quickjs.c",
				"plot-cv/quickjs/quickjs.c"
			],
			[
				"filesys",
				"plot-cv/lib/filesystem.js"
			],
			[
				"console",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"util",
				"plot-cv/lib/util.js"
			],
			[
				"bjson",
				"plot-cv/bjson.js"
			],
			[
				"ast-shel",
				"plot-cv/ast-shell.js"
			],
			[
				"clang-ast",
				"plot-cv/clang-ast.js"
			],
			[
				"clang-list",
				"plot-cv/clang-list.js"
			],
			[
				"test-bjs",
				"plot-cv/test-bjson.js"
			],
			[
				"repl.js",
				"plot-cv/repl.js"
			],
			[
				"clang-li",
				"plot-cv/clang-list.js"
			],
			[
				"clang-",
				"plot-cv/clang-ast.js"
			],
			[
				"ast-shell",
				"plot-cv/ast-shell.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"repl.j",
				"plot-cv/repl.js"
			],
			[
				"test-ecmascript2.js",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"test-ecmascript.js",
				"plot-cv/test-ecmascript.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"parser2",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"test-ecma",
				"plot-cv/test-ecmascript2.es"
			],
			[
				"test-parse",
				"plot-cv/test-parse.js"
			],
			[
				"grammar.js",
				"plot-cv/lib/parse/grammar.js"
			],
			[
				"terminal",
				"plot-cv/terminal.js"
			],
			[
				"test_lex",
				"plot-cv/quickjs/modules/tests/test_lexer.js"
			],
			[
				"test-ec",
				"plot-cv/test-ecmascript.js"
			],
			[
				"parser.js",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"printer.",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"estree",
				"plot-cv/lib/ecmascript/estree.js"
			],
			[
				"parser2.j",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"tmp.js",
				"plot-cv/tmp.js"
			],
			[
				"test-util",
				"plot-cv/test-util.js"
			],
			[
				"printer",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"parser",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"utils.h",
				"plot-cv/utils.h"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"quickjs-lex",
				"plot-cv/quickjs/modules/quickjs-lexer.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"quickjs-in",
				"plot-cv/quickjs/modules/quickjs-internal.h"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 277.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
