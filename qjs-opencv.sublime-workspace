{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"QUICKJS_MO",
				"QUICKJS_MODULE_CFLAGS"
			],
			[
				"check_cxx",
				"check_cxx_standard_flag"
			],
			[
				"check_func",
				"check_function_exists"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JSIn",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"cons",
				"console"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  js_size_fit\n  js_size_fit\n  js_size_ctor\n  js_size_data\n  js_size_get\n  js_size_new\n  js_size_wrap\n  js_size_set\n  js_size_to_string\n  js_size_to_source\n  js_size_inspect\n  js_size_funcs\n  js_size_add\n  js_size_sub\n  js_size_mul\n  js_size_div\n  js_size_symbol_iterator\n  js_size_from\n  js_array_to<double, 2>\n  js_size_finalizer\nJS_CGETSET_ENUMERABLE_DEF\nJS_CGETSET_ENUMERABLE_DEF\nJS_CGETSET_ENUMERABLE_DEF\nJS_CGETSET_ENUMERABLE_DEF\nJS_CGETSET_ENUMERABLE_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_MAGIC_DEF\nJS_CFUNC_DEF\nJS_CFUNC_DEF\nJS_CFUNC_DEF\nJS_CFUNC_DEF\nJS_CFUNC_DEF\nJS_CFUNC_DEF\nJS_ALIAS_DEF\nJS_CFUNC_DEF\nJS_PROP_STRING_DEF\nJS_CFUNC_DEF\n  js_size_init\n  js_size_export\n  js_size_constructor\nJS_INIT_MODULE\nJS_INIT_MODULE\nJS_INIT_MODULE",
			"settings":
			{
				"buffer_size": 847,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					334,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_umat.cpp",
						"symkeys":
						[
							[
								978,
								995
							],
							[
								1105,
								1123
							],
							[
								1223,
								1235
							],
							[
								1384,
								1397
							],
							[
								1719,
								1737
							],
							[
								2133,
								2145
							],
							[
								2574,
								2592
							],
							[
								3097,
								3109
							],
							[
								4122,
								4133
							],
							[
								4764,
								4778
							],
							[
								5280,
								5292
							],
							[
								5496,
								5513
							],
							[
								5738,
								5751
							],
							[
								7573,
								7585
							],
							[
								8457,
								8468
							],
							[
								8684,
								8695
							],
							[
								10070,
								10084
							],
							[
								10299,
								10309
							],
							[
								11105,
								11116
							],
							[
								11824,
								11837
							],
							[
								12080,
								12095
							],
							[
								12194,
								12210
							],
							[
								12307,
								12319
							],
							[
								12515,
								12533
							],
							[
								12995,
								13013
							],
							[
								13489,
								13507
							],
							[
								14188,
								14206
							],
							[
								14545,
								14554
							],
							[
								14632,
								14646
							],
							[
								15222,
								15239
							],
							[
								16246,
								16262
							],
							[
								17946,
								17961
							],
							[
								19846,
								19864
							],
							[
								20392,
								20407
							],
							[
								20932,
								20947
							],
							[
								21964,
								21978
							],
							[
								22417,
								22429
							],
							[
								22990,
								23010
							],
							[
								23910,
								23924
							],
							[
								24382,
								24395
							],
							[
								25341,
								25353
							],
							[
								26035,
								26055
							],
							[
								26105,
								26125
							],
							[
								26175,
								26195
							],
							[
								26253,
								26273
							],
							[
								26323,
								26343
							],
							[
								26395,
								26415
							],
							[
								26467,
								26487
							],
							[
								26539,
								26559
							],
							[
								26609,
								26629
							],
							[
								26691,
								26711
							],
							[
								26771,
								26791
							],
							[
								26841,
								26861
							],
							[
								26919,
								26939
							],
							[
								26999,
								27013
							],
							[
								27051,
								27065
							],
							[
								27101,
								27119
							],
							[
								27162,
								27180
							],
							[
								27223,
								27241
							],
							[
								27295,
								27313
							],
							[
								27367,
								27385
							],
							[
								27432,
								27450
							],
							[
								27493,
								27511
							],
							[
								27562,
								27580
							],
							[
								27623,
								27641
							],
							[
								27688,
								27706
							],
							[
								27753,
								27771
							],
							[
								27818,
								27836
							],
							[
								27893,
								27911
							],
							[
								27945,
								27963
							],
							[
								27997,
								28009
							],
							[
								28048,
								28060
							],
							[
								28097,
								28109
							],
							[
								28136,
								28148
							],
							[
								28177,
								28189
							],
							[
								28223,
								28235
							],
							[
								28277,
								28289
							],
							[
								28325,
								28337
							],
							[
								28374,
								28386
							],
							[
								28421,
								28433
							],
							[
								28476,
								28494
							],
							[
								28612,
								28630
							],
							[
								28673,
								28691
							],
							[
								28733,
								28750
							],
							[
								28760,
								28771
							],
							[
								28812,
								28824
							],
							[
								29834,
								29848
							],
							[
								29960,
								29974
							],
							[
								30012,
								30026
							],
							[
								30079,
								30093
							]
						],
						"symlist":
						[
							"js_umat_free_func",
							"JSUMatIteratorData",
							"js_umat_data",
							"js_umat_sizes",
							"js_umat_dimensions",
							"js_umat_data",
							"js_umat_print_data",
							"js_umat_dump",
							"js_umat_new",
							"js_umat_params",
							"js_umat_ctor",
							"js_umat_finalizer",
							"js_umat_funcs",
							"js_umat_init",
							"js_umat_get",
							"js_umat_get",
							"js_umat_get_wh",
							"js_umat_at",
							"js_umat_set",
							"mat_at<float>",
							"mat_at<uint8_t>",
							"mat_at<uint16_t>",
							"mat_at<uint>",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_set_vector",
							"mat_at<T>",
							"js_umat_set_to",
							"js_umat_get_props",
							"js_umat_tostring",
							"js_umat_inspect",
							"js_umat_convert_to",
							"js_umat_copy_to",
							"js_umat_reshape",
							"js_umat_getmat",
							"js_umat_fill",
							"js_umat_class_create",
							"js_umat_buffer",
							"js_umat_array",
							"js_umat_call",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_INT32_DEF",
							"CV_MAKETYPE",
							"js_umat_init",
							"js_umat_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					335,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_umat.cpp",
						"symkeys":
						[
							[
								978,
								995
							],
							[
								1105,
								1123
							],
							[
								1223,
								1235
							],
							[
								1384,
								1397
							],
							[
								1719,
								1737
							],
							[
								2133,
								2145
							],
							[
								2574,
								2592
							],
							[
								3097,
								3109
							],
							[
								4122,
								4133
							],
							[
								4764,
								4778
							],
							[
								5280,
								5292
							],
							[
								5496,
								5513
							],
							[
								5738,
								5751
							],
							[
								7573,
								7585
							],
							[
								8457,
								8468
							],
							[
								8684,
								8695
							],
							[
								10070,
								10084
							],
							[
								10299,
								10309
							],
							[
								11105,
								11116
							],
							[
								11824,
								11837
							],
							[
								12080,
								12095
							],
							[
								12194,
								12210
							],
							[
								12307,
								12319
							],
							[
								12515,
								12533
							],
							[
								12995,
								13013
							],
							[
								13489,
								13507
							],
							[
								14188,
								14206
							],
							[
								14545,
								14554
							],
							[
								14632,
								14646
							],
							[
								15222,
								15239
							],
							[
								16246,
								16262
							],
							[
								17946,
								17961
							],
							[
								19852,
								19870
							],
							[
								20398,
								20413
							],
							[
								20938,
								20953
							],
							[
								21970,
								21984
							],
							[
								22423,
								22435
							],
							[
								22996,
								23016
							],
							[
								23916,
								23930
							],
							[
								24388,
								24401
							],
							[
								25347,
								25359
							],
							[
								26041,
								26061
							],
							[
								26111,
								26131
							],
							[
								26181,
								26201
							],
							[
								26259,
								26279
							],
							[
								26329,
								26349
							],
							[
								26401,
								26421
							],
							[
								26473,
								26493
							],
							[
								26545,
								26565
							],
							[
								26615,
								26635
							],
							[
								26697,
								26717
							],
							[
								26777,
								26797
							],
							[
								26847,
								26867
							],
							[
								26925,
								26945
							],
							[
								27005,
								27019
							],
							[
								27057,
								27071
							],
							[
								27107,
								27125
							],
							[
								27168,
								27186
							],
							[
								27229,
								27247
							],
							[
								27301,
								27319
							],
							[
								27373,
								27391
							],
							[
								27438,
								27456
							],
							[
								27499,
								27517
							],
							[
								27568,
								27586
							],
							[
								27629,
								27647
							],
							[
								27694,
								27712
							],
							[
								27759,
								27777
							],
							[
								27824,
								27842
							],
							[
								27899,
								27917
							],
							[
								27951,
								27969
							],
							[
								28003,
								28015
							],
							[
								28054,
								28066
							],
							[
								28103,
								28115
							],
							[
								28142,
								28154
							],
							[
								28183,
								28195
							],
							[
								28229,
								28241
							],
							[
								28283,
								28295
							],
							[
								28331,
								28343
							],
							[
								28380,
								28392
							],
							[
								28427,
								28439
							],
							[
								28482,
								28500
							],
							[
								28618,
								28636
							],
							[
								28679,
								28697
							],
							[
								28739,
								28756
							],
							[
								28766,
								28777
							],
							[
								28818,
								28830
							],
							[
								29840,
								29854
							],
							[
								29966,
								29980
							],
							[
								30018,
								30032
							],
							[
								30085,
								30099
							]
						],
						"symlist":
						[
							"js_umat_free_func",
							"JSUMatIteratorData",
							"js_umat_data",
							"js_umat_sizes",
							"js_umat_dimensions",
							"js_umat_data",
							"js_umat_print_data",
							"js_umat_dump",
							"js_umat_new",
							"js_umat_params",
							"js_umat_ctor",
							"js_umat_finalizer",
							"js_umat_funcs",
							"js_umat_init",
							"js_umat_get",
							"js_umat_get",
							"js_umat_get_wh",
							"js_umat_at",
							"js_umat_set",
							"mat_at<float>",
							"mat_at<uint8_t>",
							"mat_at<uint16_t>",
							"mat_at<uint>",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_set_vector",
							"mat_at<T>",
							"js_umat_set_to",
							"js_umat_get_props",
							"js_umat_tostring",
							"js_umat_inspect",
							"js_umat_convert_to",
							"js_umat_copy_to",
							"js_umat_reshape",
							"js_umat_getmat",
							"js_umat_fill",
							"js_umat_class_create",
							"js_umat_buffer",
							"js_umat_array",
							"js_umat_call",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_INT32_DEF",
							"CV_MAKETYPE",
							"js_umat_init",
							"js_umat_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAjBgAAICBqc191bWF0X2ZyZWVfZnVuYwpKU1VNYXRJdGVyYXRvckRhdGEKICBqc191bWF0X2RhdGEKICBqc191bWF0X3NpemVzCiAganNfdW1hdF9kaW1lbnNpb25zCiAganNfdW1hdF9kYXRhCiAganNfdW1hdF9wcmludF9kYXRhCiAganNfdW1hdF9kdW1wCiAganNfdW1hdF9uZXcKICBqc191bWF0X3BhcmFtcwogIGpzX3VtYXRfY3RvcgogIGpzX3VtYXRfZmluYWxpemVyCiAganNfdW1hdF9mdW5jcwogIGpzX3VtYXRfaW5pdAogIGpzX3VtYXRfZ2V0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldF93aAogIGpzX3VtYXRfYXQKICBqc191bWF0X3NldAogIG1hdF9hdDxmbG9hdD4KICBtYXRfYXQ8dWludDhfdD4KICBtYXRfYXQ8dWludDE2X3Q+CiAgbWF0X2F0PHVpbnQ+CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF9zZXRfdmVjdG9yCiAgbWF0X2F0PFQ+CiAganNfdW1hdF9zZXRfdG8KICBqc191bWF0X2dldF9wcm9wcwogIGpzX3VtYXRfdG9zdHJpbmcKICBqc191bWF0X2luc3BlY3QKICBqc191bWF0X2NvbnZlcnRfdG8KICBqc191bWF0X2NvcHlfdG8KICBqc191bWF0X3Jlc2hhcGUKICBqc191bWF0X2dldG1hdAogIGpzX3VtYXRfZmlsbAogIGpzX3VtYXRfY2xhc3NfY3JlYXRlCiAganNfdW1hdF9idWZmZXIKICBqc191bWF0X2FycmF5CiAganNfdW1hdF9jYWxsCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfSU5UMzJfREVGCkNWX01BS0VUWVBFCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAACMGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjBgAAICBqc191bWF0X2ZyZWVfZnVuYwpKU1VNYXRJdGVyYXRvckRhdGEKICBqc191bWF0X2RhdGEKICBqc191bWF0X3NpemVzCiAganNfdW1hdF9kaW1lbnNpb25zCiAganNfdW1hdF9kYXRhCiAganNfdW1hdF9wcmludF9kYXRhCiAganNfdW1hdF9kdW1wCiAganNfdW1hdF9uZXcKICBqc191bWF0X3BhcmFtcwogIGpzX3VtYXRfY3RvcgogIGpzX3VtYXRfZmluYWxpemVyCiAganNfdW1hdF9mdW5jcwogIGpzX3VtYXRfaW5pdAogIGpzX3VtYXRfZ2V0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldF93aAogIGpzX3VtYXRfYXQKICBqc191bWF0X3NldAogIG1hdF9hdDxmbG9hdD4KICBtYXRfYXQ8dWludDhfdD4KICBtYXRfYXQ8dWludDE2X3Q+CiAgbWF0X2F0PHVpbnQ+CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF9zZXRfdmVjdG9yCiAgbWF0X2F0PFQ+CiAganNfdW1hdF9zZXRfdG8KICBqc191bWF0X2dldF9wcm9wcwogIGpzX3VtYXRfdG9zdHJpbmcKICBqc191bWF0X2luc3BlY3QKICBqc191bWF0X2NvbnZlcnRfdG8KICBqc191bWF0X2NvcHlfdG8KICBqc191bWF0X3Jlc2hhcGUKICBqc191bWF0X2dldG1hdAogIGpzX3VtYXRfZmlsbAogIGpzX3VtYXRfY2xhc3NfY3JlYXRlCiAganNfdW1hdF9idWZmZXIKICBqc191bWF0X2FycmF5CiAganNfdW1hdF9jYWxsCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfSU5UMzJfREVGCkNWX01BS0VUWVBFCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAACMGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjBgAAICBqc191bWF0X2ZyZWVfZnVuYwpKU1VNYXRJdGVyYXRvckRhdGEKICBqc191bWF0X2RhdGEKICBqc191bWF0X3NpemVzCiAganNfdW1hdF9kaW1lbnNpb25zCiAganNfdW1hdF9kYXRhCiAganNfdW1hdF9wcmludF9kYXRhCiAganNfdW1hdF9kdW1wCiAganNfdW1hdF9uZXcKICBqc191bWF0X3BhcmFtcwogIGpzX3VtYXRfY3RvcgogIGpzX3VtYXRfZmluYWxpemVyCiAganNfdW1hdF9mdW5jcwogIGpzX3VtYXRfaW5pdAogIGpzX3VtYXRfZ2V0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldF93aAogIGpzX3VtYXRfYXQKICBqc191bWF0X3NldAogIG1hdF9hdDxmbG9hdD4KICBtYXRfYXQ8dWludDhfdD4KICBtYXRfYXQ8dWludDE2X3Q+CiAgbWF0X2F0PHVpbnQ+CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF9zZXRfdmVjdG9yCiAgbWF0X2F0PFQ+CiAganNfdW1hdF9zZXRfdG8KICBqc191bWF0X2dldF9wcm9wcwogIGpzX3VtYXRfdG9zdHJpbmcKICBqc191bWF0X2luc3BlY3QKICBqc191bWF0X2NvbnZlcnRfdG8KICBqc191bWF0X2NvcHlfdG8KICBqc191bWF0X3Jlc2hhcGUKICBqc191bWF0X2dldG1hdAogIGpzX3VtYXRfZmlsbAogIGpzX3VtYXRfY2xhc3NfY3JlYXRlCiAganNfdW1hdF9idWZmZXIKICBqc191bWF0X2FycmF5CiAganNfdW1hdF9jYWxsCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfSU5UMzJfREVGCkNWX01BS0VUWVBFCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAACMGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					336,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_video_capture.cpp",
						"symkeys":
						[
							[
								96,
								117
							],
							[
								301,
								311
							],
							[
								442,
								463
							],
							[
								1050,
								1071
							],
							[
								1928,
								1949
							],
							[
								2089,
								2115
							],
							[
								2326,
								2345
							],
							[
								2419,
								2442
							],
							[
								3756,
								3777
							],
							[
								4173,
								4191
							],
							[
								4235,
								4253
							],
							[
								4297,
								4315
							],
							[
								4370,
								4388
							],
							[
								4433,
								4451
							],
							[
								4500,
								4518
							],
							[
								4563,
								4581
							],
							[
								4626,
								4644
							],
							[
								4694,
								4712
							],
							[
								4785,
								4806
							],
							[
								5665,
								5688
							],
							[
								5777,
								5805
							],
							[
								6063,
								6077
							],
							[
								6115,
								6129
							],
							[
								6191,
								6205
							]
						],
						"symlist":
						[
							"js_video_capture_init",
							"is_numeric",
							"js_video_capture_open",
							"js_video_capture_ctor",
							"js_video_capture_data",
							"js_video_capture_finalizer",
							"~JSVideoCaptureData",
							"js_video_capture_method",
							"js_video_capture_wrap",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"js_video_capture_init",
							"js_video_capture_export",
							"js_video_capture_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjBgAAICBqc191bWF0X2ZyZWVfZnVuYwpKU1VNYXRJdGVyYXRvckRhdGEKICBqc191bWF0X2RhdGEKICBqc191bWF0X3NpemVzCiAganNfdW1hdF9kaW1lbnNpb25zCiAganNfdW1hdF9kYXRhCiAganNfdW1hdF9wcmludF9kYXRhCiAganNfdW1hdF9kdW1wCiAganNfdW1hdF9uZXcKICBqc191bWF0X3BhcmFtcwogIGpzX3VtYXRfY3RvcgogIGpzX3VtYXRfZmluYWxpemVyCiAganNfdW1hdF9mdW5jcwogIGpzX3VtYXRfaW5pdAogIGpzX3VtYXRfZ2V0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldF93aAogIGpzX3VtYXRfYXQKICBqc191bWF0X3NldAogIG1hdF9hdDxmbG9hdD4KICBtYXRfYXQ8dWludDhfdD4KICBtYXRfYXQ8dWludDE2X3Q+CiAgbWF0X2F0PHVpbnQ+CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF9zZXRfdmVjdG9yCiAgbWF0X2F0PFQ+CiAganNfdW1hdF9zZXRfdG8KICBqc191bWF0X2dldF9wcm9wcwogIGpzX3VtYXRfdG9zdHJpbmcKICBqc191bWF0X2luc3BlY3QKICBqc191bWF0X2NvbnZlcnRfdG8KICBqc191bWF0X2NvcHlfdG8KICBqc191bWF0X3Jlc2hhcGUKICBqc191bWF0X2dldG1hdAogIGpzX3VtYXRfZmlsbAogIGpzX3VtYXRfY2xhc3NfY3JlYXRlCiAganNfdW1hdF9idWZmZXIKICBqc191bWF0X2FycmF5CiAganNfdW1hdF9jYWxsCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfSU5UMzJfREVGCkNWX01BS0VUWVBFCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAPgBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					340,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_video_capture.cpp",
						"symkeys":
						[
							[
								96,
								117
							],
							[
								301,
								311
							],
							[
								442,
								463
							],
							[
								1050,
								1071
							],
							[
								1928,
								1949
							],
							[
								2089,
								2115
							],
							[
								2326,
								2345
							],
							[
								2419,
								2442
							],
							[
								3756,
								3777
							],
							[
								4173,
								4191
							],
							[
								4235,
								4253
							],
							[
								4297,
								4315
							],
							[
								4370,
								4388
							],
							[
								4433,
								4451
							],
							[
								4500,
								4518
							],
							[
								4563,
								4581
							],
							[
								4626,
								4644
							],
							[
								4694,
								4712
							],
							[
								4785,
								4806
							],
							[
								5665,
								5688
							],
							[
								5777,
								5805
							],
							[
								6063,
								6077
							],
							[
								6115,
								6129
							],
							[
								6191,
								6205
							]
						],
						"symlist":
						[
							"js_video_capture_init",
							"is_numeric",
							"js_video_capture_open",
							"js_video_capture_ctor",
							"js_video_capture_data",
							"js_video_capture_finalizer",
							"~JSVideoCaptureData",
							"js_video_capture_method",
							"js_video_capture_wrap",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"js_video_capture_init",
							"js_video_capture_export",
							"js_video_capture_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD4AQAAICBqc192aWRlb19jYXB0dXJlX2luaXQKICBpc19udW1lcmljCiAganNfdmlkZW9fY2FwdHVyZV9vcGVuCiAganNfdmlkZW9fY2FwdHVyZV9jdG9yCiAganNfdmlkZW9fY2FwdHVyZV9kYXRhCiAganNfdmlkZW9fY2FwdHVyZV9maW5hbGl6ZXIKfkpTVmlkZW9DYXB0dXJlRGF0YQogIGpzX3ZpZGVvX2NhcHR1cmVfbWV0aG9kCiAganNfdmlkZW9fY2FwdHVyZV93cmFwCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfdmlkZW9fY2FwdHVyZV9pbml0CiAganNfdmlkZW9fY2FwdHVyZV9leHBvcnQKICBqc192aWRlb19jYXB0dXJlX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAD4AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AEAACAganNfdmlkZW9fY2FwdHVyZV9pbml0CiAgaXNfbnVtZXJpYwogIGpzX3ZpZGVvX2NhcHR1cmVfb3BlbgogIGpzX3ZpZGVvX2NhcHR1cmVfY3RvcgogIGpzX3ZpZGVvX2NhcHR1cmVfZGF0YQogIGpzX3ZpZGVvX2NhcHR1cmVfZmluYWxpemVyCn5KU1ZpZGVvQ2FwdHVyZURhdGEKICBqc192aWRlb19jYXB0dXJlX21ldGhvZAogIGpzX3ZpZGVvX2NhcHR1cmVfd3JhcApKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX3ZpZGVvX2NhcHR1cmVfaW5pdAogIGpzX3ZpZGVvX2NhcHR1cmVfZXhwb3J0CiAganNfdmlkZW9fY2FwdHVyZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA+AEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8BAAAAAAAAywEAAAAAAAAAAAAAAADwvw"
				],
				[
					341,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line.cpp",
						"symkeys":
						[
							[
								488,
								499
							],
							[
								923,
								935
							],
							[
								2135,
								2147
							],
							[
								2288,
								2304
							],
							[
								2826,
								2840
							],
							[
								3257,
								3268
							],
							[
								4128,
								4139
							],
							[
								4743,
								4759
							],
							[
								5257,
								5271
							],
							[
								5741,
								5755
							],
							[
								6034,
								6049
							],
							[
								6640,
								6655
							],
							[
								8495,
								8510
							],
							[
								8784,
								8798
							],
							[
								9051,
								9068
							],
							[
								9082,
								9099
							],
							[
								9114,
								9134
							],
							[
								9148,
								9165
							],
							[
								9187,
								9203
							],
							[
								9892,
								9904
							],
							[
								10611,
								10628
							],
							[
								11022,
								11047
							],
							[
								11098,
								11123
							],
							[
								11174,
								11199
							],
							[
								11250,
								11275
							],
							[
								11326,
								11346
							],
							[
								11392,
								11412
							],
							[
								11458,
								11478
							],
							[
								11524,
								11544
							],
							[
								11590,
								11610
							],
							[
								11653,
								11673
							],
							[
								11716,
								11736
							],
							[
								11781,
								11801
							],
							[
								11854,
								11874
							],
							[
								11921,
								11939
							],
							[
								11986,
								12004
							],
							[
								12047,
								12065
							],
							[
								12122,
								12140
							],
							[
								12214,
								12232
							],
							[
								12287,
								12299
							],
							[
								12336,
								12354
							],
							[
								12412,
								12430
							],
							[
								12508,
								12526
							],
							[
								12605,
								12617
							],
							[
								12641,
								12653
							],
							[
								12672,
								12684
							],
							[
								12721,
								12739
							],
							[
								12852,
								12864
							],
							[
								12897,
								12909
							],
							[
								13773,
								13787
							],
							[
								13868,
								13887
							],
							[
								14101,
								14115
							],
							[
								14153,
								14167
							],
							[
								14209,
								14223
							]
						],
						"symlist":
						[
							"js_line_new",
							"js_line_ctor",
							"js_line_data",
							"js_line_get_xy12",
							"js_line_get_ab",
							"js_line_get",
							"js_line_set",
							"js_line_set_xy12",
							"js_line_set_ab",
							"js_line_points",
							"js_line_inspect",
							"js_line_methods",
							"js_line_toarray",
							"js_call_method",
							"JS_LINE_AS_POINTS",
							"JS_LINE_AS_VECTOR",
							"JS_LINE_GET_ITERATOR",
							"JS_LINE_TO_STRING",
							"js_line_iterator",
							"js_line_from",
							"js_line_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_line_init",
							"js_line_export",
							"js_line_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4AQAAICBqc192aWRlb19jYXB0dXJlX2luaXQKICBpc19udW1lcmljCiAganNfdmlkZW9fY2FwdHVyZV9vcGVuCiAganNfdmlkZW9fY2FwdHVyZV9jdG9yCiAganNfdmlkZW9fY2FwdHVyZV9kYXRhCiAganNfdmlkZW9fY2FwdHVyZV9maW5hbGl6ZXIKfkpTVmlkZW9DYXB0dXJlRGF0YQogIGpzX3ZpZGVvX2NhcHR1cmVfbWV0aG9kCiAganNfdmlkZW9fY2FwdHVyZV93cmFwCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfdmlkZW9fY2FwdHVyZV9pbml0CiAganNfdmlkZW9fY2FwdHVyZV9leHBvcnQKICBqc192aWRlb19jYXB0dXJlX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAADcAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					347,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line.cpp",
						"symkeys":
						[
							[
								488,
								499
							],
							[
								923,
								935
							],
							[
								2135,
								2147
							],
							[
								2288,
								2304
							],
							[
								2826,
								2840
							],
							[
								3257,
								3268
							],
							[
								4128,
								4139
							],
							[
								4743,
								4759
							],
							[
								5257,
								5271
							],
							[
								5741,
								5755
							],
							[
								6034,
								6049
							],
							[
								6640,
								6655
							],
							[
								8495,
								8510
							],
							[
								8784,
								8798
							],
							[
								9051,
								9068
							],
							[
								9082,
								9099
							],
							[
								9114,
								9134
							],
							[
								9148,
								9165
							],
							[
								9187,
								9203
							],
							[
								9892,
								9904
							],
							[
								10611,
								10628
							],
							[
								11022,
								11047
							],
							[
								11098,
								11123
							],
							[
								11174,
								11199
							],
							[
								11250,
								11275
							],
							[
								11326,
								11346
							],
							[
								11392,
								11412
							],
							[
								11458,
								11478
							],
							[
								11524,
								11544
							],
							[
								11590,
								11610
							],
							[
								11653,
								11673
							],
							[
								11716,
								11736
							],
							[
								11781,
								11801
							],
							[
								11854,
								11874
							],
							[
								11921,
								11939
							],
							[
								11986,
								12004
							],
							[
								12047,
								12065
							],
							[
								12122,
								12140
							],
							[
								12214,
								12232
							],
							[
								12287,
								12299
							],
							[
								12336,
								12354
							],
							[
								12412,
								12430
							],
							[
								12508,
								12526
							],
							[
								12605,
								12617
							],
							[
								12641,
								12653
							],
							[
								12672,
								12684
							],
							[
								12721,
								12739
							],
							[
								12852,
								12864
							],
							[
								12897,
								12909
							],
							[
								13773,
								13787
							],
							[
								13868,
								13887
							],
							[
								14101,
								14115
							],
							[
								14153,
								14167
							],
							[
								14209,
								14223
							]
						],
						"symlist":
						[
							"js_line_new",
							"js_line_ctor",
							"js_line_data",
							"js_line_get_xy12",
							"js_line_get_ab",
							"js_line_get",
							"js_line_set",
							"js_line_set_xy12",
							"js_line_set_ab",
							"js_line_points",
							"js_line_inspect",
							"js_line_methods",
							"js_line_toarray",
							"js_call_method",
							"JS_LINE_AS_POINTS",
							"JS_LINE_AS_VECTOR",
							"JS_LINE_GET_ITERATOR",
							"JS_LINE_TO_STRING",
							"js_line_iterator",
							"js_line_from",
							"js_line_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_line_init",
							"js_line_export",
							"js_line_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcAwAAICBqc19saW5lX25ldwogIGpzX2xpbmVfY3RvcgogIGpzX2xpbmVfZGF0YQogIGpzX2xpbmVfZ2V0X3h5MTIKICBqc19saW5lX2dldF9hYgogIGpzX2xpbmVfZ2V0CiAganNfbGluZV9zZXQKICBqc19saW5lX3NldF94eTEyCiAganNfbGluZV9zZXRfYWIKICBqc19saW5lX3BvaW50cwogIGpzX2xpbmVfaW5zcGVjdAogIGpzX2xpbmVfbWV0aG9kcwogIGpzX2xpbmVfdG9hcnJheQogIGpzX2NhbGxfbWV0aG9kCkpTX0xJTkVfQVNfUE9JTlRTCkpTX0xJTkVfQVNfVkVDVE9SCkpTX0xJTkVfR0VUX0lURVJBVE9SCkpTX0xJTkVfVE9fU1RSSU5HCiAganNfbGluZV9pdGVyYXRvcgogIGpzX2xpbmVfZnJvbQogIGpzX2xpbmVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19BTElBU19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX2xpbmVfaW5pdAogIGpzX2xpbmVfZXhwb3J0CiAganNfbGluZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA3AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAsgAAAAAAAAAAAAAAAADwvw"
				],
				[
					348,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_mat.cpp",
						"symkeys":
						[
							[
								1280,
								1297
							],
							[
								1411,
								1427
							],
							[
								1682,
								1694
							],
							[
								2010,
								2027
							],
							[
								2370,
								2382
							],
							[
								3005,
								3015
							],
							[
								3594,
								3605
							],
							[
								4437,
								4448
							],
							[
								4870,
								4887
							],
							[
								5390,
								5401
							],
							[
								6433,
								6446
							],
							[
								6948,
								6959
							],
							[
								7171,
								7183
							],
							[
								9571,
								9582
							],
							[
								12838,
								12849
							],
							[
								13701,
								13711
							],
							[
								13919,
								13929
							],
							[
								15495,
								15508
							],
							[
								15717,
								15726
							],
							[
								16488,
								16498
							],
							[
								19955,
								19968
							],
							[
								21743,
								21759
							],
							[
								23148,
								23163
							],
							[
								24807,
								24821
							],
							[
								25426,
								25452
							],
							[
								25959,
								25976
							],
							[
								26497,
								26511
							],
							[
								27201,
								27215
							],
							[
								28196,
								28210
							],
							[
								28772,
								28789
							],
							[
								29679,
								29690
							],
							[
								30230,
								30249
							],
							[
								31141,
								31154
							],
							[
								31793,
								31805
							],
							[
								32487,
								32498
							],
							[
								33001,
								33017
							],
							[
								34482,
								34501
							],
							[
								35585,
								35605
							],
							[
								35802,
								35822
							],
							[
								38082,
								38107
							],
							[
								38285,
								38304
							],
							[
								38707,
								38727
							],
							[
								38776,
								38796
							],
							[
								38845,
								38865
							],
							[
								38922,
								38942
							],
							[
								38991,
								39011
							],
							[
								39062,
								39082
							],
							[
								39133,
								39153
							],
							[
								39204,
								39224
							],
							[
								39273,
								39293
							],
							[
								39354,
								39374
							],
							[
								39433,
								39453
							],
							[
								39502,
								39522
							],
							[
								39579,
								39599
							],
							[
								39658,
								39672
							],
							[
								39709,
								39723
							],
							[
								39758,
								39776
							],
							[
								39818,
								39836
							],
							[
								39878,
								39896
							],
							[
								39949,
								39967
							],
							[
								40020,
								40038
							],
							[
								40084,
								40102
							],
							[
								40144,
								40162
							],
							[
								40212,
								40230
							],
							[
								40272,
								40290
							],
							[
								40336,
								40354
							],
							[
								40400,
								40418
							],
							[
								40466,
								40484
							],
							[
								40530,
								40548
							],
							[
								40603,
								40621
							],
							[
								40664,
								40682
							],
							[
								40725,
								40743
							],
							[
								40784,
								40802
							],
							[
								40845,
								40863
							],
							[
								40907,
								40925
							],
							[
								40958,
								40976
							],
							[
								41009,
								41021
							],
							[
								41059,
								41071
							],
							[
								41097,
								41109
							],
							[
								41137,
								41149
							],
							[
								41182,
								41194
							],
							[
								41235,
								41247
							],
							[
								41282,
								41294
							],
							[
								41330,
								41342
							],
							[
								41378,
								41396
							],
							[
								41453,
								41471
							],
							[
								41532,
								41550
							],
							[
								41613,
								41625
							],
							[
								41662,
								41674
							],
							[
								41717,
								41735
							],
							[
								41859,
								41879
							],
							[
								41921,
								41939
							],
							[
								42006,
								42018
							],
							[
								42127,
								42139
							],
							[
								42199,
								42217
							],
							[
								42255,
								42273
							],
							[
								42311,
								42329
							],
							[
								42367,
								42385
							],
							[
								42423,
								42441
							],
							[
								42479,
								42497
							],
							[
								42534,
								42552
							],
							[
								42590,
								42608
							],
							[
								42650,
								42668
							],
							[
								42709,
								42726
							],
							[
								42736,
								42747
							],
							[
								42788,
								42799
							],
							[
								44226,
								44239
							],
							[
								44349,
								44363
							],
							[
								44401,
								44415
							],
							[
								44467,
								44481
							]
						],
						"symlist":
						[
							"JSMatIteratorData",
							"js_mat_free_func",
							"js_mat_sizes",
							"js_mat_dimensions",
							"js_mat_track",
							"js_mat_new",
							"js_mat_wrap",
							"js_mat_data",
							"js_mat_print_data",
							"js_mat_dump",
							"js_mat_params",
							"js_mat_ctor",
							"js_mat_funcs",
							"js_mat_expr",
							"js_mat_init",
							"js_mat_get",
							"js_mat_get",
							"js_mat_get_wh",
							"js_mat_at",
							"js_mat_set",
							"js_mat_set_to",
							"js_mat_get_props",
							"js_mat_tostring",
							"js_mat_inspect",
							"js_mat_getrotationmatrix2d",
							"js_mat_convert_to",
							"js_mat_copy_to",
							"js_mat_reshape",
							"js_mat_getumat",
							"js_mat_class_func",
							"js_mat_fill",
							"js_mat_class_create",
							"js_mat_buffer",
							"js_mat_array",
							"js_mat_call",
							"js_mat_finalizer",
							"js_mat_iterator_new",
							"js_mat_iterator_dump",
							"js_mat_iterator_next",
							"js_mat_iterator_finalizer",
							"js_mat_iterator_dup",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_ITERATOR_NEXT_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_INT32_DEF",
							"CV_MAKETYPE",
							"js_mat_init",
							"js_mat_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcAwAAICBqc19saW5lX25ldwogIGpzX2xpbmVfY3RvcgogIGpzX2xpbmVfZGF0YQogIGpzX2xpbmVfZ2V0X3h5MTIKICBqc19saW5lX2dldF9hYgogIGpzX2xpbmVfZ2V0CiAganNfbGluZV9zZXQKICBqc19saW5lX3NldF94eTEyCiAganNfbGluZV9zZXRfYWIKICBqc19saW5lX3BvaW50cwogIGpzX2xpbmVfaW5zcGVjdAogIGpzX2xpbmVfbWV0aG9kcwogIGpzX2xpbmVfdG9hcnJheQogIGpzX2NhbGxfbWV0aG9kCkpTX0xJTkVfQVNfUE9JTlRTCkpTX0xJTkVfQVNfVkVDVE9SCkpTX0xJTkVfR0VUX0lURVJBVE9SCkpTX0xJTkVfVE9fU1RSSU5HCiAganNfbGluZV9pdGVyYXRvcgogIGpzX2xpbmVfZnJvbQogIGpzX2xpbmVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19BTElBU19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX2xpbmVfaW5pdAogIGpzX2xpbmVfZXhwb3J0CiAganNfbGluZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAlAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					356,
					7,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_mat.cpp",
						"symkeys":
						[
							[
								1280,
								1297
							],
							[
								1411,
								1427
							],
							[
								1682,
								1694
							],
							[
								2010,
								2027
							],
							[
								2370,
								2382
							],
							[
								3005,
								3015
							],
							[
								3594,
								3605
							],
							[
								4437,
								4448
							],
							[
								4870,
								4887
							],
							[
								5390,
								5401
							],
							[
								6433,
								6446
							],
							[
								6948,
								6959
							],
							[
								7171,
								7183
							],
							[
								9571,
								9582
							],
							[
								12838,
								12849
							],
							[
								13701,
								13711
							],
							[
								13919,
								13929
							],
							[
								15495,
								15508
							],
							[
								15717,
								15726
							],
							[
								16488,
								16498
							],
							[
								19955,
								19968
							],
							[
								21743,
								21759
							],
							[
								23148,
								23163
							],
							[
								24807,
								24821
							],
							[
								25432,
								25458
							],
							[
								25965,
								25982
							],
							[
								26503,
								26517
							],
							[
								27207,
								27221
							],
							[
								28202,
								28216
							],
							[
								28778,
								28795
							],
							[
								29685,
								29696
							],
							[
								30236,
								30255
							],
							[
								31147,
								31160
							],
							[
								31799,
								31811
							],
							[
								32493,
								32504
							],
							[
								33007,
								33023
							],
							[
								34488,
								34507
							],
							[
								35591,
								35611
							],
							[
								35808,
								35828
							],
							[
								38088,
								38113
							],
							[
								38291,
								38310
							],
							[
								38713,
								38733
							],
							[
								38782,
								38802
							],
							[
								38851,
								38871
							],
							[
								38928,
								38948
							],
							[
								38997,
								39017
							],
							[
								39068,
								39088
							],
							[
								39139,
								39159
							],
							[
								39210,
								39230
							],
							[
								39279,
								39299
							],
							[
								39360,
								39380
							],
							[
								39439,
								39459
							],
							[
								39508,
								39528
							],
							[
								39585,
								39605
							],
							[
								39664,
								39678
							],
							[
								39715,
								39729
							],
							[
								39764,
								39782
							],
							[
								39824,
								39842
							],
							[
								39884,
								39902
							],
							[
								39955,
								39973
							],
							[
								40026,
								40044
							],
							[
								40090,
								40108
							],
							[
								40150,
								40168
							],
							[
								40218,
								40236
							],
							[
								40278,
								40296
							],
							[
								40342,
								40360
							],
							[
								40406,
								40424
							],
							[
								40472,
								40490
							],
							[
								40536,
								40554
							],
							[
								40609,
								40627
							],
							[
								40670,
								40688
							],
							[
								40731,
								40749
							],
							[
								40790,
								40808
							],
							[
								40851,
								40869
							],
							[
								40913,
								40931
							],
							[
								40964,
								40982
							],
							[
								41015,
								41027
							],
							[
								41065,
								41077
							],
							[
								41103,
								41115
							],
							[
								41143,
								41155
							],
							[
								41188,
								41200
							],
							[
								41241,
								41253
							],
							[
								41288,
								41300
							],
							[
								41336,
								41348
							],
							[
								41384,
								41402
							],
							[
								41459,
								41477
							],
							[
								41538,
								41556
							],
							[
								41619,
								41631
							],
							[
								41668,
								41680
							],
							[
								41723,
								41741
							],
							[
								41865,
								41885
							],
							[
								41927,
								41945
							],
							[
								42012,
								42024
							],
							[
								42133,
								42145
							],
							[
								42205,
								42223
							],
							[
								42261,
								42279
							],
							[
								42317,
								42335
							],
							[
								42373,
								42391
							],
							[
								42429,
								42447
							],
							[
								42485,
								42503
							],
							[
								42540,
								42558
							],
							[
								42596,
								42614
							],
							[
								42656,
								42674
							],
							[
								42715,
								42732
							],
							[
								42742,
								42753
							],
							[
								42794,
								42805
							],
							[
								44232,
								44245
							],
							[
								44355,
								44369
							],
							[
								44407,
								44421
							],
							[
								44473,
								44487
							]
						],
						"symlist":
						[
							"JSMatIteratorData",
							"js_mat_free_func",
							"js_mat_sizes",
							"js_mat_dimensions",
							"js_mat_track",
							"js_mat_new",
							"js_mat_wrap",
							"js_mat_data",
							"js_mat_print_data",
							"js_mat_dump",
							"js_mat_params",
							"js_mat_ctor",
							"js_mat_funcs",
							"js_mat_expr",
							"js_mat_init",
							"js_mat_get",
							"js_mat_get",
							"js_mat_get_wh",
							"js_mat_at",
							"js_mat_set",
							"js_mat_set_to",
							"js_mat_get_props",
							"js_mat_tostring",
							"js_mat_inspect",
							"js_mat_getrotationmatrix2d",
							"js_mat_convert_to",
							"js_mat_copy_to",
							"js_mat_reshape",
							"js_mat_getumat",
							"js_mat_class_func",
							"js_mat_fill",
							"js_mat_class_create",
							"js_mat_buffer",
							"js_mat_array",
							"js_mat_call",
							"js_mat_finalizer",
							"js_mat_iterator_new",
							"js_mat_iterator_dump",
							"js_mat_iterator_next",
							"js_mat_iterator_finalizer",
							"js_mat_iterator_dup",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_ITERATOR_NEXT_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_INT32_DEF",
							"CV_MAKETYPE",
							"js_mat_init",
							"js_mat_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUBAAAAAAAAcwEAAAAAAAAAAAAAAADwvw"
				],
				[
					357,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								463,
								475
							],
							[
								921,
								934
							],
							[
								1044,
								1058
							],
							[
								1175,
								1189
							],
							[
								1523,
								1536
							],
							[
								1998,
								2011
							],
							[
								2154,
								2167
							],
							[
								2500,
								2513
							],
							[
								2856,
								2871
							],
							[
								3169,
								3184
							],
							[
								3503,
								3516
							],
							[
								4480,
								4495
							],
							[
								4820,
								4832
							],
							[
								5594,
								5612
							],
							[
								6490,
								6507
							],
							[
								6774,
								6790
							],
							[
								7224,
								7248
							],
							[
								7643,
								7657
							],
							[
								8532,
								8545
							],
							[
								9069,
								9091
							],
							[
								9231,
								9249
							],
							[
								9730,
								9755
							],
							[
								9803,
								9828
							],
							[
								9876,
								9888
							],
							[
								9922,
								9934
							],
							[
								9965,
								9977
							],
							[
								10013,
								10025
							],
							[
								10057,
								10075
							],
							[
								10108,
								10126
							],
							[
								10159,
								10177
							],
							[
								10210,
								10228
							],
							[
								10261,
								10273
							],
							[
								10305,
								10323
							],
							[
								10360,
								10378
							],
							[
								10415,
								10433
							],
							[
								10469,
								10487
							],
							[
								10531,
								10543
							],
							[
								10582,
								10594
							],
							[
								10650,
								10668
							],
							[
								10860,
								10872
							],
							[
								10906,
								10919
							],
							[
								11873,
								11893
							],
							[
								12105,
								12120
							],
							[
								12234,
								12248
							],
							[
								12286,
								12300
							],
							[
								12343,
								12357
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUBwAASlNNYXRJdGVyYXRvckRhdGEKICBqc19tYXRfZnJlZV9mdW5jCiAganNfbWF0X3NpemVzCiAganNfbWF0X2RpbWVuc2lvbnMKICBqc19tYXRfdHJhY2sKICBqc19tYXRfbmV3CiAganNfbWF0X3dyYXAKICBqc19tYXRfZGF0YQogIGpzX21hdF9wcmludF9kYXRhCiAganNfbWF0X2R1bXAKICBqc19tYXRfcGFyYW1zCiAganNfbWF0X2N0b3IKICBqc19tYXRfZnVuY3MKICBqc19tYXRfZXhwcgogIGpzX21hdF9pbml0CiAganNfbWF0X2dldAogIGpzX21hdF9nZXQKICBqc19tYXRfZ2V0X3doCiAganNfbWF0X2F0CiAganNfbWF0X3NldAogIGpzX21hdF9zZXRfdG8KICBqc19tYXRfZ2V0X3Byb3BzCiAganNfbWF0X3Rvc3RyaW5nCiAganNfbWF0X2luc3BlY3QKICBqc19tYXRfZ2V0cm90YXRpb25tYXRyaXgyZAogIGpzX21hdF9jb252ZXJ0X3RvCiAganNfbWF0X2NvcHlfdG8KICBqc19tYXRfcmVzaGFwZQogIGpzX21hdF9nZXR1bWF0CiAganNfbWF0X2NsYXNzX2Z1bmMKICBqc19tYXRfZmlsbAogIGpzX21hdF9jbGFzc19jcmVhdGUKICBqc19tYXRfYnVmZmVyCiAganNfbWF0X2FycmF5CiAganNfbWF0X2NhbGwKICBqc19tYXRfZmluYWxpemVyCiAganNfbWF0X2l0ZXJhdG9yX25ldwogIGpzX21hdF9pdGVyYXRvcl9kdW1wCiAganNfbWF0X2l0ZXJhdG9yX25leHQKICBqc19tYXRfaXRlcmF0b3JfZmluYWxpemVyCiAganNfbWF0X2l0ZXJhdG9yX2R1cApKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX01BR0lDX0RFRgpKU19DR0VUU0VUX0RFRgpKU19DR0VUU0VUX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfSVRFUkFUT1JfTkVYVF9ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9JTlQzMl9ERUYKQ1ZfTUFLRVRZUEUKICBqc19tYXRfaW5pdAogIGpzX21hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAACgDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					370,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point_iterator.cpp",
						"symkeys":
						[
							[
								401,
								422
							],
							[
								1153,
								1175
							],
							[
								2049,
								2078
							],
							[
								3027,
								3048
							],
							[
								3171,
								3198
							],
							[
								3689,
								3709
							],
							[
								3753,
								3765
							],
							[
								3818,
								3836
							],
							[
								3909,
								3931
							],
							[
								5146,
								5170
							],
							[
								5301,
								5315
							],
							[
								5353,
								5367
							],
							[
								5419,
								5433
							],
							[
								5651,
								5678
							]
						],
						"symlist":
						[
							"js_point_iterator_new",
							"js_point_iterator_next",
							"js_point_iterator_constructor",
							"js_point_iterator_dup",
							"js_point_iterator_finalizer",
							"JS_ITERATOR_NEXT_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_point_iterator_init",
							"js_point_iterator_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"js_point_iterator_to_string"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAoAwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAOgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEBAAAAAAAAEQEAAAAAAAAAAAAAAADwvw"
				],
				[
					371,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_rect.hpp",
						"symkeys":
						[
							[
								28,
								39
							],
							[
								91,
								103
							],
							[
								248,
								260
							],
							[
								308,
								320
							],
							[
								365,
								377
							],
							[
								418,
								437
							],
							[
								482,
								501
							],
							[
								592,
								604
							],
							[
								1705,
								1716
							],
							[
								1857,
								1870
							],
							[
								2287,
								2298
							],
							[
								2475,
								2487
							]
						],
						"symlist":
						[
							"JS_RECT_HPP",
							"js_rect_init",
							"js_rect_data",
							"js_rect_wrap",
							"js_rect_init",
							"js_init_rect_module",
							"js_rect_constructor",
							"js_rect_read",
							"js_rect_get",
							"js_rect_write",
							"js_rect_set",
							"js_rect_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AQAAICBqc19wb2ludF9pdGVyYXRvcl9uZXcKICBqc19wb2ludF9pdGVyYXRvcl9uZXh0CiAganNfcG9pbnRfaXRlcmF0b3JfY29uc3RydWN0b3IKICBqc19wb2ludF9pdGVyYXRvcl9kdXAKICBqc19wb2ludF9pdGVyYXRvcl9maW5hbGl6ZXIKSlNfSVRFUkFUT1JfTkVYVF9ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX3BvaW50X2l0ZXJhdG9yX2luaXQKICBqc19wb2ludF9pdGVyYXRvcl9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKICBqc19wb2ludF9pdGVyYXRvcl90b19zdHJpbmcAAAAAAAAAAL0AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					372,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_rect.cpp",
						"symkeys":
						[
							[
								332,
								343
							],
							[
								857,
								869
							],
							[
								1006,
								1018
							],
							[
								2265,
								2277
							],
							[
								2512,
								2523
							],
							[
								3490,
								3501
							],
							[
								4554,
								4571
							],
							[
								5259,
								5276
							],
							[
								5822,
								5835
							],
							[
								7349,
								7364
							],
							[
								8132,
								8146
							],
							[
								12543,
								12566
							],
							[
								12960,
								12972
							],
							[
								13658,
								13675
							],
							[
								14087,
								14112
							],
							[
								14205,
								14230
							],
							[
								14323,
								14348
							],
							[
								14449,
								14474
							],
							[
								14577,
								14597
							],
							[
								14692,
								14712
							],
							[
								14807,
								14827
							],
							[
								14926,
								14946
							],
							[
								15045,
								15057
							],
							[
								15122,
								15134
							],
							[
								15199,
								15217
							],
							[
								15319,
								15337
							],
							[
								15433,
								15451
							],
							[
								15545,
								15563
							],
							[
								15653,
								15671
							],
							[
								15761,
								15779
							],
							[
								15875,
								15893
							],
							[
								15991,
								16009
							],
							[
								16107,
								16125
							],
							[
								16223,
								16235
							],
							[
								16323,
								16335
							],
							[
								16423,
								16441
							],
							[
								16536,
								16554
							],
							[
								16647,
								16665
							],
							[
								16764,
								16782
							],
							[
								16879,
								16897
							],
							[
								17009,
								17021
							],
							[
								17054,
								17066
							],
							[
								17930,
								17944
							],
							[
								18025,
								18044
							],
							[
								18258,
								18272
							],
							[
								18310,
								18324
							],
							[
								18377,
								18391
							]
						],
						"symlist":
						[
							"js_rect_new",
							"js_rect_wrap",
							"js_rect_ctor",
							"js_rect_data",
							"js_rect_get",
							"js_rect_set",
							"js_rect_to_string",
							"js_rect_to_source",
							"js_rect_funcs",
							"js_rect_inspect",
							"js_rect_method",
							"js_rect_symbol_iterator",
							"js_rect_from",
							"js_rect_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_rect_init",
							"js_rect_export",
							"js_rect_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AAAASlNfUkVDVF9IUFAKICBqc19yZWN0X2luaXQKICBqc19yZWN0X2RhdGEKICBqc19yZWN0X3dyYXAKICBqc19yZWN0X2luaXQKICBqc19pbml0X3JlY3RfbW9kdWxlCiAganNfcmVjdF9jb25zdHJ1Y3RvcgogIGpzX3JlY3RfcmVhZAogIGpzX3JlY3RfZ2V0CiAganNfcmVjdF93cml0ZQogIGpzX3JlY3Rfc2V0CiAganNfcmVjdF9pbml0AAAAAAAAAABYAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					373,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYAwAAICBqc19yZWN0X25ldwogIGpzX3JlY3Rfd3JhcAogIGpzX3JlY3RfY3RvcgogIGpzX3JlY3RfZGF0YQogIGpzX3JlY3RfZ2V0CiAganNfcmVjdF9zZXQKICBqc19yZWN0X3RvX3N0cmluZwogIGpzX3JlY3RfdG9fc291cmNlCiAganNfcmVjdF9mdW5jcwogIGpzX3JlY3RfaW5zcGVjdAogIGpzX3JlY3RfbWV0aG9kCiAganNfcmVjdF9zeW1ib2xfaXRlcmF0b3IKICBqc19yZWN0X2Zyb20KICBqc19yZWN0X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0FMSUFTX0RFRgpKU19BTElBU19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3JlY3RfaW5pdAogIGpzX3JlY3RfZXhwb3J0CiAganNfcmVjdF9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAATwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					374,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_slice_iterator.cpp",
						"symkeys":
						[
							[
								260,
								284
							],
							[
								784,
								805
							],
							[
								1410,
								1432
							],
							[
								2124,
								2153
							],
							[
								3366,
								3387
							],
							[
								3511,
								3538
							],
							[
								4093,
								4113
							],
							[
								4157,
								4169
							],
							[
								4222,
								4240
							],
							[
								4313,
								4335
							],
							[
								5550,
								5574
							],
							[
								5705,
								5719
							],
							[
								5757,
								5771
							],
							[
								5823,
								5837
							],
							[
								6055,
								6082
							]
						],
						"symlist":
						[
							"js_slice_iterator_create",
							"js_slice_iterator_new",
							"js_slice_iterator_next",
							"js_slice_iterator_constructor",
							"js_slice_iterator_dup",
							"js_slice_iterator_finalizer",
							"JS_ITERATOR_NEXT_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_slice_iterator_init",
							"js_slice_iterator_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"js_slice_iterator_to_string"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAVQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					375,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_subdiv2d.cpp",
						"symkeys":
						[
							[
								177,
								193
							],
							[
								352,
								367
							],
							[
								702,
								718
							],
							[
								979,
								995
							],
							[
								1124,
								1145
							],
							[
								1271,
								1280
							],
							[
								1326,
								1344
							],
							[
								6384,
								6402
							],
							[
								6497,
								6515
							],
							[
								6610,
								6628
							],
							[
								6727,
								6745
							],
							[
								6840,
								6858
							],
							[
								6957,
								6975
							],
							[
								7081,
								7099
							],
							[
								7202,
								7220
							],
							[
								7317,
								7335
							],
							[
								7442,
								7460
							],
							[
								7560,
								7578
							],
							[
								7673,
								7691
							],
							[
								7786,
								7804
							],
							[
								7901,
								7919
							],
							[
								8018,
								8036
							],
							[
								8132,
								8150
							],
							[
								8424,
								8441
							],
							[
								8492,
								8509
							],
							[
								8574,
								8591
							],
							[
								8644,
								8661
							],
							[
								8715,
								8732
							],
							[
								8791,
								8808
							],
							[
								8867,
								8884
							],
							[
								8943,
								8960
							],
							[
								9019,
								9036
							],
							[
								9097,
								9114
							],
							[
								9177,
								9194
							],
							[
								9268,
								9284
							],
							[
								10170,
								10188
							],
							[
								10273,
								10296
							],
							[
								10536,
								10550
							],
							[
								10588,
								10602
							],
							[
								10659,
								10673
							]
						],
						"symlist":
						[
							"js_subdiv2d_init",
							"js_subdiv2d_new",
							"js_subdiv2d_ctor",
							"js_subdiv2d_data",
							"js_subdiv2d_finalizer",
							"~Subdiv2D",
							"js_subdiv2d_method",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"JS_PROP_INT32_DEF",
							"js_subdiv2d_init",
							"js_subdiv2d_export",
							"js_subdiv2d_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABVAQAAICBqc19zbGljZV9pdGVyYXRvcl9jcmVhdGUKICBqc19zbGljZV9pdGVyYXRvcl9uZXcKICBqc19zbGljZV9pdGVyYXRvcl9uZXh0CiAganNfc2xpY2VfaXRlcmF0b3JfY29uc3RydWN0b3IKICBqc19zbGljZV9pdGVyYXRvcl9kdXAKICBqc19zbGljZV9pdGVyYXRvcl9maW5hbGl6ZXIKSlNfSVRFUkFUT1JfTkVYVF9ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX3NsaWNlX2l0ZXJhdG9yX2luaXQKICBqc19zbGljZV9pdGVyYXRvcl9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKICBqc19zbGljZV9pdGVyYXRvcl90b19zdHJpbmcAAAAAAAAAAOYCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					376,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_umat.cpp",
						"symkeys":
						[
							[
								978,
								995
							],
							[
								1105,
								1123
							],
							[
								1223,
								1235
							],
							[
								1384,
								1397
							],
							[
								1719,
								1737
							],
							[
								2133,
								2145
							],
							[
								2574,
								2592
							],
							[
								3097,
								3109
							],
							[
								4122,
								4133
							],
							[
								4764,
								4778
							],
							[
								5280,
								5292
							],
							[
								5496,
								5513
							],
							[
								5738,
								5751
							],
							[
								7573,
								7585
							],
							[
								8457,
								8468
							],
							[
								8684,
								8695
							],
							[
								10070,
								10084
							],
							[
								10299,
								10309
							],
							[
								11105,
								11116
							],
							[
								11824,
								11837
							],
							[
								12080,
								12095
							],
							[
								12194,
								12210
							],
							[
								12307,
								12319
							],
							[
								12515,
								12533
							],
							[
								12995,
								13013
							],
							[
								13489,
								13507
							],
							[
								14188,
								14206
							],
							[
								14545,
								14554
							],
							[
								14632,
								14646
							],
							[
								15222,
								15239
							],
							[
								16246,
								16262
							],
							[
								17946,
								17961
							],
							[
								19852,
								19870
							],
							[
								20398,
								20413
							],
							[
								20938,
								20953
							],
							[
								21970,
								21984
							],
							[
								22423,
								22435
							],
							[
								22996,
								23016
							],
							[
								23916,
								23930
							],
							[
								24388,
								24401
							],
							[
								25347,
								25359
							],
							[
								26041,
								26061
							],
							[
								26111,
								26131
							],
							[
								26181,
								26201
							],
							[
								26259,
								26279
							],
							[
								26329,
								26349
							],
							[
								26401,
								26421
							],
							[
								26473,
								26493
							],
							[
								26545,
								26565
							],
							[
								26615,
								26635
							],
							[
								26697,
								26717
							],
							[
								26777,
								26797
							],
							[
								26847,
								26867
							],
							[
								26925,
								26945
							],
							[
								27005,
								27019
							],
							[
								27057,
								27071
							],
							[
								27107,
								27125
							],
							[
								27168,
								27186
							],
							[
								27229,
								27247
							],
							[
								27301,
								27319
							],
							[
								27373,
								27391
							],
							[
								27438,
								27456
							],
							[
								27499,
								27517
							],
							[
								27568,
								27586
							],
							[
								27629,
								27647
							],
							[
								27694,
								27712
							],
							[
								27759,
								27777
							],
							[
								27824,
								27842
							],
							[
								27899,
								27917
							],
							[
								27951,
								27969
							],
							[
								28003,
								28015
							],
							[
								28054,
								28066
							],
							[
								28103,
								28115
							],
							[
								28142,
								28154
							],
							[
								28183,
								28195
							],
							[
								28229,
								28241
							],
							[
								28283,
								28295
							],
							[
								28331,
								28343
							],
							[
								28380,
								28392
							],
							[
								28427,
								28439
							],
							[
								28482,
								28500
							],
							[
								28618,
								28636
							],
							[
								28679,
								28697
							],
							[
								28739,
								28756
							],
							[
								28766,
								28777
							],
							[
								28818,
								28830
							],
							[
								29840,
								29854
							],
							[
								29966,
								29980
							],
							[
								30018,
								30032
							],
							[
								30085,
								30099
							]
						],
						"symlist":
						[
							"js_umat_free_func",
							"JSUMatIteratorData",
							"js_umat_data",
							"js_umat_sizes",
							"js_umat_dimensions",
							"js_umat_data",
							"js_umat_print_data",
							"js_umat_dump",
							"js_umat_new",
							"js_umat_params",
							"js_umat_ctor",
							"js_umat_finalizer",
							"js_umat_funcs",
							"js_umat_init",
							"js_umat_get",
							"js_umat_get",
							"js_umat_get_wh",
							"js_umat_at",
							"js_umat_set",
							"mat_at<float>",
							"mat_at<uint8_t>",
							"mat_at<uint16_t>",
							"mat_at<uint>",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_vector_get",
							"js_umat_set_vector",
							"mat_at<T>",
							"js_umat_set_to",
							"js_umat_get_props",
							"js_umat_tostring",
							"js_umat_inspect",
							"js_umat_convert_to",
							"js_umat_copy_to",
							"js_umat_reshape",
							"js_umat_getmat",
							"js_umat_fill",
							"js_umat_class_create",
							"js_umat_buffer",
							"js_umat_array",
							"js_umat_call",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_DEF",
							"JS_CGETSET_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_INT32_DEF",
							"CV_MAKETYPE",
							"js_umat_init",
							"js_umat_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADmAgAAICBqc19zdWJkaXYyZF9pbml0CiAganNfc3ViZGl2MmRfbmV3CiAganNfc3ViZGl2MmRfY3RvcgogIGpzX3N1YmRpdjJkX2RhdGEKICBqc19zdWJkaXYyZF9maW5hbGl6ZXIKflN1YmRpdjJECiAganNfc3ViZGl2MmRfbWV0aG9kCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgpKU19QUk9QX0lOVDMyX0RFRgogIGpzX3N1YmRpdjJkX2luaXQKICBqc19zdWJkaXYyZF9leHBvcnQKICBqc19zdWJkaXYyZF9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAIwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMGAAAgIGpzX3VtYXRfZnJlZV9mdW5jCkpTVU1hdEl0ZXJhdG9yRGF0YQogIGpzX3VtYXRfZGF0YQogIGpzX3VtYXRfc2l6ZXMKICBqc191bWF0X2RpbWVuc2lvbnMKICBqc191bWF0X2RhdGEKICBqc191bWF0X3ByaW50X2RhdGEKICBqc191bWF0X2R1bXAKICBqc191bWF0X25ldwogIGpzX3VtYXRfcGFyYW1zCiAganNfdW1hdF9jdG9yCiAganNfdW1hdF9maW5hbGl6ZXIKICBqc191bWF0X2Z1bmNzCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldAogIGpzX3VtYXRfZ2V0X3doCiAganNfdW1hdF9hdAogIGpzX3VtYXRfc2V0CiAgbWF0X2F0PGZsb2F0PgogIG1hdF9hdDx1aW50OF90PgogIG1hdF9hdDx1aW50MTZfdD4KICBtYXRfYXQ8dWludD4KICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3NldF92ZWN0b3IKICBtYXRfYXQ8VD4KICBqc191bWF0X3NldF90bwogIGpzX3VtYXRfZ2V0X3Byb3BzCiAganNfdW1hdF90b3N0cmluZwogIGpzX3VtYXRfaW5zcGVjdAogIGpzX3VtYXRfY29udmVydF90bwogIGpzX3VtYXRfY29weV90bwogIGpzX3VtYXRfcmVzaGFwZQogIGpzX3VtYXRfZ2V0bWF0CiAganNfdW1hdF9maWxsCiAganNfdW1hdF9jbGFzc19jcmVhdGUKICBqc191bWF0X2J1ZmZlcgogIGpzX3VtYXRfYXJyYXkKICBqc191bWF0X2NhbGwKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19BTElBU19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9JTlQzMl9ERUYKQ1ZfTUFLRVRZUEUKICBqc191bWF0X2luaXQKICBqc191bWF0X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAIwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMGAAAgIGpzX3VtYXRfZnJlZV9mdW5jCkpTVU1hdEl0ZXJhdG9yRGF0YQogIGpzX3VtYXRfZGF0YQogIGpzX3VtYXRfc2l6ZXMKICBqc191bWF0X2RpbWVuc2lvbnMKICBqc191bWF0X2RhdGEKICBqc191bWF0X3ByaW50X2RhdGEKICBqc191bWF0X2R1bXAKICBqc191bWF0X25ldwogIGpzX3VtYXRfcGFyYW1zCiAganNfdW1hdF9jdG9yCiAganNfdW1hdF9maW5hbGl6ZXIKICBqc191bWF0X2Z1bmNzCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldAogIGpzX3VtYXRfZ2V0X3doCiAganNfdW1hdF9hdAogIGpzX3VtYXRfc2V0CiAgbWF0X2F0PGZsb2F0PgogIG1hdF9hdDx1aW50OF90PgogIG1hdF9hdDx1aW50MTZfdD4KICBtYXRfYXQ8dWludD4KICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3ZlY3Rvcl9nZXQKICBqc191bWF0X3NldF92ZWN0b3IKICBtYXRfYXQ8VD4KICBqc191bWF0X3NldF90bwogIGpzX3VtYXRfZ2V0X3Byb3BzCiAganNfdW1hdF90b3N0cmluZwogIGpzX3VtYXRfaW5zcGVjdAogIGpzX3VtYXRfY29udmVydF90bwogIGpzX3VtYXRfY29weV90bwogIGpzX3VtYXRfcmVzaGFwZQogIGpzX3VtYXRfZ2V0bWF0CiAganNfdW1hdF9maWxsCiAganNfdW1hdF9jbGFzc19jcmVhdGUKICBqc191bWF0X2J1ZmZlcgogIGpzX3VtYXRfYXJyYXkKICBqc191bWF0X2NhbGwKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19BTElBU19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9JTlQzMl9ERUYKQ1ZfTUFLRVRZUEUKICBqc191bWF0X2luaXQKICBqc191bWF0X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAIwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					377,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjBgAAICBqc191bWF0X2ZyZWVfZnVuYwpKU1VNYXRJdGVyYXRvckRhdGEKICBqc191bWF0X2RhdGEKICBqc191bWF0X3NpemVzCiAganNfdW1hdF9kaW1lbnNpb25zCiAganNfdW1hdF9kYXRhCiAganNfdW1hdF9wcmludF9kYXRhCiAganNfdW1hdF9kdW1wCiAganNfdW1hdF9uZXcKICBqc191bWF0X3BhcmFtcwogIGpzX3VtYXRfY3RvcgogIGpzX3VtYXRfZmluYWxpemVyCiAganNfdW1hdF9mdW5jcwogIGpzX3VtYXRfaW5pdAogIGpzX3VtYXRfZ2V0CiAganNfdW1hdF9nZXQKICBqc191bWF0X2dldF93aAogIGpzX3VtYXRfYXQKICBqc191bWF0X3NldAogIG1hdF9hdDxmbG9hdD4KICBtYXRfYXQ8dWludDhfdD4KICBtYXRfYXQ8dWludDE2X3Q+CiAgbWF0X2F0PHVpbnQ+CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF92ZWN0b3JfZ2V0CiAganNfdW1hdF9zZXRfdmVjdG9yCiAgbWF0X2F0PFQ+CiAganNfdW1hdF9zZXRfdG8KICBqc191bWF0X2dldF9wcm9wcwogIGpzX3VtYXRfdG9zdHJpbmcKICBqc191bWF0X2luc3BlY3QKICBqc191bWF0X2NvbnZlcnRfdG8KICBqc191bWF0X2NvcHlfdG8KICBqc191bWF0X3Jlc2hhcGUKICBqc191bWF0X2dldG1hdAogIGpzX3VtYXRfZmlsbAogIGpzX3VtYXRfY2xhc3NfY3JlYXRlCiAganNfdW1hdF9idWZmZXIKICBqc191bWF0X2FycmF5CiAganNfdW1hdF9jYWxsCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NHRVRTRVRfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX1BST1BfSU5UMzJfREVGCkNWX01BS0VUWVBFCiAganNfdW1hdF9pbml0CiAganNfdW1hdF9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAE8DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					391,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsAAAAAAAAA5gAAAAAAAAAAAAAAAADwvw"
				],
				[
					392,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAATwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					393,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					394,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AwAAAAAAAAAAAAAATwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8DAAAgIGpzX3NpemVfZml0CiAganNfc2l6ZV9maXQKICBqc19zaXplX2N0b3IKICBqc19zaXplX2RhdGEKICBqc19zaXplX2dldAogIGpzX3NpemVfbmV3CiAganNfc2l6ZV93cmFwCiAganNfc2l6ZV9zZXQKICBqc19zaXplX3RvX3N0cmluZwogIGpzX3NpemVfdG9fc291cmNlCiAganNfc2l6ZV9pbnNwZWN0CiAganNfc2l6ZV9mdW5jcwogIGpzX3NpemVfYWRkCiAganNfc2l6ZV9zdWIKICBqc19zaXplX211bAogIGpzX3NpemVfZGl2CiAganNfc2l6ZV9zeW1ib2xfaXRlcmF0b3IKICBqc19zaXplX2Zyb20KICBqc19hcnJheV90bzxkb3VibGUsIDI+CiAganNfc2l6ZV9maW5hbGl6ZXIKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfc2l6ZV9pbml0CiAganNfc2l6ZV9leHBvcnQKICBqc19zaXplX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAABPAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					395,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAATwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8DAAAgIGpzX3NpemVfZml0CiAganNfc2l6ZV9maXQKICBqc19zaXplX2N0b3IKICBqc19zaXplX2RhdGEKICBqc19zaXplX2dldAogIGpzX3NpemVfbmV3CiAganNfc2l6ZV93cmFwCiAganNfc2l6ZV9zZXQKICBqc19zaXplX3RvX3N0cmluZwogIGpzX3NpemVfdG9fc291cmNlCiAganNfc2l6ZV9pbnNwZWN0CiAganNfc2l6ZV9mdW5jcwogIGpzX3NpemVfYWRkCiAganNfc2l6ZV9zdWIKICBqc19zaXplX211bAogIGpzX3NpemVfZGl2CiAganNfc2l6ZV9zeW1ib2xfaXRlcmF0b3IKICBqc19zaXplX2Zyb20KICBqc19hcnJheV90bzxkb3VibGUsIDI+CiAganNfc2l6ZV9maW5hbGl6ZXIKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfc2l6ZV9pbml0CiAganNfc2l6ZV9leHBvcnQKICBqc19zaXplX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAABPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwMAACAganNfc2l6ZV9maXQKICBqc19zaXplX2ZpdAogIGpzX3NpemVfY3RvcgogIGpzX3NpemVfZGF0YQogIGpzX3NpemVfZ2V0CiAganNfc2l6ZV9uZXcKICBqc19zaXplX3dyYXAKICBqc19zaXplX3NldAogIGpzX3NpemVfdG9fc3RyaW5nCiAganNfc2l6ZV90b19zb3VyY2UKICBqc19zaXplX2luc3BlY3QKICBqc19zaXplX2Z1bmNzCiAganNfc2l6ZV9hZGQKICBqc19zaXplX3N1YgogIGpzX3NpemVfbXVsCiAganNfc2l6ZV9kaXYKICBqc19zaXplX3N5bWJvbF9pdGVyYXRvcgogIGpzX3NpemVfZnJvbQogIGpzX2FycmF5X3RvPGRvdWJsZSwgMj4KICBqc19zaXplX2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19BTElBU19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19ERUYKICBqc19zaXplX2luaXQKICBqc19zaXplX2V4cG9ydAogIGpzX3NpemVfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAE8DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					396,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAATwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					397,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					398,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3882,
								3894
							],
							[
								4009,
								4020
							],
							[
								4352,
								4369
							],
							[
								4812,
								4829
							],
							[
								5214,
								5229
							],
							[
								5645,
								5658
							],
							[
								7860,
								7871
							],
							[
								8440,
								8451
							],
							[
								9020,
								9031
							],
							[
								9336,
								9347
							],
							[
								10274,
								10297
							],
							[
								10691,
								10703
							],
							[
								11226,
								11248
							],
							[
								11380,
								11397
							],
							[
								11782,
								11807
							],
							[
								11865,
								11890
							],
							[
								11950,
								11975
							],
							[
								12025,
								12050
							],
							[
								12098,
								12123
							],
							[
								12169,
								12187
							],
							[
								12241,
								12259
							],
							[
								12311,
								12329
							],
							[
								12387,
								12405
							],
							[
								12461,
								12479
							],
							[
								12537,
								12555
							],
							[
								12615,
								12633
							],
							[
								12693,
								12711
							],
							[
								12773,
								12785
							],
							[
								12825,
								12837
							],
							[
								12877,
								12889
							],
							[
								12918,
								12930
							],
							[
								12959,
								12971
							],
							[
								13000,
								13012
							],
							[
								13041,
								13053
							],
							[
								13080,
								13092
							],
							[
								13147,
								13165
							],
							[
								13278,
								13290
							],
							[
								13323,
								13335
							],
							[
								14283,
								14297
							],
							[
								14378,
								14397
							],
							[
								14611,
								14625
							],
							[
								14663,
								14677
							],
							[
								14730,
								14744
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAATwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					401,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3890,
								3902
							],
							[
								4017,
								4028
							],
							[
								4360,
								4377
							],
							[
								4820,
								4837
							],
							[
								5222,
								5237
							],
							[
								5653,
								5666
							],
							[
								7868,
								7879
							],
							[
								8448,
								8459
							],
							[
								9028,
								9039
							],
							[
								9344,
								9355
							],
							[
								10282,
								10305
							],
							[
								10699,
								10711
							],
							[
								11234,
								11256
							],
							[
								11388,
								11405
							],
							[
								11790,
								11815
							],
							[
								11873,
								11898
							],
							[
								11958,
								11983
							],
							[
								12033,
								12058
							],
							[
								12106,
								12131
							],
							[
								12177,
								12195
							],
							[
								12249,
								12267
							],
							[
								12319,
								12337
							],
							[
								12395,
								12413
							],
							[
								12469,
								12487
							],
							[
								12545,
								12563
							],
							[
								12623,
								12641
							],
							[
								12701,
								12719
							],
							[
								12781,
								12793
							],
							[
								12833,
								12845
							],
							[
								12885,
								12897
							],
							[
								12926,
								12938
							],
							[
								12967,
								12979
							],
							[
								13008,
								13020
							],
							[
								13049,
								13061
							],
							[
								13088,
								13100
							],
							[
								13155,
								13173
							],
							[
								13286,
								13298
							],
							[
								13331,
								13343
							],
							[
								14291,
								14305
							],
							[
								14386,
								14405
							],
							[
								14619,
								14633
							],
							[
								14671,
								14685
							],
							[
								14738,
								14752
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAATwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE8DAAAgIGpzX3NpemVfZml0CiAganNfc2l6ZV9maXQKICBqc19zaXplX2N0b3IKICBqc19zaXplX2RhdGEKICBqc19zaXplX2dldAogIGpzX3NpemVfbmV3CiAganNfc2l6ZV93cmFwCiAganNfc2l6ZV9zZXQKICBqc19zaXplX3RvX3N0cmluZwogIGpzX3NpemVfdG9fc291cmNlCiAganNfc2l6ZV9pbnNwZWN0CiAganNfc2l6ZV9mdW5jcwogIGpzX3NpemVfYWRkCiAganNfc2l6ZV9zdWIKICBqc19zaXplX211bAogIGpzX3NpemVfZGl2CiAganNfc2l6ZV9zeW1ib2xfaXRlcmF0b3IKICBqc19zaXplX2Zyb20KICBqc19hcnJheV90bzxkb3VibGUsIDI+CiAganNfc2l6ZV9maW5hbGl6ZXIKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQUxJQVNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfc2l6ZV9pbml0CiAganNfc2l6ZV9leHBvcnQKICBqc19zaXplX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAABPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwMAACAganNfc2l6ZV9maXQKICBqc19zaXplX2ZpdAogIGpzX3NpemVfY3RvcgogIGpzX3NpemVfZGF0YQogIGpzX3NpemVfZ2V0CiAganNfc2l6ZV9uZXcKICBqc19zaXplX3dyYXAKICBqc19zaXplX3NldAogIGpzX3NpemVfdG9fc3RyaW5nCiAganNfc2l6ZV90b19zb3VyY2UKICBqc19zaXplX2luc3BlY3QKICBqc19zaXplX2Z1bmNzCiAganNfc2l6ZV9hZGQKICBqc19zaXplX3N1YgogIGpzX3NpemVfbXVsCiAganNfc2l6ZV9kaXYKICBqc19zaXplX3N5bWJvbF9pdGVyYXRvcgogIGpzX3NpemVfZnJvbQogIGpzX2FycmF5X3RvPGRvdWJsZSwgMj4KICBqc19zaXplX2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19BTElBU19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgpKU19DRlVOQ19ERUYKICBqc19zaXplX2luaXQKICBqc19zaXplX2V4cG9ydAogIGpzX3NpemVfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAE8DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPAwAAICBqc19zaXplX2ZpdAogIGpzX3NpemVfZml0CiAganNfc2l6ZV9jdG9yCiAganNfc2l6ZV9kYXRhCiAganNfc2l6ZV9nZXQKICBqc19zaXplX25ldwogIGpzX3NpemVfd3JhcAogIGpzX3NpemVfc2V0CiAganNfc2l6ZV90b19zdHJpbmcKICBqc19zaXplX3RvX3NvdXJjZQogIGpzX3NpemVfaW5zcGVjdAogIGpzX3NpemVfZnVuY3MKICBqc19zaXplX2FkZAogIGpzX3NpemVfc3ViCiAganNfc2l6ZV9tdWwKICBqc19zaXplX2RpdgogIGpzX3NpemVfc3ltYm9sX2l0ZXJhdG9yCiAganNfc2l6ZV9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3NpemVfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3NpemVfaW5pdAogIGpzX3NpemVfZXhwb3J0CiAganNfc2l6ZV9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/CMakeLists.txt",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/CMakeLists.txt",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_size.cpp",
						"symkeys":
						[
							[
								679,
								690
							],
							[
								1091,
								1102
							],
							[
								1614,
								1626
							],
							[
								2634,
								2646
							],
							[
								2781,
								2792
							],
							[
								3479,
								3490
							],
							[
								3890,
								3902
							],
							[
								4017,
								4028
							],
							[
								4360,
								4377
							],
							[
								4820,
								4837
							],
							[
								5222,
								5237
							],
							[
								5653,
								5666
							],
							[
								7868,
								7879
							],
							[
								8448,
								8459
							],
							[
								9028,
								9039
							],
							[
								9344,
								9355
							],
							[
								10282,
								10305
							],
							[
								10699,
								10711
							],
							[
								11234,
								11256
							],
							[
								11388,
								11405
							],
							[
								11790,
								11815
							],
							[
								11873,
								11898
							],
							[
								11958,
								11983
							],
							[
								12033,
								12058
							],
							[
								12106,
								12131
							],
							[
								12177,
								12195
							],
							[
								12249,
								12267
							],
							[
								12319,
								12337
							],
							[
								12395,
								12413
							],
							[
								12469,
								12487
							],
							[
								12545,
								12563
							],
							[
								12623,
								12641
							],
							[
								12701,
								12719
							],
							[
								12781,
								12793
							],
							[
								12833,
								12845
							],
							[
								12885,
								12897
							],
							[
								12926,
								12938
							],
							[
								12967,
								12979
							],
							[
								13008,
								13020
							],
							[
								13049,
								13061
							],
							[
								13088,
								13100
							],
							[
								13155,
								13173
							],
							[
								13286,
								13298
							],
							[
								13331,
								13343
							],
							[
								14291,
								14305
							],
							[
								14386,
								14405
							],
							[
								14619,
								14633
							],
							[
								14671,
								14685
							],
							[
								14738,
								14752
							]
						],
						"symlist":
						[
							"js_size_fit",
							"js_size_fit",
							"js_size_ctor",
							"js_size_data",
							"js_size_get",
							"js_size_new",
							"js_size_wrap",
							"js_size_set",
							"js_size_to_string",
							"js_size_to_source",
							"js_size_inspect",
							"js_size_funcs",
							"js_size_add",
							"js_size_sub",
							"js_size_mul",
							"js_size_div",
							"js_size_symbol_iterator",
							"js_size_from",
							"js_array_to<double, 2>",
							"js_size_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_size_init",
							"js_size_export",
							"js_size_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAATwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "js_mat.cpp",
			"settings":
			{
				"buffer_size": 44667,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					427,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"BAAAAMB7AAAAAAAAwXsAAAAAAAAAAAAAwXsAAAAAAADBewAAAAAAAAEAAABtwXsAAAAAAADCewAAAAAAAAAAAADCewAAAAAAAMN7AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMB7AAAAAAAAwXsAAAAAAAAAAAAAAADwvw"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAG17AAAAAAAAbnsAAAAAAAAAAAAAbnsAAAAAAABvewAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG17AAAAAAAAbXsAAAAAAAAAAAAAAADwvw"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAHx7AAAAAAAAfXsAAAAAAAAAAAAAfXsAAAAAAAB+ewAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHx7AAAAAAAAfHsAAAAAAAAAAAAAAADwvw"
				],
				[
					444,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABt7AAAAAAAAHHsAAAAAAAAAAAAAHHsAAAAAAAAcewAAAAAAAAUAAAAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACB7AAAAAAAAG3sAAAAAAAAAAAAAAADwvw"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "\nJSMatData*"
					},
					"DAAAAL0FAAAAAAAAvgUAAAAAAAAAAAAAvgUAAAAAAADABQAAAAAAAAAAAADABQAAAAAAAMEFAAAAAAAAAAAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADDBQAAAAAAAAAAAADDBQAAAAAAAMQFAAAAAAAAAAAAAMQFAAAAAAAAxQUAAAAAAAAAAAAAxQUAAAAAAADGBQAAAAAAAAAAAADGBQAAAAAAAMcFAAAAAAAAAAAAAMcFAAAAAAAAyAUAAAAAAAAAAAAAyAUAAAAAAADJBQAAAAAAAAAAAADJBQAAAAAAAMoFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0FAAAAAAAAvQUAAAAAAAAAAAAAAADwvw"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAAMoFAAAAAAAAywUAAAAAAAAAAAAAywUAAAAAAADMBQAAAAAAAAAAAADMBQAAAAAAAM0FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoFAAAAAAAAygUAAAAAAAAAAAAAAADwvw"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM0FAAAAAAAAzgUAAAAAAAAAAAAAzgUAAAAAAADPBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0FAAAAAAAAzQUAAAAAAAAAAAAAAADwvw"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8FAAAAAAAA0AUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8FAAAAAAAAzwUAAAAAAAAAAAAAAADwvw"
				],
				[
					460,
					1,
					"paste",
					null,
					"AQAAANAFAAAAAAAA8AUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAFAAAAAAAA0AUAAAAAAAAAAAAAAADwvw"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPAFAAAAAAAA8QUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAFAAAAAAAA8AUAAAAAAAAAAAAAAADwvw"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPEFAAAAAAAA8gUAAAAAAAAAAAAA8gUAAAAAAAD0BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEFAAAAAAAA8QUAAAAAAAAAAAAAAADwvw"
				],
				[
					466,
					1,
					"left_delete",
					null,
					"AgAAAPgFAAAAAAAA+AUAAAAAAAAeAAAAdGF0aWNfY2FzdDxKU01hdERhdGEqPihvcGFxdWUp8gUAAAAAAADyBQAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAAFgYAAAAAAAAAAAAAAADwvw"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAPYFAAAAAAAA9wUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYFAAAAAAAA9gUAAAAAAAAAAAAAAADwvw"
				],
				[
					468,
					2,
					"left_delete",
					null,
					"AgAAAPYFAAAAAAAA9gUAAAAAAAABAAAAbfUFAAAAAAAA9QUAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcFAAAAAAAA9wUAAAAAAAAAAAAAAADwvw"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": "mt"
					},
					"AgAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUFAAAAAAAA9QUAAAAAAAAAAAAAAADwvw"
				],
				[
					470,
					1,
					"left_delete",
					null,
					"AQAAAPYFAAAAAAAA9gUAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcFAAAAAAAA9wUAAAAAAAAAAAAAAADwvw"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAPYFAAAAAAAA9wUAAAAAAAAAAAAA9wUAAAAAAAD4BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYFAAAAAAAA9gUAAAAAAAAAAAAAAADwvw"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "\njs:_"
					},
					"BgAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAgGAAAAAAAAAAAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQGAAAAAAAABAYAAAAAAAD////////vfw"
				],
				[
					477,
					2,
					"left_delete",
					null,
					"AgAAAAoGAAAAAAAACgYAAAAAAAABAAAAXwkGAAAAAAAACQYAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsGAAAAAAAACwYAAAAAAAAAAAAAAADwvw"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "_free_rt"
					},
					"CAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADQYAAAAAAAAAAAAADQYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA8GAAAAAAAAAAAAAA8GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAARBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkGAAAAAAAACQYAAAAAAAAAAAAAAADwvw"
				],
				[
					479,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABEGAAAAAAAAEwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEGAAAAAAAAEQYAAAAAAAAAAAAAAADwvw"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAABIGAAAAAAAAEwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					481,
					1,
					"left_delete",
					null,
					"AQAAABIGAAAAAAAAEgYAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMGAAAAAAAAEwYAAAAAAAAAAAAAAADwvw"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "rt,l"
					},
					"BAAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYGAAAAAAAAFwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAADwvw"
				],
				[
					484,
					2,
					"left_delete",
					null,
					"AgAAABYGAAAAAAAAFgYAAAAAAAABAAAAIBUGAAAAAAAAFQYAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcGAAAAAAAAFwYAAAAAAAAAAAAAAADwvw"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": " mat"
					},
					"BAAAABUGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAXBgAAAAAAAAAAAAAXBgAAAAAAABgGAAAAAAAAAAAAABgGAAAAAAAAGQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAADwvw"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABoGAAAAAAAAGwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoGAAAAAAAAGgYAAAAAAAAAAAAAAADwvw"
				],
				[
					489,
					1,
					"left_delete",
					null,
					"AQAAAPEFAAAAAAAA8QUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIFAAAAAAAA8gUAAAAAAAAAAAAAAABmQA"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPEFAAAAAAAA8gUAAAAAAAAAAAAA8gUAAAAAAAD0BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEFAAAAAAAA8QUAAAAAAAAAAAAAAADwvw"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAB0GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAgBgAAAAAAAAAAAADyBQAAAAAAAPIFAAAAAAAAAgAAACAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0GAAAAAAAAHQYAAAAAAAAAAAAAAADwvw"
				],
				[
					497,
					2,
					"left_delete",
					null,
					"AgAAABwGAAAAAAAAHAYAAAAAAAACAAAAICAbBgAAAAAAABsGAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4GAAAAAAAAHgYAAAAAAAAAAAAAAADwvw"
				],
				[
					513,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPx6AAAAAAAADnsAAAAAAAAAAAAAAADwvw"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "static_cast<JSMa"
					},
					"EAAAACF7AAAAAAAAInsAAAAAAAAAAAAAInsAAAAAAAAjewAAAAAAAAAAAAAjewAAAAAAACR7AAAAAAAAAAAAACR7AAAAAAAAJXsAAAAAAAAAAAAAJXsAAAAAAAAmewAAAAAAAAAAAAAmewAAAAAAACd7AAAAAAAAAAAAACd7AAAAAAAAKHsAAAAAAAAAAAAAKHsAAAAAAAApewAAAAAAAAAAAAApewAAAAAAACp7AAAAAAAAAAAAACp7AAAAAAAAK3sAAAAAAAAAAAAAK3sAAAAAAAAsewAAAAAAAAAAAAAsewAAAAAAAC17AAAAAAAAAAAAAC17AAAAAAAALnsAAAAAAAAAAAAALnsAAAAAAAAvewAAAAAAAAAAAAAvewAAAAAAADB7AAAAAAAAAAAAADB7AAAAAAAAMXsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACF7AAAAAAAAIXsAAAAAAAAAAAAAAADwvw"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "tData>"
					},
					"BgAAADF7AAAAAAAAMnsAAAAAAAAAAAAAMnsAAAAAAAAzewAAAAAAAAAAAAAzewAAAAAAADR7AAAAAAAAAAAAADR7AAAAAAAANXsAAAAAAAAAAAAANXsAAAAAAAA2ewAAAAAAAAAAAAA2ewAAAAAAADd7AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADF7AAAAAAAAMXsAAAAAAAAAAAAAAADwvw"
				],
				[
					526,
					1,
					"left_delete",
					null,
					"AQAAADZ7AAAAAAAANnsAAAAAAAABAAAAPg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADd7AAAAAAAAN3sAAAAAAAAAAAAAAADwvw"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "*>("
					},
					"AwAAADZ7AAAAAAAAN3sAAAAAAAAAAAAAN3sAAAAAAAA4ewAAAAAAAAAAAAA4ewAAAAAAADl7AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADZ7AAAAAAAANnsAAAAAAAAAAAAAAADwvw"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFt7AAAAAAAAXHsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFt7AAAAAAAAW3sAAAAAAAAAAAAAAADwvw"
				],
				[
					535,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALd6AAAAAAAAt3oAAAAAAAAAAAAAAADwvw"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAAIhhAAAAAAAAiWEAAAAAAAAAAAAAiWEAAAAAAACJYQAAAAAAAAUAAABQcm90b4lhAAAAAAAAimEAAAAAAAAAAAAAimEAAAAAAACLYQAAAAAAAAAAAACLYQAAAAAAAIxhAAAAAAAAAAAAAIxhAAAAAAAAjWEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIhhAAAAAAAAjWEAAAAAAAAAAAAAAADwvw"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "js_mat_clas"
					},
					"DAAAAJNhAAAAAAAAlGEAAAAAAAAAAAAAlGEAAAAAAACUYQAAAAAAAAkAAABtYXRfcHJvdG+UYQAAAAAAAJVhAAAAAAAAAAAAAJVhAAAAAAAAlmEAAAAAAAAAAAAAlmEAAAAAAACXYQAAAAAAAAAAAACXYQAAAAAAAJhhAAAAAAAAAAAAAJhhAAAAAAAAmWEAAAAAAAAAAAAAmWEAAAAAAACaYQAAAAAAAAAAAACaYQAAAAAAAJthAAAAAAAAAAAAAJthAAAAAAAAnGEAAAAAAAAAAAAAnGEAAAAAAACdYQAAAAAAAAAAAACdYQAAAAAAAJ5hAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJNhAAAAAAAAnGEAAAAAAAAAAAAAAADwvw"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "s_uid"
					},
					"BQAAAJ5hAAAAAAAAn2EAAAAAAAAAAAAAn2EAAAAAAACgYQAAAAAAAAAAAACgYQAAAAAAAKFhAAAAAAAAAAAAAKFhAAAAAAAAomEAAAAAAAAAAAAAomEAAAAAAACjYQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ5hAAAAAAAAnmEAAAAAAAAAAAAAAADwvw"
				],
				[
					558,
					3,
					"left_delete",
					null,
					"AwAAAKJhAAAAAAAAomEAAAAAAAABAAAAZKFhAAAAAAAAoWEAAAAAAAABAAAAaaBhAAAAAAAAoGEAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKNhAAAAAAAAo2EAAAAAAAAAAAAAAADwvw"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAKBhAAAAAAAAoWEAAAAAAAAAAAAAoWEAAAAAAACiYQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKBhAAAAAAAAoGEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_draw.cpp",
			"settings":
			{
				"buffer_size": 16118,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					40,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAAOwyAAAAAAAA7TIAAAAAAAAAAAAA7TIAAAAAAADuMgAAAAAAAAAAAADuMgAAAAAAAO8yAAAAAAAAAAAAAO8yAAAAAAAA8DIAAAAAAAAAAAAA8DIAAAAAAADxMgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwyAAAAAAAA7DIAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgyAAAAAAAABDMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "init_module.cpp",
			"settings":
			{
				"buffer_size": 3045,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"cut",
					null,
					"AQAAAJIDAAAAAAAAkgMAAAAAAAA4AAAAZXh0ZXJuICJDIiB2b2lkIGpzX2N2X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAAJIDAAAAAAAAygMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIDAAAAAAAAkgMAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"paste",
					null,
					"AgAAAJIDAAAAAAAAHwcAAAAAAAAAAAAAHwcAAAAAAAAfBwAAAAAAADgAAABleHRlcm4gIkMiIHZvaWQganNfY3ZfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAkgMAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"paste",
					null,
					"AgAAACwKAAAAAAAAuwsAAAAAAAAAAAAAuwsAAAAAAAC7CwAAAAAAAFICAAAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkNMQUhFIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkNvbnRvdXIiKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiRHJhdyIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIk1hdCIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJQb2ludCIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJQb2ludEl0ZXJhdG9yIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJlY3QiKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU2l6ZSIpOwogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJTbGljZUl0ZXJhdG9yIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlN1YmRpdjJEIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlVNYXQiKTsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiVGlja01ldGVyIik7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlZpZGVvQ2FwdHVyZSIpOwoKICBqc19jdl9leHBvcnQoY3R4LCBtKTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwKAAAAAAAAfgwAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAACsKAAAAAAAAKwoAAAAAAAABAAAAICoKAAAAAAAAKgoAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwKAAAAAAAALAoAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADJCwAAI2luY2x1ZGUgInF1aWNranMvcXVpY2tqcy5oIgojaW5jbHVkZSAidXRpbC5ocHAiCgpleHRlcm4gIkMiIGludCBqc19jbGFoZV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX2NvbnRvdXJfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19jdl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX2RyYXdfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19saW5lX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfbWF0X2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfcG9pbnRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19wb2ludF9pdGVyYXRvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX3JlY3RfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19zaXplX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfc2xpY2VfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19zdWJkaXYyZF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX3VtYXRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc191dGlsaXR5X2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfdmlkZW9fY2FwdHVyZV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgoKZXh0ZXJuICJDIiB2b2lkIGpzX2NsYWhlX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfY29udG91cl9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX2N2X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfZHJhd19leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX2xpbmVfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19tYXRfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19wb2ludF9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3BvaW50X2l0ZXJhdG9yX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfcmVjdF9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3NpemVfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19zbGljZV9pdGVyYXRvcl9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3N1YmRpdjJkX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfdW1hdF9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3V0aWxpdHlfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc192aWRlb19jYXB0dXJlX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKaW50CmpzX29wZW5jdl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIGpzX2NsYWhlX2luaXQoY3R4LCBtKTsKICBqc19jb250b3VyX2luaXQoY3R4LCBtKTsKICBqc19jdl9pbml0KGN0eCwgbSk7CiAganNfZHJhd19pbml0KGN0eCwgbSk7CiAganNfbGluZV9pbml0KGN0eCwgbSk7CiAganNfbWF0X2luaXQoY3R4LCBtKTsKICBqc19wb2ludF9pbml0KGN0eCwgbSk7CiAganNfcG9pbnRfaXRlcmF0b3JfaW5pdChjdHgsIG0pOwogIGpzX3JlY3RfaW5pdChjdHgsIG0pOwogIGpzX3NpemVfaW5pdChjdHgsIG0pOwogIGpzX3NsaWNlX2l0ZXJhdG9yX2luaXQoY3R4LCBtKTsKICBqc19zdWJkaXYyZF9pbml0KGN0eCwgbSk7CiAganNfdW1hdF9pbml0KGN0eCwgbSk7CiAganNfdXRpbGl0eV9pbml0KGN0eCwgbSk7CiAganNfdmlkZW9fY2FwdHVyZV9pbml0KGN0eCwgbSk7CgogIHJldHVybiAwOwp9CgojaWZkZWYgSlNfT1BFTkNWX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfb3BlbmN2CiNlbmRpZgoKZXh0ZXJuICJDIiBWSVNJQkxFIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfb3BlbmN2X2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7Cgpqc19jbGFoZV9leHBvcnQoY3R4LCBtKTsKanNfY29udG91cl9leHBvcnQoY3R4LCBtKTsKanNfY3ZfZXhwb3J0KGN0eCwgbSk7CmpzX2RyYXdfZXhwb3J0KGN0eCwgbSk7CmpzX2xpbmVfZXhwb3J0KGN0eCwgbSk7CmpzX21hdF9leHBvcnQoY3R4LCBtKTsKanNfcG9pbnRfZXhwb3J0KGN0eCwgbSk7CmpzX3BvaW50X2l0ZXJhdG9yX2V4cG9ydChjdHgsIG0pOwpqc19yZWN0X2V4cG9ydChjdHgsIG0pOwpqc19zaXplX2V4cG9ydChjdHgsIG0pOwpqc19zbGljZV9pdGVyYXRvcl9leHBvcnQoY3R4LCBtKTsKanNfc3ViZGl2MmRfZXhwb3J0KGN0eCwgbSk7CmpzX3VtYXRfZXhwb3J0KGN0eCwgbSk7CmpzX3V0aWxpdHlfZXhwb3J0KGN0eCwgbSk7CmpzX3ZpZGVvX2NhcHR1cmVfZXhwb3J0KGN0eCwgbSk7CgoKICByZXR1cm4gbTsKfQoAAAAAAAAAAOULAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoKAAAAAAAAKgoAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADlCwAAI2luY2x1ZGUgInF1aWNranMvcXVpY2tqcy5oIgojaW5jbHVkZSAidXRpbC5ocHAiCgpleHRlcm4gIkMiIGludCBqc19jbGFoZV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX2NvbnRvdXJfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19jdl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX2RyYXdfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19saW5lX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfbWF0X2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfcG9pbnRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19wb2ludF9pdGVyYXRvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX3JlY3RfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19zaXplX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfc2xpY2VfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc19zdWJkaXYyZF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgaW50IGpzX3VtYXRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIGludCBqc191dGlsaXR5X2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiBpbnQganNfdmlkZW9fY2FwdHVyZV9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHZvaWQganNfY2xhaGVfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19jb250b3VyX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfY3ZfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19kcmF3X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfbGluZV9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX21hdF9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3BvaW50X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfcG9pbnRfaXRlcmF0b3JfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc19yZWN0X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfc2l6ZV9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3NsaWNlX2l0ZXJhdG9yX2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfc3ViZGl2MmRfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CmV4dGVybiAiQyIgdm9pZCBqc191bWF0X2V4cG9ydChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwpleHRlcm4gIkMiIHZvaWQganNfdXRpbGl0eV9leHBvcnQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKZXh0ZXJuICJDIiB2b2lkIGpzX3ZpZGVvX2NhcHR1cmVfZXhwb3J0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgppbnQKanNfb3BlbmN2X2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAganNfY2xhaGVfaW5pdChjdHgsIG0pOwogIGpzX2NvbnRvdXJfaW5pdChjdHgsIG0pOwogIGpzX2N2X2luaXQoY3R4LCBtKTsKICBqc19kcmF3X2luaXQoY3R4LCBtKTsKICBqc19saW5lX2luaXQoY3R4LCBtKTsKICBqc19tYXRfaW5pdChjdHgsIG0pOwogIGpzX3BvaW50X2luaXQoY3R4LCBtKTsKICBqc19wb2ludF9pdGVyYXRvcl9pbml0KGN0eCwgbSk7CiAganNfcmVjdF9pbml0KGN0eCwgbSk7CiAganNfc2l6ZV9pbml0KGN0eCwgbSk7CiAganNfc2xpY2VfaXRlcmF0b3JfaW5pdChjdHgsIG0pOwogIGpzX3N1YmRpdjJkX2luaXQoY3R4LCBtKTsKICBqc191bWF0X2luaXQoY3R4LCBtKTsKICBqc191dGlsaXR5X2luaXQoY3R4LCBtKTsKICBqc192aWRlb19jYXB0dXJlX2luaXQoY3R4LCBtKTsKCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19PUEVOQ1ZfTU9EVUxFCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9vcGVuY3YKI2VuZGlmCgpleHRlcm4gIkMiIFZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19vcGVuY3ZfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKCiAganNfY2xhaGVfZXhwb3J0KGN0eCwgbSk7CiAganNfY29udG91cl9leHBvcnQoY3R4LCBtKTsKICBqc19jdl9leHBvcnQoY3R4LCBtKTsKICBqc19kcmF3X2V4cG9ydChjdHgsIG0pOwogIGpzX2xpbmVfZXhwb3J0KGN0eCwgbSk7CiAganNfbWF0X2V4cG9ydChjdHgsIG0pOwogIGpzX3BvaW50X2V4cG9ydChjdHgsIG0pOwogIGpzX3BvaW50X2l0ZXJhdG9yX2V4cG9ydChjdHgsIG0pOwogIGpzX3JlY3RfZXhwb3J0KGN0eCwgbSk7CiAganNfc2l6ZV9leHBvcnQoY3R4LCBtKTsKICBqc19zbGljZV9pdGVyYXRvcl9leHBvcnQoY3R4LCBtKTsKICBqc19zdWJkaXYyZF9leHBvcnQoY3R4LCBtKTsKICBqc191bWF0X2V4cG9ydChjdHgsIG0pOwogIGpzX3V0aWxpdHlfZXhwb3J0KGN0eCwgbSk7CiAganNfdmlkZW9fY2FwdHVyZV9leHBvcnQoY3R4LCBtKTsKCiAgcmV0dXJuIG07Cn0KAAAAAAAAAADlCwAAAAAAAAAAAAAAAAAAAAAAAOULAAAAAAAAAAAAAAAAAAAAAAAA5QsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkKAAAAAAAAKQoAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 4185,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_video_capture.cpp",
			"settings":
			{
				"buffer_size": 6404,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "eter"
					},
					"BAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAABjBwAAAAAAAGQHAAAAAAAAAAAAAGQHAAAAAAAAZQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQcAAAAAAABhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					3,
					"left_delete",
					null,
					"AwAAAGQHAAAAAAAAZAcAAAAAAAABAAAAcmMHAAAAAAAAYwcAAAAAAAABAAAAZWIHAAAAAAAAYgcAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQcAAAAAAABlBwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "terh"
					},
					"BAAAAGIHAAAAAAAAYwcAAAAAAAAAAAAAYwcAAAAAAABkBwAAAAAAAAAAAABkBwAAAAAAAGUHAAAAAAAAAAAAAGUHAAAAAAAAZgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgcAAAAAAABiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgcAAAAAAABmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					4,
					"left_delete",
					null,
					"BAAAAGYHAAAAAAAAZgcAAAAAAAABAAAAIGUHAAAAAAAAZQcAAAAAAAABAAAAaGQHAAAAAAAAZAcAAAAAAAABAAAAcmMHAAAAAAAAYwcAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAGMHAAAAAAAAZAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwcAAAAAAABjBwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAGMHAAAAAAAAYwcAAAAAAAABAAAAeGIHAAAAAAAAYgcAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "xter"
					},
					"BAAAAGIHAAAAAAAAYwcAAAAAAAAAAAAAYwcAAAAAAABkBwAAAAAAAAAAAABkBwAAAAAAAGUHAAAAAAAAAAAAAGUHAAAAAAAAZgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYgcAAAAAAABiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgcAAAAAAABmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAGYHAAAAAAAAZgcAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgcAAAAAAABmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " \"C\""
					},
					"BAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABpBwAAAAAAAAAAAABpBwAAAAAAAGoHAAAAAAAAAAAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwcAAAAAAABnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGsHAAAAAAAAbAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawcAAAAAAABrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_cv.cpp",
			"settings":
			{
				"buffer_size": 84714,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					237,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUrAAAAAAAA9SsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_umat.hpp",
			"settings":
			{
				"buffer_size": 1863,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAABHBwAAI2lmbmRlZiBKU19VTUFUX0hQUAojZGVmaW5lIEpTX1VNQVRfSFBQCgojaW5jbHVkZSAianNiaW5kaW5ncy5ocHAiCiNpbmNsdWRlICJqc19hbGxvYy5ocHAiCiNpbmNsdWRlICJqc19hcnJheS5ocHAiCgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3VtYXRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CgpleHRlcm4gSlNWYWx1ZSB1bWF0X3Byb3RvLCB1bWF0X2NsYXNzOwpleHRlcm4gSlNDbGFzc0lEIGpzX3VtYXRfY2xhc3NfaWQ7CgpWSVNJQkxFIEpTVmFsdWUganNfdW1hdF9uZXcoSlNDb250ZXh0KiwgdWludDMyX3QsIHVpbnQzMl90LCBpbnQpOwppbnQganNfdW1hdF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CkpTTW9kdWxlRGVmKiBqc19pbml0X3VtYXRfbW9kdWxlKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7CnZvaWQganNfdW1hdF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpOwoKVklTSUJMRSBKU1VNYXREYXRhKiBqc191bWF0X2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpOwoKc3RhdGljIGlubGluZSBKU0lucHV0T3V0cHV0QXJyYXkKanNfdW1hdF9vcl9tYXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGN2OjpNYXQqIG1hdDsKICBjdjo6VU1hdCogdW1hdDsKCiAgaWYoKHVtYXQgPSBzdGF0aWNfY2FzdDxjdjo6VU1hdCo+KEpTX0dldE9wYXF1ZSh2YWx1ZSwganNfdW1hdF9jbGFzc19pZCkpKSkKICAgIHJldHVybiBKU0lucHV0T3V0cHV0QXJyYXkoKnVtYXQpOwogIGlmKChtYXQgPSBzdGF0aWNfY2FzdDxjdjo6TWF0Kj4oSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19tYXRfY2xhc3NfaWQpKSkpCiAgICByZXR1cm4gSlNJbnB1dE91dHB1dEFycmF5KCptYXQpOwoKICByZXR1cm4gY3Y6Om5vQXJyYXkoKTsKfQoKc3RhdGljIGlubGluZSBKU0lucHV0QXJyYXkKanNfaW5wdXRfYXJyYXkoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIGN2OjpNYXQqIG1hdDsKICBjdjo6VU1hdCogdW1hdDsKCiAgaWYoKHVtYXQgPSBzdGF0aWNfY2FzdDxjdjo6VU1hdCo+KEpTX0dldE9wYXF1ZSh2YWx1ZSwganNfdW1hdF9jbGFzc19pZCkpKSkKICAgIHJldHVybiBKU0lucHV0QXJyYXkoKnVtYXQpOwogIGlmKChtYXQgPSBzdGF0aWNfY2FzdDxjdjo6TWF0Kj4oSlNfR2V0T3BhcXVlKHZhbHVlLCBqc19tYXRfY2xhc3NfaWQpKSkpCiAgICByZXR1cm4gSlNJbnB1dEFycmF5KCptYXQpOwoKICBpZihqc19pc19hcnJheShjdHgsIHZhbHVlKSkgewogICAgc3RkOjp2ZWN0b3I8ZG91YmxlPiBhcnI7CiAgICBjdjo6U2NhbGFyIHNjYWxhcjsKICAgIGpzX2FycmF5X3RvKGN0eCwgdmFsdWUsIGFycik7CiAgICBmb3Ioc2l6ZV90IGkgPSAwOyBpIDwgYXJyLnNpemUoKTsgaSsrKSBzY2FsYXJbaV0gPSBhcnJbaV07CiAgICByZXR1cm4gSlNJbnB1dEFycmF5KHNjYWxhcik7CiAgfQoKICByZXR1cm4gY3Y6Om5vQXJyYXkoKTsKfQoKc3RhdGljIGlubGluZSBKU1ZhbHVlCmpzX3VtYXRfd3JhcChKU0NvbnRleHQqIGN0eCwgY29uc3QgY3Y6OlVNYXQmIHVtYXQpIHsKICBKU1ZhbHVlIHJldDsKICBKU1VNYXREYXRhKiBzOwogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCB1bWF0X3Byb3RvLCBqc191bWF0X2NsYXNzX2lkKTsKCiAgcyA9IGpzX2FsbG9jYXRlPGN2OjpVTWF0PihjdHgpOwoKICBuZXcocykgY3Y6OlVNYXQodW1hdCk7CgogIEpTX1NldE9wYXF1ZShyZXQsIHMpOwogIHJldHVybiByZXQ7Cn0KfQoKI2VuZGlmIC8qIGRlZmluZWQoSlNfVU1BVF9IUFApICovAAAAAAAAAABHBwAAAAAAAAAAAAAAAAAAAAAAAEcHAAAAAAAAAAAAAAAAAAAAAAAARwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_size.cpp",
			"settings":
			{
				"buffer_size": 14933,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					420,
					1,
					"insert",
					{
						"characters": "TOI"
					},
					"AwAAAGcvAAAAAAAAaC8AAAAAAAAAAAAAaC8AAAAAAABpLwAAAAAAAAAAAABpLwAAAAAAAGovAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcvAAAAAAAAZy8AAAAAAAAAAAAAAADwvw"
				],
				[
					421,
					1,
					"left_delete",
					null,
					"AQAAAGkvAAAAAAAAaS8AAAAAAAABAAAASQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGovAAAAAAAAai8AAAAAAAAAAAAAAADwvw"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "IB"
					},
					"AgAAAGkvAAAAAAAAai8AAAAAAAAAAAAAai8AAAAAAABrLwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkvAAAAAAAAaS8AAAAAAAAAAAAAAADwvw"
				],
				[
					423,
					2,
					"left_delete",
					null,
					"AgAAAGovAAAAAAAAai8AAAAAAAABAAAAQmkvAAAAAAAAaS8AAAAAAAABAAAASQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsvAAAAAAAAay8AAAAAAAAAAAAAAADwvw"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "OB"
					},
					"AgAAAGkvAAAAAAAAai8AAAAAAAAAAAAAai8AAAAAAABrLwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkvAAAAAAAAaS8AAAAAAAAAAAAAAADwvw"
				],
				[
					425,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_TOOBJECT",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_TOOBJECT"
					},
					"AgAAAFsvAAAAAAAAWy8AAAAAAAAQAAAAU0laRV9NRVRIT0RfVE9PQlsvAAAAAAAAby8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsvAAAAAAAAay8AAAAAAAAAAAAAAADwvw"
				],
				[
					429,
					1,
					"paste",
					null,
					"AgAAAKYvAAAAAAAAsi8AAAAAAAAAAAAAsi8AAAAAAACyLwAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYvAAAAAAAApy8AAAAAAAAAAAAAAADwvw"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "TOAR"
					},
					"BAAAALIvAAAAAAAAsy8AAAAAAAAAAAAAsy8AAAAAAAC0LwAAAAAAAAAAAAC0LwAAAAAAALUvAAAAAAAAAAAAALUvAAAAAAAAti8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIvAAAAAAAAsi8AAAAAAAAAAAAAAADwvw"
				],
				[
					431,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_TOARRAY",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_TOARRAY"
					},
					"AgAAAKYvAAAAAAAApi8AAAAAAAAQAAAAU0laRV9NRVRIT0RfVE9BUqYvAAAAAAAAuS8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYvAAAAAAAAti8AAAAAAAAAAAAAAADwvw"
				],
				[
					437,
					1,
					"paste",
					null,
					"AgAAAPEvAAAAAAAA/S8AAAAAAAAAAAAA/S8AAAAAAAD9LwAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEvAAAAAAAA8i8AAAAAAAAAAAAAAADwvw"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAP0vAAAAAAAA/i8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0vAAAAAAAA/S8AAAAAAAAAAAAAAADwvw"
				],
				[
					439,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_FITWIDTH",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_FITWIDTH"
					},
					"AgAAAPEvAAAAAAAA8S8AAAAAAAANAAAAU0laRV9NRVRIT0RfRvEvAAAAAAAABTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4vAAAAAAAA/i8AAAAAAAAAAAAAAADwvw"
				],
				[
					446,
					1,
					"paste",
					null,
					"AgAAAD4wAAAAAAAASjAAAAAAAAAAAAAASjAAAAAAAABKMAAAAAAAAAEAAAA1",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4wAAAAAAAAPzAAAAAAAAAAAAAAAADwvw"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAEowAAAAAAAASzAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEowAAAAAAAASjAAAAAAAAAAAAAAAADwvw"
				],
				[
					448,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_FITHEIGHT",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_FITHEIGHT"
					},
					"AgAAAD4wAAAAAAAAPjAAAAAAAAANAAAAU0laRV9NRVRIT0RfRj4wAAAAAAAAUzAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEswAAAAAAAASzAAAAAAAAAAAAAAAADwvw"
				],
				[
					452,
					1,
					"paste",
					null,
					"AgAAAIwwAAAAAAAAmDAAAAAAAAAAAAAAmDAAAAAAAACYMAAAAAAAAAEAAAA2",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwwAAAAAAAAjTAAAAAAAAAAAAAAAADwvw"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAJgwAAAAAAAAmTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgwAAAAAAAAmDAAAAAAAAAAAAAAAADwvw"
				],
				[
					454,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_FITINSIDE",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_FITINSIDE"
					},
					"AgAAAIwwAAAAAAAAjDAAAAAAAAANAAAAU0laRV9NRVRIT0RfRowwAAAAAAAAoTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkwAAAAAAAAmTAAAAAAAAAAAAAAAADwvw"
				],
				[
					458,
					1,
					"paste",
					null,
					"AgAAANswAAAAAAAA5zAAAAAAAAAAAAAA5zAAAAAAAADnMAAAAAAAAAEAAAA3",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANswAAAAAAAA3DAAAAAAAAAAAAAAAADwvw"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAOcwAAAAAAAA6DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcwAAAAAAAA5zAAAAAAAAAAAAAAAADwvw"
				],
				[
					460,
					1,
					"insert_completion",
					{
						"completion": "SIZE_METHOD_FITOUTSIDE",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SIZE_METHOD_FITOUTSIDE"
					},
					"AgAAANswAAAAAAAA2zAAAAAAAAANAAAAU0laRV9NRVRIT0RfRtswAAAAAAAA8TAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgwAAAAAAAA6DAAAAAAAAAAAAAAAADwvw"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "if(("
					},
					"BAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAABCFwAAAAAAAEMXAAAAAAAAAAAAAEMXAAAAAAAARBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAXAAAAAAAAQBcAAAAAAAAAAAAAAADwvw"
				],
				[
					503,
					1,
					"left_delete",
					null,
					"AQAAAGIXAAAAAAAAYhcAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMXAAAAAAAAYxcAAAAAAAD////////vfw"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAGIXAAAAAAAAYxcAAAAAAAAAAAAAYxcAAAAAAABkFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIXAAAAAAAAYhcAAAAAAAAAAAAAAADwvw"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGQXAAAAAAAAZRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQXAAAAAAAAZBcAAAAAAAAAAAAAAADwvw"
				],
				[
					506,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGUXAAAAAAAAZxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUXAAAAAAAAZRcAAAAAAAAAAAAAAADwvw"
				],
				[
					507,
					1,
					"right_delete",
					null,
					"AQAAAGYXAAAAAAAAZhcAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYXAAAAAAAAZhcAAAAAAAAAAAAAAADwvw"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADWFwAAAAAAAAAAAADWFwAAAAAAANcXAAAAAAAAAAAAANAXAAAAAAAA0BcAAAAAAAAGAAAAICAgICAg0BcAAAAAAADUFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8XAAAAAAAAzxcAAAAAAAAAAAAAAAB2QA"
				],
				[
					511,
					1,
					"indent",
					null,
					"AwAAAGcXAAAAAAAAaRcAAAAAAAAAAAAArRcAAAAAAACvFwAAAAAAAAAAAADUFwAAAAAAANYXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUXAAAAAAAAbBcAAAAAAAAAAAAAAABEQA"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "\nKSS"
					},
					"BgAAADkXAAAAAAAAOhcAAAAAAAAAAAAAOhcAAAAAAAA+FwAAAAAAAAAAAAA+FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAABCFwAAAAAAAEMXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkXAAAAAAAAORcAAAAAAAAAAAAAAADwvw"
				],
				[
					562,
					3,
					"left_delete",
					null,
					"AwAAAD4XAAAAAAAAPhcAAAAAAAACAAAAICA8FwAAAAAAADwXAAAAAAAAAgAAACAgOhcAAAAAAAA6FwAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAXAAAAAAAAQBcAAAAAAAAAAAAAAABIQA"
				],
				[
					569,
					1,
					"paste",
					null,
					"AgAAADoXAAAAAAAAVBcAAAAAAAAAAAAAVBcAAAAAAABUFwAAAAAAAAMAAABLU1M",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoXAAAAAAAAPRcAAAAAAAAAAAAAAADwvw"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "othe3r"
					},
					"BwAAAE8XAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABQFwAAAAAAAAQAAABzaXplUBcAAAAAAABRFwAAAAAAAAAAAABRFwAAAAAAAFIXAAAAAAAAAAAAAFIXAAAAAAAAUxcAAAAAAAAAAAAAUxcAAAAAAABUFwAAAAAAAAAAAABUFwAAAAAAAFUXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8XAAAAAAAAUxcAAAAAAAAAAAAAAADwvw"
				],
				[
					574,
					2,
					"left_delete",
					null,
					"AgAAAFQXAAAAAAAAVBcAAAAAAAABAAAAclMXAAAAAAAAUxcAAAAAAAABAAAAMw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUXAAAAAAAAVRcAAAAAAAAAAAAAAADwvw"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": "r;"
					},
					"AgAAAFMXAAAAAAAAVBcAAAAAAAAAAAAAVBcAAAAAAABVFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMXAAAAAAAAUxcAAAAAAAAAAAAAAADwvw"
				],
				[
					577,
					1,
					"left_delete",
					null,
					"AQAAAFUXAAAAAAAAVRcAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYXAAAAAAAAVhcAAAAAAAAAAAAAAADwvw"
				],
				[
					580,
					4,
					"left_delete",
					null,
					"BAAAAG8XAAAAAAAAbxcAAAAAAAABAAAAYW4XAAAAAAAAbhcAAAAAAAABAAAAdG0XAAAAAAAAbRcAAAAAAAABAAAAYWwXAAAAAAAAbBcAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAXAAAAAAAAcBcAAAAAAAAAAAAAAADwvw"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": "read"
					},
					"BAAAAGwXAAAAAAAAbRcAAAAAAAAAAAAAbRcAAAAAAABuFwAAAAAAAAAAAABuFwAAAAAAAG8XAAAAAAAAAAAAAG8XAAAAAAAAcBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwXAAAAAAAAbBcAAAAAAAAAAAAAAADwvw"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF8XAAAAAAAAYBcAAAAAAAAAAAAAYBcAAAAAAABgFwAAAAAAAAUAAAAoYSA9IA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8XAAAAAAAAZBcAAAAAAAAAAAAAAADwvw"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHkXAAAAAAAAehcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkXAAAAAAAAeRcAAAAAAAAAAAAAAADwvw"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": " &/"
					},
					"AwAAAHoXAAAAAAAAexcAAAAAAAAAAAAAexcAAAAAAAB8FwAAAAAAAAAAAAB8FwAAAAAAAH0XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoXAAAAAAAAehcAAAAAAAAAAAAAAADwvw"
				],
				[
					597,
					1,
					"left_delete",
					null,
					"AQAAAHwXAAAAAAAAfBcAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0XAAAAAAAAfRcAAAAAAAAAAAAAAADwvw"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": "ptj"
					},
					"AwAAAHwXAAAAAAAAfRcAAAAAAAAAAAAAfRcAAAAAAAB+FwAAAAAAAAAAAAB+FwAAAAAAAH8XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwXAAAAAAAAfBcAAAAAAAAAAAAAAADwvw"
				],
				[
					599,
					3,
					"left_delete",
					null,
					"AwAAAH4XAAAAAAAAfhcAAAAAAAABAAAAan0XAAAAAAAAfRcAAAAAAAABAAAAdHwXAAAAAAAAfBcAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8XAAAAAAAAfxcAAAAAAAAAAAAAAADwvw"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "othewr"
					},
					"BgAAAHwXAAAAAAAAfRcAAAAAAAAAAAAAfRcAAAAAAAB+FwAAAAAAAAAAAAB+FwAAAAAAAH8XAAAAAAAAAAAAAH8XAAAAAAAAgBcAAAAAAAAAAAAAgBcAAAAAAACBFwAAAAAAAAAAAACBFwAAAAAAAIIXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwXAAAAAAAAfBcAAAAAAAAAAAAAAADwvw"
				],
				[
					601,
					2,
					"left_delete",
					null,
					"AgAAAIEXAAAAAAAAgRcAAAAAAAABAAAAcoAXAAAAAAAAgBcAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIXAAAAAAAAghcAAAAAAAAAAAAAAADwvw"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAIAXAAAAAAAAgRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAXAAAAAAAAgBcAAAAAAAAAAAAAAADwvw"
				],
				[
					604,
					1,
					"left_delete",
					null,
					"AQAAAIIXAAAAAAAAghcAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMXAAAAAAAAgxcAAAAAAAAAAAAAAADwvw"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIIXAAAAAAAAgxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIXAAAAAAAAghcAAAAAAAAAAAAAAADwvw"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "argc"
					},
					"BAAAAF8XAAAAAAAAYBcAAAAAAAAAAAAAYBcAAAAAAABhFwAAAAAAAAAAAABhFwAAAAAAAGIXAAAAAAAAAAAAAGIXAAAAAAAAYxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8XAAAAAAAAXxcAAAAAAAAAAAAAAADwvw"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAGMXAAAAAAAAZBcAAAAAAAAAAAAAZBcAAAAAAABlFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMXAAAAAAAAYxcAAAAAAAAAAAAAAADwvw"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": " 0&&"
					},
					"BAAAAGUXAAAAAAAAZhcAAAAAAAAAAAAAZhcAAAAAAABnFwAAAAAAAAAAAABnFwAAAAAAAGgXAAAAAAAAAAAAAGgXAAAAAAAAaRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUXAAAAAAAAZRcAAAAAAAAAAAAAAADwvw"
				],
				[
					613,
					1,
					"left_delete",
					null,
					"AQAAAIwXAAAAAAAAjBcAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0XAAAAAAAAjRcAAAAAAAAAAAAAAADwvw"
				],
				[
					616,
					3,
					"left_delete",
					null,
					"AwAAALQXAAAAAAAAtBcAAAAAAAABAAAAPrMXAAAAAAAAsxcAAAAAAAABAAAALbIXAAAAAAAAshcAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUXAAAAAAAAtRcAAAAAAAAAAAAAAADwvw"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": "opt"
					},
					"AwAAALIXAAAAAAAAsxcAAAAAAAAAAAAAsxcAAAAAAAC0FwAAAAAAAAAAAAC0FwAAAAAAALUXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIXAAAAAAAAshcAAAAAAAAAAAAAAADwvw"
				],
				[
					618,
					2,
					"left_delete",
					null,
					"AgAAALQXAAAAAAAAtBcAAAAAAAABAAAAdLMXAAAAAAAAsxcAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUXAAAAAAAAtRcAAAAAAAAAAAAAAADwvw"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "ther."
					},
					"BQAAALMXAAAAAAAAtBcAAAAAAAAAAAAAtBcAAAAAAAC1FwAAAAAAAAAAAAC1FwAAAAAAALYXAAAAAAAAAAAAALYXAAAAAAAAtxcAAAAAAAAAAAAAtxcAAAAAAAC4FwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMXAAAAAAAAsxcAAAAAAAAAAAAAAADwvw"
				],
				[
					627,
					1,
					"paste",
					null,
					"AgAAAM4XAAAAAAAA1BcAAAAAAAAAAAAA1BcAAAAAAADUFwAAAAAAAAQAAABhLT5o",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4XAAAAAAAA0hcAAAAAAAAAAAAAAADwvw"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAANQXAAAAAAAA1RcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQXAAAAAAAA1BcAAAAAAAAAAAAAAADwvw"
				],
				[
					654,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAXAAAAAAAA3BcAAAAAAAAAAAAAAADwvw"
				],
				[
					673,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIoWAAAAAAAAixYAAAAAAAAAAAAAixYAAAAAAACLFgAAAAAAAAUAAAAsICphOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoWAAAAAAAAjxYAAAAAAAAAAAAAAADwvw"
				],
				[
					674,
					1,
					"left_delete",
					null,
					"AQAAAIoWAAAAAAAAihYAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsWAAAAAAAAixYAAAAAAAAAAAAAAADwvw"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIoWAAAAAAAAixYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoWAAAAAAAAihYAAAAAAAAAAAAAAADwvw"
				],
				[
					695,
					1,
					"left_delete",
					null,
					"AQAAAGcXAAAAAAAAZxcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgXAAAAAAAAaBcAAAAAAAAAAAAAAADwvw"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGcXAAAAAAAAaBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcXAAAAAAAAZxcAAAAAAAAAAAAAAADwvw"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAGgXAAAAAAAAaRcAAAAAAAAAAAAAaRcAAAAAAABqFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgXAAAAAAAAaBcAAAAAAAAAAAAAAADwvw"
				],
				[
					698,
					3,
					"right_delete",
					null,
					"AwAAAGoXAAAAAAAAahcAAAAAAAABAAAAJmoXAAAAAAAAahcAAAAAAAABAAAAJmoXAAAAAAAAahcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoXAAAAAAAAahcAAAAAAAAAAAAAAADwvw"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAAGoXAAAAAAAAaxcAAAAAAAAAAAAAaxcAAAAAAABsFwAAAAAAAAAAAABsFwAAAAAAAG0XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoXAAAAAAAAahcAAAAAAAAAAAAAAADwvw"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAA0YAAAAAAAADhgAAAAAAAAAAAAADhgAAAAAAAAUGAAAAAAAAAAAAAAUGAAAAAAAABUYAAAAAAAAAAAAAA4YAAAAAAAADhgAAAAAAAAGAAAAICAgICAgDhgAAAAAAAASGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0YAAAAAAAADRgAAAAAAAAAAAAAAABnQA"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CgAAAGoXAAAAAAAAaxcAAAAAAAAAAAAAaxcAAAAAAABxFwAAAAAAAAAAAABrFwAAAAAAAGsXAAAAAAAABgAAACAgICAgIGsXAAAAAAAAcxcAAAAAAAAAAAAAcxcAAAAAAAB0FwAAAAAAAAAAAAB0FwAAAAAAAHwXAAAAAAAAAAAAAGsXAAAAAAAAaxcAAAAAAAAIAAAAICAgICAgICB0FwAAAAAAAHUXAAAAAAAAAAAAAHUXAAAAAAAAfRcAAAAAAAAAAAAAbBcAAAAAAABsFwAAAAAAAAgAAAAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoXAAAAAAAAahcAAAAAAAAAAAAAAADwvw"
				],
				[
					712,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFQXAAAAAAAAVRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQXAAAAAAAAVBcAAAAAAAAAAAAAAADwvw"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": " *arg"
					},
					"BQAAAFUXAAAAAAAAVhcAAAAAAAAAAAAAVhcAAAAAAABXFwAAAAAAAAAAAABXFwAAAAAAAFgXAAAAAAAAAAAAAFgXAAAAAAAAWRcAAAAAAAAAAAAAWRcAAAAAAABaFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUXAAAAAAAAVRcAAAAAAAAAAAAAAADwvw"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": "if))"
					},
					"BAAAAHIXAAAAAAAAcxcAAAAAAAAAAAAAcxcAAAAAAAB0FwAAAAAAAAAAAAB0FwAAAAAAAHUXAAAAAAAAAAAAAHUXAAAAAAAAdhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIXAAAAAAAAchcAAAAAAAAAAAAAAAAgQA"
				],
				[
					717,
					2,
					"left_delete",
					null,
					"AgAAAHUXAAAAAAAAdRcAAAAAAAABAAAAKXQXAAAAAAAAdBcAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYXAAAAAAAAdhcAAAAAAAAAAAAAAADwvw"
				],
				[
					718,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAHQXAAAAAAAAdhcAAAAAAAAAAAAAdRcAAAAAAAB3FwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQXAAAAAAAAdBcAAAAAAAAAAAAAAADwvw"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAHYXAAAAAAAAdxcAAAAAAAAAAAAAdxcAAAAAAAB4FwAAAAAAAAAAAAB4FwAAAAAAAHkXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYXAAAAAAAAdhcAAAAAAAAAAAAAAADwvw"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": " ?="
					},
					"AwAAAHkXAAAAAAAAehcAAAAAAAAAAAAAehcAAAAAAAB7FwAAAAAAAAAAAAB7FwAAAAAAAHwXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkXAAAAAAAAeRcAAAAAAAAAAAAAAADwvw"
				],
				[
					721,
					2,
					"left_delete",
					null,
					"AgAAAHsXAAAAAAAAexcAAAAAAAABAAAAPXoXAAAAAAAAehcAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwXAAAAAAAAfBcAAAAAAAAAAAAAAADwvw"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": "?="
					},
					"AgAAAHoXAAAAAAAAexcAAAAAAAAAAAAAexcAAAAAAAB8FwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoXAAAAAAAAehcAAAAAAAAAAAAAAADwvw"
				],
				[
					723,
					2,
					"left_delete",
					null,
					"AgAAAHsXAAAAAAAAexcAAAAAAAABAAAAPXoXAAAAAAAAehcAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwXAAAAAAAAfBcAAAAAAAAAAAAAAADwvw"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHoXAAAAAAAAexcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoXAAAAAAAAehcAAAAAAAAAAAAAAADwvw"
				],
				[
					725,
					1,
					"insert",
					{
						"characters": " js_sz"
					},
					"BgAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAB9FwAAAAAAAH4XAAAAAAAAAAAAAH4XAAAAAAAAfxcAAAAAAAAAAAAAfxcAAAAAAACAFwAAAAAAAAAAAACAFwAAAAAAAIEXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsXAAAAAAAAexcAAAAAAAAAAAAAAADwvw"
				],
				[
					726,
					1,
					"left_delete",
					null,
					"AQAAAIAXAAAAAAAAgBcAAAAAAAABAAAAeg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEXAAAAAAAAgRcAAAAAAAAAAAAAAADwvw"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": "ie"
					},
					"AgAAAIAXAAAAAAAAgRcAAAAAAAAAAAAAgRcAAAAAAACCFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAXAAAAAAAAgBcAAAAAAAAAAAAAAADwvw"
				],
				[
					728,
					1,
					"left_delete",
					null,
					"AQAAAIEXAAAAAAAAgRcAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIXAAAAAAAAghcAAAAAAAAAAAAAAADwvw"
				],
				[
					729,
					1,
					"insert_completion",
					{
						"completion": "js_size_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "js_size_data"
					},
					"AgAAAHwXAAAAAAAAfBcAAAAAAAAFAAAAanNfc2l8FwAAAAAAAIgXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEXAAAAAAAAgRcAAAAAAAAAAAAAAADwvw"
				],
				[
					730,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIgXAAAAAAAAihcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgXAAAAAAAAiBcAAAAAAAAAAAAAAADwvw"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAIkXAAAAAAAAihcAAAAAAAAAAAAAihcAAAAAAACLFwAAAAAAAAAAAACLFwAAAAAAAIwXAAAAAAAAAAAAAIwXAAAAAAAAjRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkXAAAAAAAAiRcAAAAAAAAAAAAAAADwvw"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAAI0XAAAAAAAAjhcAAAAAAAAAAAAAjhcAAAAAAACPFwAAAAAAAAAAAACPFwAAAAAAAJAXAAAAAAAAAAAAAJAXAAAAAAAAkRcAAAAAAAAAAAAAkRcAAAAAAACSFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0XAAAAAAAAjRcAAAAAAAAAAAAAAADwvw"
				],
				[
					733,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJIXAAAAAAAAlBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIXAAAAAAAAkhcAAAAAAAAAAAAAAADwvw"
				],
				[
					734,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJMXAAAAAAAAlBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMXAAAAAAAAkxcAAAAAAAAAAAAAAADwvw"
				],
				[
					736,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJgXAAAAAAAAmRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgXAAAAAAAAmBcAAAAAAAAAAAAAAADwvw"
				],
				[
					737,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJkXAAAAAAAAmxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkXAAAAAAAAmRcAAAAAAAAAAAAAAADwvw"
				],
				[
					738,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAJoXAAAAAAAAmxcAAAAAAAAAAAAAmxcAAAAAAACcFwAAAAAAAAAAAACbFwAAAAAAAJ0XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoXAAAAAAAAmhcAAAAAAAAAAAAAAADwvw"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BQAAAJ8XAAAAAAAAoBcAAAAAAAAAAAAAmxcAAAAAAACbFwAAAAAAAAIAAAAgIJ4XAAAAAAAAnxcAAAAAAAAAAAAAnxcAAAAAAACgFwAAAAAAAAAAAACgFwAAAAAAAKEXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8XAAAAAAAAnxcAAAAAAAAAAAAAAAAwQA"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEXAAAAAAAAohcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEXAAAAAAAAoRcAAAAAAAAAAAAAAADwvw"
				],
				[
					759,
					1,
					"paste",
					null,
					"AQAAAGAXAAAAAAAAbBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAXAAAAAAAAYBcAAAAAAAAAAAAAAADwvw"
				],
				[
					760,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwXAAAAAAAAbRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwXAAAAAAAAbBcAAAAAAAAAAAAAAADwvw"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOkXAAAAAAAA6hcAAAAAAAAAAAAA6hcAAAAAAADqFwAAAAAAAAQAAABib29s",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkXAAAAAAAA7RcAAAAAAAAAAAAAAADwvw"
				],
				[
					770,
					1,
					"cut",
					null,
					"AQAAACoYAAAAAAAAKhgAAAAAAAAnAAAAICAgICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgZXF1YWxzKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoYAAAAAAAAURgAAAAAAAAAAAAAAADwvw"
				],
				[
					773,
					1,
					"paste",
					null,
					"AQAAADMYAAAAAAAAWhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMYAAAAAAAAMxgAAAAAAAAAAAAAAADwvw"
				],
				[
					781,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGwXAAAAAAAAbRcAAAAAAAAAAAAAbRcAAAAAAABuFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwXAAAAAAAAbBcAAAAAAAAAAAAAAADwvw"
				],
				[
					782,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAAG4XAAAAAAAAbxcAAAAAAAAAAAAAbxcAAAAAAABwFwAAAAAAAAAAAABwFwAAAAAAAHEXAAAAAAAAAAAAAHEXAAAAAAAAchcAAAAAAAAAAAAAchcAAAAAAABzFwAAAAAAAAAAAABzFwAAAAAAAHQXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4XAAAAAAAAbhcAAAAAAAAAAAAAAADwvw"
				],
				[
					791,
					1,
					"paste",
					null,
					"AQAAALAXAAAAAAAA+RcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAXAAAAAAAAsBcAAAAAAAAAAAAAAADwvw"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": "a->"
					},
					"BAAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADQFwAAAAAAAAUAAABvdGhlctAXAAAAAAAA0RcAAAAAAAAAAAAA0RcAAAAAAADSFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8XAAAAAAAA1BcAAAAAAAAAAAAAAADwvw"
				],
				[
					796,
					1,
					"right_delete",
					null,
					"AQAAANIXAAAAAAAA0hcAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIXAAAAAAAA0hcAAAAAAAAAAAAAAADwvw"
				],
				[
					803,
					1,
					"paste",
					null,
					"AgAAAOgXAAAAAAAA6xcAAAAAAAAAAAAA6xcAAAAAAADrFwAAAAAAAAUAAABvdGhlcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgXAAAAAAAA7RcAAAAAAAAAAAAAAADwvw"
				],
				[
					804,
					1,
					"right_delete",
					null,
					"AQAAAOsXAAAAAAAA6xcAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsXAAAAAAAA6xcAAAAAAAAAAAAAAADwvw"
				],
				[
					810,
					1,
					"left_delete",
					null,
					"AQAAALEKAAAAAAAAsQoAAAAAAAABAAAAMg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIKAAAAAAAAsgoAAAAAAAAAAAAAAADwvw"
				],
				[
					813,
					1,
					"left_delete",
					null,
					"AQAAALIKAAAAAAAAsgoAAAAAAAAFAAAAY3R4LCA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIKAAAAAAAAtwoAAAAAAAAAAAAAAADwvw"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"BAAAAMkXAAAAAAAAyhcAAAAAAAAAAAAAyhcAAAAAAADKFwAAAAAAAAEAAABhyhcAAAAAAADLFwAAAAAAAAAAAADLFwAAAAAAAMwXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkXAAAAAAAAyhcAAAAAAAAAAAAAAADwvw"
				],
				[
					846,
					1,
					"paste",
					null,
					"AgAAAOQXAAAAAAAA5xcAAAAAAAAAAAAA5xcAAAAAAADnFwAAAAAAAAEAAABh",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQXAAAAAAAA5RcAAAAAAAAAAAAAAADwvw"
				],
				[
					847,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcXAAAAAAAA5xcAAAAAAAAAAAAAAADwvw"
				],
				[
					850,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAIUXAAAAAAAAWxgAAAAAAADZAAAACgogICAgICAgIGlmKChhcmcgPSBqc19zaXplX2RhdGEoY3R4LCBhcmd2WzBdKSkpIHsKICAgICAgICAgIGVxdWFscyA9IHMtPndpZHRoID09IGFyZy0+d2lkdGggJiYgcy0+aGVpZ2h0ID09IGFyZy0+aGVpZ2h0OwoKICAgICAgICB9IGVsc2UgaWYoanNfc2l6ZV9yZWFkKGN0eCwgYXJndlswXSwgJm90aGVyKSkgewogICAgICAgICAgZXF1YWxzID0gcy0+d2lkdGggPT0gb3RoZXIudw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUXAAAAAAAAXhgAAAAAAAAAAAAAAADwvw"
				],
				[
					851,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUXAAAAAAAAWxgAAAAAAAAAAAAAAADwvw"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"BAAAAOIWAAAAAAAA4xYAAAAAAAAAAAAA4xYAAAAAAADjFgAAAAAAAAwAAABKU19FWENFUFRJT07jFgAAAAAAAOQWAAAAAAAAAAAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIWAAAAAAAA7hYAAAAAAAAAAAAAAADwvw"
				],
				[
					1022,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKUWAAAAAAAAphYAAAAAAAAAAAAAphYAAAAAAACnFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUWAAAAAAAApRYAAAAAAAAAAAAAAADwvw"
				],
				[
					1023,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcWAAAAAAAApxYAAAAAAAAAAAAAAADwvw"
				],
				[
					1048,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoZAAAAAAAAWhkAAAAAAAAAAAAAAADwvw"
				],
				[
					1089,
					1,
					"paste",
					null,
					"AgAAABMVAAAAAAAAIxUAAAAAAAAAAAAAIxUAAAAAAAAjFQAAAAAAAAoAAABzaXplX3Byb3Rv",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMVAAAAAAAAHRUAAAAAAAAAAAAAAADwvw"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAAAgVAAAAAAAACRUAAAAAAAAAAAAACRUAAAAAAAAJFQAAAAAAAAUAAABQcm90bwkVAAAAAAAAChUAAAAAAAAAAAAAChUAAAAAAAALFQAAAAAAAAAAAAALFQAAAAAAAAwVAAAAAAAAAAAAAAwVAAAAAAAADRUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgVAAAAAAAADRUAAAAAAAAAAAAAAADwvw"
				],
				[
					1095,
					1,
					"insert",
					{
						"characters": "_size"
					},
					"BgAAABUVAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAWFQAAAAAAAAUAAABfcmVjdBYVAAAAAAAAFxUAAAAAAAAAAAAAFxUAAAAAAAAYFQAAAAAAAAAAAAAYFQAAAAAAABkVAAAAAAAAAAAAABkVAAAAAAAAGhUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUVAAAAAAAAGhUAAAAAAAAAAAAAAADwvw"
				],
				[
					1216,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAMQOAAAAAAAAxg4AAAAAAAAAAAAArg4AAAAAAACwDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4OAAAAAAAAxA4AAAAAAAAAAAAAAADwvw"
				],
				[
					1219,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPAOAAAAAAAA8g4AAAAAAAAAAAAA2g4AAAAAAADcDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoOAAAAAAAA8A4AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_slice_iterator.cpp",
			"settings":
			{
				"buffer_size": 6447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_subdiv2d.cpp",
			"settings":
			{
				"buffer_size": 10862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_line.cpp",
			"settings":
			{
				"buffer_size": 14406,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAAD0YAAAAAAAAPhgAAAAAAAAAAAAAPhgAAAAAAAA+GAAAAAAAAAUAAABQcm90bz4YAAAAAAAAPxgAAAAAAAAAAAAAPxgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEEYAAAAAAAAAAAAAEEYAAAAAAAAQhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0YAAAAAAAAQhgAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "js_line_class_i"
					},
					"EAAAAEgYAAAAAAAASRgAAAAAAAAAAAAASRgAAAAAAABJGAAAAAAAAAoAAABsaW5lX3Byb3RvSRgAAAAAAABKGAAAAAAAAAAAAABKGAAAAAAAAEsYAAAAAAAAAAAAAEsYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABNGAAAAAAAAAAAAABNGAAAAAAAAE4YAAAAAAAAAAAAAE4YAAAAAAAATxgAAAAAAAAAAAAATxgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFEYAAAAAAAAAAAAAFEYAAAAAAAAUhgAAAAAAAAAAAAAUhgAAAAAAABTGAAAAAAAAAAAAABTGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAVRgAAAAAAAAAAAAAVRgAAAAAAABWGAAAAAAAAAAAAABWGAAAAAAAAFcYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgYAAAAAAAAUhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFcYAAAAAAAAWBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcYAAAAAAAAVxgAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_contour.cpp",
			"settings":
			{
				"buffer_size": 32335,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAALVoAAAAAAAAtmgAAAAAAAAAAAAAtmgAAAAAAAC2aAAAAAAAAAUAAABQcm90b7ZoAAAAAAAAt2gAAAAAAAAAAAAAt2gAAAAAAAC4aAAAAAAAAAAAAAC4aAAAAAAAALloAAAAAAAAAAAAALloAAAAAAAAumgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALVoAAAAAAAAumgAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "js_contour_cxlas"
					},
					"EQAAAMBoAAAAAAAAwWgAAAAAAAAAAAAAwWgAAAAAAADBaAAAAAAAAA0AAABjb250b3VyX3Byb3RvwWgAAAAAAADCaAAAAAAAAAAAAADCaAAAAAAAAMNoAAAAAAAAAAAAAMNoAAAAAAAAxGgAAAAAAAAAAAAAxGgAAAAAAADFaAAAAAAAAAAAAADFaAAAAAAAAMZoAAAAAAAAAAAAAMZoAAAAAAAAx2gAAAAAAAAAAAAAx2gAAAAAAADIaAAAAAAAAAAAAADIaAAAAAAAAMloAAAAAAAAAAAAAMloAAAAAAAAymgAAAAAAAAAAAAAymgAAAAAAADLaAAAAAAAAAAAAADLaAAAAAAAAMxoAAAAAAAAAAAAAMxoAAAAAAAAzWgAAAAAAAAAAAAAzWgAAAAAAADOaAAAAAAAAAAAAADOaAAAAAAAAM9oAAAAAAAAAAAAAM9oAAAAAAAA0GgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMBoAAAAAAAAzWgAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					4,
					"left_delete",
					null,
					"BAAAAM9oAAAAAAAAz2gAAAAAAAABAAAAc85oAAAAAAAAzmgAAAAAAAABAAAAYc1oAAAAAAAAzWgAAAAAAAABAAAAbMxoAAAAAAAAzGgAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANBoAAAAAAAA0GgAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "lass_id"
					},
					"BwAAAMxoAAAAAAAAzWgAAAAAAAAAAAAAzWgAAAAAAADOaAAAAAAAAAAAAADOaAAAAAAAAM9oAAAAAAAAAAAAAM9oAAAAAAAA0GgAAAAAAAAAAAAA0GgAAAAAAADRaAAAAAAAAAAAAADRaAAAAAAAANJoAAAAAAAAAAAAANJoAAAAAAAA02gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMxoAAAAAAAAzGgAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_point.cpp",
			"settings":
			{
				"buffer_size": 12542,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAACMbAAAAAAAAJBsAAAAAAAAAAAAAJBsAAAAAAAAkGwAAAAAAAAUAAABQcm90byQbAAAAAAAAJRsAAAAAAAAAAAAAJRsAAAAAAAAmGwAAAAAAAAAAAAAmGwAAAAAAACcbAAAAAAAAAAAAACcbAAAAAAAAKBsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMbAAAAAAAAKBsAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"paste",
					null,
					"AgAAAC4bAAAAAAAAPhsAAAAAAAAAAAAAPhsAAAAAAAA+GwAAAAAAAAsAAABwb2ludF9wcm90bw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4bAAAAAAAAORsAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "point"
					},
					"BgAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAyGwAAAAAAAAQAAAByZWN0MhsAAAAAAAAzGwAAAAAAAAAAAAAzGwAAAAAAADQbAAAAAAAAAAAAADQbAAAAAAAANRsAAAAAAAAAAAAANRsAAAAAAAA2GwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEbAAAAAAAANRsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_point_iterator.cpp",
			"settings":
			{
				"buffer_size": 6043,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_size.hpp",
			"settings":
			{
				"buffer_size": 2335,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAfCQAAI2lmbmRlZiBKU19TSVpFX0hQUAojZGVmaW5lIEpTX1NJWkVfSFBQCgojaW5jbHVkZSAianNiaW5kaW5ncy5ocHAiCgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX3NpemVfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CmV4dGVybiBKU1ZhbHVlIHNpemVfcHJvdG8sIHNpemVfY2xhc3M7CmV4dGVybiBKU0NsYXNzSUQganNfc2l6ZV9jbGFzc19pZDsKClZJU0lCTEUgSlNWYWx1ZSBqc19zaXplX25ldyhKU0NvbnRleHQqIGN0eCwgZG91YmxlIHcsIGRvdWJsZSBoKTsKVklTSUJMRSBKU1ZhbHVlIGpzX3NpemVfd3JhcChKU0NvbnRleHQqIGN0eCwgY29uc3QgSlNTaXplRGF0YTxkb3VibGU+JiBzaXplKTsKVklTSUJMRSBKU1NpemVEYXRhPGRvdWJsZT4qIGpzX3NpemVfZGF0YShKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QgdmFsKTsKCmludCBqc19zaXplX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqIG0pOwpKU01vZHVsZURlZioganNfaW5pdF9zaXplX21vZHVsZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7CnZvaWQganNfc2l6ZV9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIGludApqc19zaXplX3JlYWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBzaXplLCBKU1NpemVEYXRhPFQ+KiBvdXQpIHsKICBpbnQgcmV0ID0gMTsKICBKU1ZhbHVlIHdpZHRoID0gSlNfVU5ERUZJTkVELCBoZWlnaHQgPSBKU19VTkRFRklORUQ7CgogIGlmKGpzX2lzX2FycmF5X2xpa2UoY3R4LCBzaXplKSkgewogICAgd2lkdGggPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHNpemUsIDApOwogICAgaGVpZ2h0ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBzaXplLCAxKTsKICB9IGVsc2UgaWYoSlNfSXNPYmplY3Qoc2l6ZSkpIHsKICAgIHdpZHRoID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBzaXplLCAid2lkdGgiKTsKICAgIGhlaWdodCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgc2l6ZSwgImhlaWdodCIpOwogIH0KICBpZihKU19Jc051bWJlcih3aWR0aCkgJiYgSlNfSXNOdW1iZXIoaGVpZ2h0KSkgewogICAgcmV0ICY9IGpzX251bWJlcl9yZWFkKGN0eCwgd2lkdGgsICZvdXQtPndpZHRoKTsKICAgIHJldCAmPSBqc19udW1iZXJfcmVhZChjdHgsIGhlaWdodCwgJm91dC0+aGVpZ2h0KTsKICB9IGVsc2UgewogICAgcmV0ID0gMDsKICB9CiAgaWYoIUpTX0lzVW5kZWZpbmVkKHdpZHRoKSkKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHdpZHRoKTsKICBpZighSlNfSXNVbmRlZmluZWQoaGVpZ2h0KSkKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGhlaWdodCk7CiAgcmV0dXJuIHJldDsKfQoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB2b2lkCmpzX3NpemVfd3JpdGUoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBvdXQsIGNvbnN0IEpTU2l6ZURhdGE8VD4mIGluKSB7CiAgSlNWYWx1ZSB3aWR0aCA9IGpzX251bWJlcl9uZXc8VD4oY3R4LCBpbi53aWR0aCk7CiAgSlNWYWx1ZSBoZWlnaHQgPSBqc19udW1iZXJfbmV3PFQ+KGN0eCwgaW4uaGVpZ2h0KTsKICBpZihKU19Jc0FycmF5KGN0eCwgb3V0KSkgewogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBvdXQsIDAsIHdpZHRoKTsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgb3V0LCAxLCBoZWlnaHQpOwoKICB9IGVsc2UgaWYoSlNfSXNPYmplY3Qob3V0KSkgewogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBvdXQsICJ4Iiwgd2lkdGgpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBvdXQsICJ5IiwgaGVpZ2h0KTsKICB9IGVsc2UgaWYoSlNfSXNGdW5jdGlvbihjdHgsIG91dCkpIHsKICAgIEpTVmFsdWVDb25zdCBhcmdzWzJdOwogICAgYXJnc1swXSA9IHdpZHRoOwogICAgYXJnc1sxXSA9IGhlaWdodDsKICAgIEpTX0NhbGwoY3R4LCBvdXQsIEpTX1VOREVGSU5FRCwgMiwgYXJncyk7CiAgfQogIEpTX0ZyZWVWYWx1ZShjdHgsIHdpZHRoKTsKICBKU19GcmVlVmFsdWUoY3R4LCBoZWlnaHQpOwp9CgpzdGF0aWMgaW5saW5lIEpTU2l6ZURhdGE8ZG91YmxlPgpqc19zaXplX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHNpemUpIHsKICBKU1NpemVEYXRhPGRvdWJsZT4gciA9IHswLCAwfTsKICBqc19zaXplX3JlYWQoY3R4LCBzaXplLCAmcik7CiAgcmV0dXJuIHI7Cn0KCmV4dGVybiAiQyIgaW50IGpzX3NpemVfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKI2VuZGlmIC8qIGRlZmluZWQoSlNfU0laRV9IUFApICovCgAAAAAAAAAAHwkAAAAAAAAAAAAAAAAAAAAAAAAfCQAAAAAAAAAAAAAAAAAAAAAAAB8JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgEAAAAAAAAhgQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_rect.cpp",
			"settings":
			{
				"buffer_size": 18572,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"paste",
					null,
					"AgAAAFMdAAAAAAAAZB0AAAAAAAAAAAAAZB0AAAAAAABkHQAAAAAAABEAAABKU19OZXdPYmplY3RQcm90bw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQdAAAAAAAAUx0AAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAGodAAAAAAAAax0AAAAAAAAAAAAAax0AAAAAAABrHQAAAAAAAAoAAAByZWN0X3Byb3Rvax0AAAAAAABsHQAAAAAAAAAAAABsHQAAAAAAAG0dAAAAAAAAAAAAAG0dAAAAAAAAbh0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGodAAAAAAAAdB0AAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					4,
					"left_delete",
					null,
					"BAAAAG0dAAAAAAAAbR0AAAAAAAABAAAAdGwdAAAAAAAAbB0AAAAAAAABAAAAY2sdAAAAAAAAax0AAAAAAAABAAAAZWodAAAAAAAAah0AAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4dAAAAAAAAbh0AAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "ns"
					},
					"AgAAAGodAAAAAAAAax0AAAAAAAAAAAAAax0AAAAAAABsHQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGodAAAAAAAAah0AAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					2,
					"left_delete",
					null,
					"AgAAAGsdAAAAAAAAax0AAAAAAAABAAAAc2odAAAAAAAAah0AAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwdAAAAAAAAbB0AAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "js_rect:_"
					},
					"CQAAAGodAAAAAAAAax0AAAAAAAAAAAAAax0AAAAAAABsHQAAAAAAAAAAAABsHQAAAAAAAG0dAAAAAAAAAAAAAG0dAAAAAAAAbh0AAAAAAAAAAAAAbh0AAAAAAABvHQAAAAAAAAAAAABvHQAAAAAAAHAdAAAAAAAAAAAAAHAdAAAAAAAAcR0AAAAAAAAAAAAAcR0AAAAAAAByHQAAAAAAAAAAAAByHQAAAAAAAHMdAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGodAAAAAAAAah0AAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAAHIdAAAAAAAAch0AAAAAAAABAAAAX3EdAAAAAAAAcR0AAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMdAAAAAAAAcx0AAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "_class_id"
					},
					"CQAAAHEdAAAAAAAAch0AAAAAAAAAAAAAch0AAAAAAABzHQAAAAAAAAAAAABzHQAAAAAAAHQdAAAAAAAAAAAAAHQdAAAAAAAAdR0AAAAAAAAAAAAAdR0AAAAAAAB2HQAAAAAAAAAAAAB2HQAAAAAAAHcdAAAAAAAAAAAAAHcdAAAAAAAAeB0AAAAAAAAAAAAAeB0AAAAAAAB5HQAAAAAAAAAAAAB5HQAAAAAAAHodAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_umat.cpp",
			"settings":
			{
				"buffer_size": 30280,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQTAAAAAAAAMBMAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANxHAAAAAAAA3UcAAAAAAAAAAAAA3UcAAAAAAADdRwAAAAAAAFYAAAAgLyogICAgIDw8ICJAICIKICAgICAgICAgIDw8IHJlaW50ZXJwcmV0X2Nhc3Q8dm9pZCo+KHJlaW50ZXJwcmV0X2Nhc3Q8Y2hhcio+KHVtKSAgKSovCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANxHAAAAAAAAMkgAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"join_lines",
					null,
					"AgAAANdHAAAAAAAA10cAAAAAAAABAAAACtdHAAAAAAAA10cAAAAAAAAKAAAAICAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdHAAAAAAAA10cAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANdHAAAAAAAA2EcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdHAAAAAAAA10cAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAKtGAAAAAAAAEUsAAAAAAABrBAAACiAgc3RkOjpvc3RyaW5nc3RyZWFtIG9zOwogIHN0ZDo6c3RyaW5nIHN0cjsKICBpbnQgaSA9IDA7CiAgaWYoIXVtKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaW50IGJ5dGVzID0gMSA8PCAoKHVtLT50eXBlKCkgJiAweDcpID4+IDEpOwogIGNoYXIgc2lnbiA9ICh1bS0+dHlwZSgpICYgMHg3KSA+PSA1ID8gJ0YnIDogKHVtLT50eXBlKCkgJiAxKSA/ICdTJyA6ICdVJzsKCiAgc3RkOjp2ZWN0b3I8c3RkOjpzdHJpbmc+IHNpemVTdHJzID0ganNfdW1hdF9kaW1lbnNpb25zKCp1bSk7CiAgOwoKICBvcyA8PCAiVU1hdCAiIDw8ICIgWyAiOwogIGlmKHNpemVTdHJzLnNpemUoKSB8fCB1bS0+dHlwZSgpKSB7CiAgICBvcyA8PCAic2l6ZTogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgam9pbihzaXplU3Rycy5jYmVnaW4oKSwgc2l6ZVN0cnMuY2VuZCgpLCAiIiBDT0xPUl9OT05FICIqIiBDT0xPUl9ZRUxMT1cgIiIpCiAgICAgICA8PCAiIiBDT0xPUl9OT05FICIsICI7CiAgICBvcyA8PCAidHlwZTogIiBDT0xPUl9ZRUxMT1cgIkNWXyIgPDwgKGJ5dGVzICogOCkgPDwgc2lnbiA8PCAnQycgPDwgdW0tPmNoYW5uZWxzKCkgPDwgIiIgQ09MT1JfTk9ORSAiLCAiOwogICAgb3MgPDwgImVsZW1TaXplOiAiIENPTE9SX1lFTExPVyAiIiA8PCB1bS0+ZWxlbVNpemUoKSA8PCAiIiBDT0xPUl9OT05FICIsICI7CiAgICBvcyA8PCAiZWxlbVNpemUxOiAiIENPTE9SX1lFTExPVyAiIiA8PCB1bS0+ZWxlbVNpemUxKCkgPDwgIiIgQ09MT1JfTk9ORSAiLCAiOwogICAgb3MgPDwgInRvdGFsOiAiIENPTE9SX1lFTExPVyAiIiA8PCB1bS0+dG90YWwoKSA8PCAiIiBDT0xPUl9OT05FICIsICI7CiAgICBvcyA8PCAiZGltczogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgdW0tPmRpbXMgPDwgIiIgQ09MT1JfTk9ORSAiIjsKICB9IGVsc2UgewogICAgb3MgPDwgImVtcHR5IjsKICB9CiAgaWYodW0tPnUpCiAgICBvcyA8PCAiLCByZWZjb3VudDogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgdW0tPnUtPnJlZmNvdW50OwogIG9zIDw8ICIiIENPTE9SX05PTkUgIiBdIjsKICBzdHIgPSBvcy5zdHIoKTsKICByZXR1cm4gSlNfTmV3U3RyaW5nTGVuKGN0eCwgc3RyLmRhdGEoKSwgc3RyLnNpemUoKSk7Cn0KCnN0YXRpYyBKU1ZhbHVl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKtGAAAAAAAAFksAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAJLAAAAAAAAA0sAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAJLAAAAAAAAAksAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMBHAAAAAAAAwUcAAAAAAAAAAAAAwUcAAAAAAADBRwAAAAAAAAMAAAAgIDs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMNHAAAAAAAAwEcAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAPtGAAAAAAAABkoAAAAAAAANAwAAX0VYQ0VQVElPTjsKICBpbnQgYnl0ZXMgPSAxIDw8ICgodW0tPnR5cGUoKSAmIDB4NykgPj4gMSk7CiAgY2hhciBzaWduID0gKHVtLT50eXBlKCkgJiAweDcpID49IDUgPyAnRicgOiAodW0tPnR5cGUoKSAmIDEpID8gJ1MnIDogJ1UnOwogIHN0ZDo6dmVjdG9yPHN0ZDo6c3RyaW5nPiBzaXplU3RycyA9IGpzX3VtYXRfZGltZW5zaW9ucygqdW0pOwogCiAgb3MgPDwgIlVNYXQgIiA8PCAiIFsgIjsKICBpZihzaXplU3Rycy5zaXplKCkgfHwgdW0tPnR5cGUoKSkgewogICAgb3MgPDwgInNpemU6ICIgQ09MT1JfWUVMTE9XICIiIDw8IGpvaW4oc2l6ZVN0cnMuY2JlZ2luKCksIHNpemVTdHJzLmNlbmQoKSwgIiIgQ09MT1JfTk9ORSAiKiIgQ09MT1JfWUVMTE9XICIiKQogICAgICAgPDwgIiIgQ09MT1JfTk9ORSAiLCAiOwogICAgb3MgPDwgInR5cGU6ICIgQ09MT1JfWUVMTE9XICJDVl8iIDw8IChieXRlcyAqIDgpIDw8IHNpZ24gPDwgJ0MnIDw8IHVtLT5jaGFubmVscygpIDw8ICIiIENPTE9SX05PTkUgIiwgIjsKICAgIG9zIDw8ICJlbGVtU2l6ZTogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgdW0tPmVsZW1TaXplKCkgPDwgIiIgQ09MT1JfTk9ORSAiLCAiOwogICAgb3MgPDwgImVsZW1TaXplMTogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgdW0tPmVsZW1TaXplMSgpIDw8ICIiIENPTE9SX05PTkUgIiwgIjsKICAgIG9zIDw8ICJ0b3RhbDogIiBDT0xPUl9ZRUxMT1cgIiIgPDwgdW0tPnRvdGFsKCkgPDwgIiIgQ09MT1JfTk9ORSAiLCAiOwogICAgb3MgPDwgImRpbXM6ICIgQ09MT1JfWUVMTA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPtGAAAAAAAACEoAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAP9KAAAAAAAAAUsAAAAAAAAAAAAAC0YAAAAAAAANRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP9KAAAAAAAAC0YAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"paste",
					null,
					"AQAAAApGAAAAAAAAfUgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAApGAAAAAAAACkYAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAAL9GAAAAAAAAwEYAAAAAAAAAAAAAwEYAAAAAAADARgAAAAAAAAUAAABQcm90b8BGAAAAAAAAwUYAAAAAAAAAAAAAwUYAAAAAAADCRgAAAAAAAAAAAADCRgAAAAAAAMNGAAAAAAAAAAAAAMNGAAAAAAAAxEYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL9GAAAAAAAAxEYAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "js_umat_class_"
					},
					"DwAAAMpGAAAAAAAAy0YAAAAAAAAAAAAAy0YAAAAAAADLRgAAAAAAAAwAAAB1bWF0X3Byb3RvKTvLRgAAAAAAAMxGAAAAAAAAAAAAAMxGAAAAAAAAzUYAAAAAAAAAAAAAzUYAAAAAAADORgAAAAAAAAAAAADORgAAAAAAAM9GAAAAAAAAAAAAAM9GAAAAAAAA0EYAAAAAAAAAAAAA0EYAAAAAAADRRgAAAAAAAAAAAADRRgAAAAAAANJGAAAAAAAAAAAAANJGAAAAAAAA00YAAAAAAAAAAAAA00YAAAAAAADURgAAAAAAAAAAAADURgAAAAAAANVGAAAAAAAAAAAAANVGAAAAAAAA1kYAAAAAAAAAAAAA1kYAAAAAAADXRgAAAAAAAAAAAADXRgAAAAAAANhGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMpGAAAAAAAA1kYAAAAAAAD////////vfw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "id);"
					},
					"BAAAANhGAAAAAAAA2UYAAAAAAAAAAAAA2UYAAAAAAADaRgAAAAAAAAAAAADaRgAAAAAAANtGAAAAAAAAAAAAANtGAAAAAAAA3EYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANhGAAAAAAAA2EYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_mat.hpp",
			"settings":
			{
				"buffer_size": 797,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAdAwAAI2lmbmRlZiBKU19NQVRfSFBQCiNkZWZpbmUgSlNfTUFUX0hQUAoKI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgoKZXh0ZXJuICJDIiBWSVNJQkxFIGludCBqc19tYXRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CmV4dGVybiBKU1ZhbHVlIG1hdF9wcm90bywgbWF0X2NsYXNzOwpleHRlcm4gSlNDbGFzc0lEIGpzX21hdF9jbGFzc19pZDsKClZJU0lCTEUgSlNWYWx1ZSBqc19tYXRfbmV3KEpTQ29udGV4dCosIHVpbnQzMl90LCB1aW50MzJfdCwgaW50KTsKaW50IGpzX21hdF9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CkpTTW9kdWxlRGVmKiBqc19pbml0X21hdF9tb2R1bGUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKTsKdm9pZCBqc19tYXRfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgcGFyZW50LCBjb25zdCBjaGFyKiBuYW1lKTsKCmlubGluZSBWSVNJQkxFIEpTTWF0RGF0YSoKanNfbWF0X2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8SlNNYXREYXRhKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfbWF0X2NsYXNzX2lkKSk7Cn0KCnN0YXRpYyBpbmxpbmUgSlNNYXREYXRhKgpqc19tYXRfZGF0YV9ub3Rocm93KEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8SlNNYXREYXRhKj4oSlNfR2V0T3BhcXVlKHZhbCwganNfbWF0X2NsYXNzX2lkKSk7Cn0KfQoKI2VuZGlmIC8qIGRlZmluZWQoSlNfTUFUX0hQUCkgKi8AAAAAAAAAAB0DAAAAAAAAAAAAAAAAAAAAAAAAHQMAAAAAAAAAAAAAAAAAAAAAAAAdAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 158.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/qjs-opencv",
		"/home/roman/Projects/qjs-opencv/build",
		"/home/roman/Projects/qjs-opencv/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
		"/home/roman/Projects/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/qjs-opencv/init_module.cpp",
		"/home/roman/Projects/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/qjs-opencv/util.hpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/qjs-opencv/LICENSE",
		"/home/roman/Projects/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/qjs-opencv/js_alloc.hpp",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_rect.hpp",
		"/home/roman/Projects/qjs-opencv/js_size.hpp",
		"/home/roman/Projects/qjs-opencv/js_size.cpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/qjs-opencv/js_utility.cpp",
		"/home/roman/Projects/qjs-opencv/js_video_capture.cpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/qjs-opencv/js.cpp",
		"/home/roman/Projects/qjs-opencv/js.hpp",
		"/home/roman/Projects/qjs-opencv/js_clahe.cpp",
		"/home/roman/Projects/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/qjs-opencv/cmake/CCache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/OpenCV.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/SDL2.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/ccache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/functions.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/check-flags.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/glfw3Config.cmake",
		"/home/roman/Projects/qjs-opencv/geometry.cpp",
		"/home/roman/Projects/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/qjs-opencv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/js-bindings.cmake",
		"/home/roman/Projects/qjs-opencv/color.cpp",
		"/home/roman/Projects/qjs-opencv/color.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/opencv.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/sdl2-config.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindGLFW.cmake",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Sources/opencv/modules/imgproc/src/drawing.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.hpp",
		"/home/roman/Projects/plot-cv/src/js_rect.cpp",
		"/home/roman/Projects/plot-cv/src/js_cv.cpp",
		"/home/roman/Projects/plot-cv/src/geometry.hpp",
		"/home/roman/Projects/plot-cv/src/js_array.hpp",
		"/home/roman/Projects/plot-cv/src/js_mat.cpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/src/pixel_neighborhood.hpp",
		"/home/roman/Projects/plot-cv/cvPipeline.js",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/cmake/highgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/js-bindings.cmake",
		"/home/roman/Projects/plot-cv/src/util.hpp",
		"/home/roman/Projects/plot-cv/src/png_write.hpp",
		"/home/roman/Projects/plot-cv/src/palette.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test-png++.cpp",
		"/home/roman/Projects/plot-cv/src/js_draw.cpp",
		"/home/roman/Projects/plot-cv/src/js_umat.hpp",
		"/home/roman/Projects/plot-cv/src/js_umat.cpp",
		"/home/roman/Projects/plot-cv/cmake/opencv.cmake",
		"/home/roman/Projects/plot-cv/src/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/src/js_clahe.cpp",
		"/home/roman/Projects/plot-cv/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/src/data.cpp",
		"/home/roman/Projects/plot-cv/src/js_slice_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point.cpp",
		"/home/roman/Projects/plot-cv/src/js_mat.hpp",
		"/home/roman/Projects/plot-cv/src/js_size.cpp",
		"/home/roman/Projects/plot-cv/src/js_line.cpp",
		"/home/roman/Projects/plot-cv/src/js.cpp",
		"/home/roman/Projects/plot-cv/src/js_rect.hpp",
		"/home/roman/Projects/plot-cv/src/js_size.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/freetype.hpp",
		"/home/roman/Projects/plot-cv/dnsresolve.js",
		"/home/roman/Projects/plot-cv/src/js_point.hpp",
		"/home/roman/Projects/plot-cv/src/js.hpp",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/src/js_subdiv2d.cpp",
		"/home/roman/Projects/plot-cv/src/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/src/util.cpp",
		"/home/roman/Projects/plot-cv/src/imgui-viewer.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/grammars/shell.y",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/worker.js",
		"/home/roman/Projects/plot-cv/test_worker_module.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/lib/consoleSetup.js",
		"/home/roman/Projects/plot-cv/bjson.js",
		"/home/roman/Projects/plot-cv/quickjs/tests/bjson.c",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/opencv_dummy.cpp",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/clang-list.es",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/repl.js"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
			"/home/roman/Projects/qjs-opencv,*.hpp,*.cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"CMAKE_C_FLAGS",
			"-DCXX",
			"js_size_mul",
			"object expe",
			"Rect object",
			"js_mat_free_func",
			"js_mat_buffer",
			"CAP_PROP",
			"CAP_",
			"js_size_read",
			"return ",
			"\"width",
			"js\\.",
			"js.is_array_like\\(",
			"js\\.",
			"js.is_bool",
			"js\\.",
			"js.get_boolean\\(",
			"js.get_number\\(",
			"js\\.",
			"jsrt",
			"/src",
			"COMPILE_FLAGS",
			"OPENCV_FOUND",
			"flags",
			"^#",
			"CMAKE_INSTALL_RPATH",
			"extern C",
			"PLOTCV",
			"PLOT",
			"}_MODULE",
			"src_program",
			"add_exec",
			"_MODULE",
			"JS_INIT_MODULE",
			"plot-cv",
			"js.hpp",
			"include\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"CMAKE_CXX_FLAGS",
			"ret = ",
			"js_is_array_like(ctx, ",
			"JS_IsBool",
			"js_value_to(ctx, ",
			"extern \"C\""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 847,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/qjs-opencv/js_size.cpp",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									679,
									690
								],
								[
									1091,
									1102
								],
								[
									1614,
									1626
								],
								[
									2634,
									2646
								],
								[
									2781,
									2792
								],
								[
									3479,
									3490
								],
								[
									3890,
									3902
								],
								[
									4017,
									4028
								],
								[
									4360,
									4377
								],
								[
									4820,
									4837
								],
								[
									5222,
									5237
								],
								[
									5653,
									5666
								],
								[
									7868,
									7879
								],
								[
									8448,
									8459
								],
								[
									9028,
									9039
								],
								[
									9344,
									9355
								],
								[
									10282,
									10305
								],
								[
									10699,
									10711
								],
								[
									11234,
									11256
								],
								[
									11388,
									11405
								],
								[
									11790,
									11815
								],
								[
									11873,
									11898
								],
								[
									11958,
									11983
								],
								[
									12033,
									12058
								],
								[
									12106,
									12131
								],
								[
									12177,
									12195
								],
								[
									12249,
									12267
								],
								[
									12319,
									12337
								],
								[
									12395,
									12413
								],
								[
									12469,
									12487
								],
								[
									12545,
									12563
								],
								[
									12623,
									12641
								],
								[
									12701,
									12719
								],
								[
									12781,
									12793
								],
								[
									12833,
									12845
								],
								[
									12885,
									12897
								],
								[
									12926,
									12938
								],
								[
									12967,
									12979
								],
								[
									13008,
									13020
								],
								[
									13049,
									13061
								],
								[
									13088,
									13100
								],
								[
									13155,
									13173
								],
								[
									13286,
									13298
								],
								[
									13331,
									13343
								],
								[
									14291,
									14305
								],
								[
									14386,
									14405
								],
								[
									14619,
									14633
								],
								[
									14671,
									14685
								],
								[
									14738,
									14752
								]
							],
							"symlist":
							[
								"  js_size_fit",
								"  js_size_fit",
								"  js_size_ctor",
								"  js_size_data",
								"  js_size_get",
								"  js_size_new",
								"  js_size_wrap",
								"  js_size_set",
								"  js_size_to_string",
								"  js_size_to_source",
								"  js_size_inspect",
								"  js_size_funcs",
								"  js_size_add",
								"  js_size_sub",
								"  js_size_mul",
								"  js_size_div",
								"  js_size_symbol_iterator",
								"  js_size_from",
								"  js_array_to<double, 2>",
								"  js_size_finalizer",
								"JS_CGETSET_ENUMERABLE_DEF",
								"JS_CGETSET_ENUMERABLE_DEF",
								"JS_CGETSET_ENUMERABLE_DEF",
								"JS_CGETSET_ENUMERABLE_DEF",
								"JS_CGETSET_ENUMERABLE_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_MAGIC_DEF",
								"JS_CFUNC_DEF",
								"JS_CFUNC_DEF",
								"JS_CFUNC_DEF",
								"JS_CFUNC_DEF",
								"JS_CFUNC_DEF",
								"JS_CFUNC_DEF",
								"JS_ALIAS_DEF",
								"JS_CFUNC_DEF",
								"JS_PROP_STRING_DEF",
								"JS_CFUNC_DEF",
								"  js_size_init",
								"  js_size_export",
								"  js_size_constructor",
								"JS_INIT_MODULE",
								"JS_INIT_MODULE",
								"JS_INIT_MODULE"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "js_mat.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44667,
						"regions":
						{
						},
						"selection":
						[
							[
								24994,
								24994
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14935.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js_draw.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16118,
						"regions":
						{
						},
						"selection":
						[
							[
								13048,
								13060
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7854.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "init_module.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3045,
						"regions":
						{
						},
						"selection":
						[
							[
								2601,
								2601
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4185,
						"regions":
						{
						},
						"selection":
						[
							[
								1680,
								1680
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1014.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "js_video_capture.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6404,
						"regions":
						{
						},
						"selection":
						[
							[
								5543,
								5547
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2519.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "js_cv.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84714,
						"regions":
						{
						},
						"selection":
						[
							[
								11125,
								11253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6062.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "js_umat.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1863,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								19
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "js_size.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14933,
						"regions":
						{
						},
						"selection":
						[
							[
								3804,
								3826
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1831.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "js_slice_iterator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6447,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js_subdiv2d.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10862,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "js_line.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14406,
						"regions":
						{
						},
						"selection":
						[
							[
								6329,
								6422
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3231.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "js_contour.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32335,
						"regions":
						{
						},
						"selection":
						[
							[
								26835,
								26835
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16151.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "js_point.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12542,
						"regions":
						{
						},
						"selection":
						[
							[
								6774,
								6790
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4063.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "js_point_iterator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6043,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "js_size.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2335,
						"regions":
						{
						},
						"selection":
						[
							[
								1144,
								1158
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "js_rect.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18572,
						"regions":
						{
						},
						"selection":
						[
							[
								7530,
								7546
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4135.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "js_umat.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30280,
						"regions":
						{
						},
						"selection":
						[
							[
								18140,
								18140
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11255.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "js_mat.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 797,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "qjs-opencv.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"video",
				"js_video_capture.cpp"
			],
			[
				"js-bin",
				"cmake/js-bindings.cmake"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"wasi",
				"cmake/wasi.toolchain.cmake"
			],
			[
				"test-vid",
				"plot-cv/test-video.js"
			],
			[
				"cvPipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param",
				"plot-cv/param.js"
			],
			[
				"test-oencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_umat",
				"plot-cv/src/js_umat.hpp"
			],
			[
				"pixel_",
				"plot-cv/src/pixel_neighborhood.hpp"
			],
			[
				"test-opencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_typed",
				"plot-cv/src/js_typed_array.hpp"
			],
			[
				"opencv.cmake",
				"plot-cv/cmake/opencv.cmake"
			],
			[
				"test-vide",
				"plot-cv/test-video.js"
			],
			[
				"test-op",
				"plot-cv/test-opencv.js"
			],
			[
				"cvHigh",
				"plot-cv/cvHighGUI.js"
			],
			[
				"js.cpp",
				"plot-cv/src/js.cpp"
			],
			[
				"js_size",
				"plot-cv/src/js_size.hpp"
			],
			[
				"js_ma",
				"plot-cv/src/js_mat.cpp"
			],
			[
				"js_cv",
				"plot-cv/src/js_cv.cpp"
			],
			[
				"js_draw",
				"plot-cv/src/js_draw.cpp"
			],
			[
				"quickjs.h",
				"plot-cv/quickjs/quickjs.h"
			],
			[
				"test-open",
				"plot-cv/test-opencv.js"
			],
			[
				"js_mat",
				"plot-cv/src/js_mat.cpp"
			],
			[
				"jsbind",
				"plot-cv/src/jsbindings.hpp"
			],
			[
				"js_cv.cp",
				"plot-cv/src/js_cv.cpp"
			],
			[
				"util.js",
				"plot-cv/lib/util.js"
			],
			[
				"cvpipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param.js",
				"plot-cv/param.js"
			],
			[
				"test-video",
				"plot-cv/test-video.js"
			],
			[
				"test_w",
				"plot-cv/test_worker_module.js"
			],
			[
				"test-wo",
				"plot-cv/test-worker.js"
			],
			[
				"cvPip",
				"plot-cv/cvPipeline.js"
			],
			[
				"worker",
				"plot-cv/worker.js"
			],
			[
				"worker.js",
				"plot-cv/worker.js"
			],
			[
				"test-work",
				"plot-cv/test-worker.js"
			],
			[
				"test-uma",
				"plot-cv/test-umat.js"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"quickjs.c",
				"plot-cv/quickjs/quickjs.c"
			],
			[
				"filesys",
				"plot-cv/lib/filesystem.js"
			],
			[
				"console",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"util",
				"plot-cv/lib/util.js"
			],
			[
				"bjson",
				"plot-cv/bjson.js"
			],
			[
				"ast-shel",
				"plot-cv/ast-shell.js"
			],
			[
				"clang-ast",
				"plot-cv/clang-ast.js"
			],
			[
				"clang-list",
				"plot-cv/clang-list.js"
			],
			[
				"test-bjs",
				"plot-cv/test-bjson.js"
			],
			[
				"repl.js",
				"plot-cv/repl.js"
			],
			[
				"clang-li",
				"plot-cv/clang-list.js"
			],
			[
				"clang-",
				"plot-cv/clang-ast.js"
			],
			[
				"ast-shell",
				"plot-cv/ast-shell.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"repl.j",
				"plot-cv/repl.js"
			],
			[
				"test-ecmascript2.js",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"test-ecmascript.js",
				"plot-cv/test-ecmascript.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"parser2",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"test-ecma",
				"plot-cv/test-ecmascript2.es"
			],
			[
				"test-parse",
				"plot-cv/test-parse.js"
			],
			[
				"grammar.js",
				"plot-cv/lib/parse/grammar.js"
			],
			[
				"terminal",
				"plot-cv/terminal.js"
			],
			[
				"test_lex",
				"plot-cv/quickjs/modules/tests/test_lexer.js"
			],
			[
				"test-ec",
				"plot-cv/test-ecmascript.js"
			],
			[
				"parser.js",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"printer.",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"estree",
				"plot-cv/lib/ecmascript/estree.js"
			],
			[
				"parser2.j",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"tmp.js",
				"plot-cv/tmp.js"
			],
			[
				"test-util",
				"plot-cv/test-util.js"
			],
			[
				"printer",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"parser",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"utils.h",
				"plot-cv/utils.h"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"quickjs-lex",
				"plot-cv/quickjs/modules/quickjs-lexer.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"quickjs-in",
				"plot-cv/quickjs/modules/quickjs-internal.h"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 406.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
