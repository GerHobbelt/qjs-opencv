{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bytes_",
				"bytes_per_element"
			],
			[
				"QUICKJS_MO",
				"QUICKJS_MODULE_CFLAGS"
			],
			[
				"check_cxx",
				"check_cxx_standard_flag"
			],
			[
				"check_func",
				"check_function_exists"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JSIn",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"cons",
				"console"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "JSBINDINGS_HPP\nJSRectDataD\nJSMatData\nJSUMatData\nJSSizeDataD\nJSVideoCaptureData\nJSTickMeterData\nJSCLAHEData\nJSInputArray\nJSOutputArray\nJSInputOutputArray\nJSLineTraits\n  array_type\n  vector_type\n  scalar_type\nVISIBLE\n  __declspec\nHIDDEN\nVISIBLE\n  __attribute__\nHIDDEN\n  __attribute__\nJS_CGETSET_ENUMERABLE_DEF\n  js_draw_s\n  js_draw_init\n  js_line_new\n  js_init_module\n  js_init_module_point\n  js_init_module_size\n  js_init_module_rect\n  js_init_module_mat\n  js_init_module_contour\n  js_init_module_line\n  js_init_module_draw\n  js_init_module_cv\n  js_init_module_video_capture\n  js_video_capture_init\n  js_video_capture_wrap\n  js_mat_wrap\n  js_global_get\n  js_is_iterable\n  js_iterator_method\n  js_iterator_new\n  js_iterator_next\n  js_symbol_atom\n  js_symbol_ctor\n  js_symbol_get_static\n  countof\n  js_vector_vec4i_to_array\n  js_ctor\n  js_proto\n  js_new\n  js_number_read\n  js_number_read<int32_t>\n  js_number_read<uint32_t>\n  js_number_read<int64_t>\n  js_number_new\n  js_number_new<int32_t>\n  js_number_new<uint32_t>\n  js_number_new<int64_t>\n  js_color_read\n  js_color_read\n  js_color_read\n  js_color_new\n  js_ref\n  round_to\n  js_arraybuffer_range\n  js_arraybuffer_range\n  value_type\n  js_arraybuffer_from\n  js_arraybuffer_from\n  js_global_get\n  js_symbol_ctor\n  js_symbol_invoke_static\n  js_symbol_for\n  js_symbol_for_atom\n  js_set_inspect_method\n  js_symbol_get_static\n  js_symbol_atom\n  js_iterator_method\n  js_is_iterable\n  js_is_array_like\nArrayBufferProps\nArrayBufferProps\n  js_is_arraybuffer\n  js_arraybuffer_props\n  js__name\n  js_class_name\n  js_typedarray_prototype\n  js_typedarray_constructor\n  js_is_typedarray\n  js_is_array\n  js_iterator_new\n  js_iterator_next\n  js_value_to\n  js_value_to\n  js_value_to\n  js_value_from\n  js_value_from\n  js_value_from\n  js_value_from\n  js_iterable\n  to_vector\n  js_iterator_new\n  clear\n  js_iterator_next\n  js_value_to\n  push_back\nJS_FreeValue\nJS_FreeValue\n  size\n  to_array\n  js_iterator_new\n  js_iterator_next\n  js_value_to\nJS_FreeValue\nJS_FreeValue\n  to_scalar\n  to_array\n  js_iterable_to\n  js_iterable_to\n  array_type\n  js_iterable_to",
			"settings":
			{
				"buffer_size": 2080,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					104,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								932
							],
							[
								1042,
								1056
							],
							[
								1173,
								1187
							],
							[
								1521,
								1534
							],
							[
								2115,
								2128
							],
							[
								2271,
								2284
							],
							[
								2617,
								2630
							],
							[
								2973,
								2988
							],
							[
								3286,
								3301
							],
							[
								3620,
								3633
							],
							[
								4597,
								4612
							],
							[
								4937,
								4949
							],
							[
								5711,
								5729
							],
							[
								6607,
								6624
							],
							[
								6891,
								6907
							],
							[
								7341,
								7365
							],
							[
								7760,
								7774
							],
							[
								8649,
								8662
							],
							[
								9186,
								9208
							],
							[
								9348,
								9366
							],
							[
								9847,
								9872
							],
							[
								9920,
								9945
							],
							[
								9993,
								10005
							],
							[
								10039,
								10051
							],
							[
								10082,
								10094
							],
							[
								10130,
								10142
							],
							[
								10174,
								10192
							],
							[
								10225,
								10243
							],
							[
								10276,
								10294
							],
							[
								10327,
								10345
							],
							[
								10378,
								10390
							],
							[
								10422,
								10440
							],
							[
								10477,
								10495
							],
							[
								10532,
								10550
							],
							[
								10586,
								10604
							],
							[
								10648,
								10660
							],
							[
								10699,
								10711
							],
							[
								10767,
								10785
							],
							[
								10977,
								10989
							],
							[
								11023,
								11036
							],
							[
								11990,
								12010
							],
							[
								12222,
								12237
							],
							[
								12351,
								12365
							],
							[
								12403,
								12417
							],
							[
								12460,
								12474
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD7BgAAICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfbW92ZQogIGpzX2NvbnRvdXJfYnVmZmVyCiAganNfY29udG91cl9hcnJheQogIGpzX2NvbnRvdXJfYXBwcm94cG9seWRwCiAganNfY29udG91cl9hcmNsZW5ndGgKICBqc19jb250b3VyX2FyZWEKICBqc19jb250b3VyX2JvdW5kaW5ncmVjdAogIGpzX2NvbnRvdXJfY2VudGVyCiAganNfY29udG91cl9jb252ZXhodWxsCiAganNfY29udG91cl9jb252ZXhpdHlkZWZlY3RzCiAganNfY29udG91cl9jb25zdHJ1Y3RvcgogIGpzX2NvbnRvdXJfZmluYWxpemVyCiAganNfY29udG91cl9maXRlbGxpcHNlCiAganNfY29udG91cl9maXRsaW5lCiAganNfY29udG91cl9hdAogIGpzX2NvbnRvdXJfZ2V0bWF0CiAganNfY29udG91cl9pbnRlcnNlY3Rjb252ZXgKICBqc19jb250b3VyX2lzY29udmV4CiAganNfY29udG91cl9sZW5ndGgKICBqc19jb250b3VyX21pbmFyZWFyZWN0CiAganNfY29udG91cl9taW5lbmNsb3NpbmdjaXJjbGUKICBqc19jb250b3VyX21pbmVuY2xvc2luZ3RyaWFuZ2xlCiAganNfY29udG91cl9wb2ludHBvbHlnb250ZXN0CiAganNfY29udG91cl9wc2ltcGwKICBqc19jb250b3VyX3B1c2gKICBqc19jb250b3VyX3BvcAogIGpzX2NvbnRvdXJfdW5zaGlmdAogIGpzX2NvbnRvdXJfc2hpZnQKICBqc19jb250b3VyX2NvbmNhdAogIGpzX2NvbnRvdXJfcm90YXRlZHJlY3RhbmdsZWludGVyc2VjdGlvbgogIGpzX2NvbnRvdXJfcm90YXRlcG9pbnRzCiAganNfY29udG91cl90b2FycmF5CiAganNfY29udG91cl90b3N0cmluZwogIGpzX2NvbnRvdXJfcmVjdAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cl9pbnNwZWN0CiAganNfY29udG91cl9pdGVyYXRvcgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UMzJfREVGCkpTX1BST1BfSU5UMzJfREVGCiAganNfY29udG91cl9pbml0CiAganNfY29udG91cl9leHBvcnQKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAACgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								931
							],
							[
								1039,
								1052
							],
							[
								1162,
								1176
							],
							[
								1293,
								1307
							],
							[
								1641,
								1654
							],
							[
								2235,
								2248
							],
							[
								2391,
								2404
							],
							[
								2737,
								2750
							],
							[
								3093,
								3108
							],
							[
								3406,
								3421
							],
							[
								3740,
								3753
							],
							[
								4717,
								4732
							],
							[
								5057,
								5069
							],
							[
								5831,
								5849
							],
							[
								6727,
								6744
							],
							[
								7011,
								7027
							],
							[
								7461,
								7485
							],
							[
								7880,
								7894
							],
							[
								8769,
								8782
							],
							[
								9306,
								9328
							],
							[
								9468,
								9486
							],
							[
								9967,
								9992
							],
							[
								10040,
								10065
							],
							[
								10113,
								10125
							],
							[
								10159,
								10171
							],
							[
								10202,
								10214
							],
							[
								10250,
								10262
							],
							[
								10294,
								10312
							],
							[
								10345,
								10363
							],
							[
								10396,
								10414
							],
							[
								10447,
								10465
							],
							[
								10498,
								10510
							],
							[
								10542,
								10560
							],
							[
								10597,
								10615
							],
							[
								10652,
								10670
							],
							[
								10706,
								10724
							],
							[
								10768,
								10780
							],
							[
								10819,
								10831
							],
							[
								10887,
								10905
							],
							[
								11097,
								11109
							],
							[
								11143,
								11156
							],
							[
								12110,
								12130
							],
							[
								12342,
								12357
							],
							[
								12471,
								12485
							],
							[
								12523,
								12537
							],
							[
								12580,
								12594
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAoAwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcDAAAgIGpzX3BvaW50X25ldwogIGpzX3BvaW50X25ldwogIGpzX3BvaW50X3dyYXAKICBqc19wb2ludF9jbG9uZQogIGpzX3BvaW50X2Nyb3NzCiAganNfcG9pbnRfY3RvcgogIGpzX3BvaW50X2RhdGEKICBqc19wb2ludF9kZG90CiAganNfcG9pbnRfZGlmZgogIGpzX3BvaW50X2dldF94eQogIGpzX3BvaW50X2luc2lkZQogIGpzX3BvaW50X25vcm0KICBqc19wb2ludF9zZXRfeHkKICBqc19wb2ludF9hZGQKICBqc19wb2ludF90b19zdHJpbmcKICBqc19wb2ludF90b19hcnJheQogIGpzX3BvaW50X2luc3BlY3QKICBqc19wb2ludF9zeW1ib2xfaXRlcmF0b3IKICBqc19wb2ludF9yb3VuZAogIGpzX3BvaW50X2Zyb20KICBqc19hcnJheV90bzxkb3VibGUsIDI+CiAganNfcG9pbnRfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfcG9pbnRfaW5pdAogIGpzX3BvaW50X2NvbnN0cnVjdG9yCiAganNfcG9pbnRfZXhwb3J0CkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.hpp",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								93,
								106
							],
							[
								154,
								168
							],
							[
								328,
								340
							],
							[
								404,
								417
							],
							[
								488,
								501
							],
							[
								538,
								551
							],
							[
								586,
								606
							],
							[
								672,
								692
							],
							[
								770,
								783
							],
							[
								1470,
								1484
							],
							[
								2102,
								2114
							],
							[
								2245,
								2256
							],
							[
								2459,
								2472
							]
						],
						"symlist":
						[
							"JS_POINT_HPP",
							"js_point_init",
							"js_point_clone",
							"js_point_new",
							"js_point_wrap",
							"js_point_data",
							"js_point_init",
							"js_point_constructor",
							"js_init_point_module",
							"js_point_read",
							"js_point_write",
							"js_point_get",
							"js_is_point",
							"js_point_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.hpp",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								93,
								106
							],
							[
								154,
								168
							],
							[
								328,
								340
							],
							[
								404,
								416
							],
							[
								466,
								479
							],
							[
								550,
								563
							],
							[
								600,
								613
							],
							[
								648,
								668
							],
							[
								734,
								754
							],
							[
								832,
								845
							],
							[
								1532,
								1546
							],
							[
								2164,
								2176
							],
							[
								2307,
								2318
							],
							[
								2521,
								2534
							]
						],
						"symlist":
						[
							"JS_POINT_HPP",
							"js_point_init",
							"js_point_clone",
							"js_point_new",
							"js_point_new",
							"js_point_wrap",
							"js_point_data",
							"js_point_init",
							"js_point_constructor",
							"js_init_point_module",
							"js_point_read",
							"js_point_write",
							"js_point_get",
							"js_is_point",
							"js_point_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoAAAASlNfUE9JTlRfSFBQCiAganNfcG9pbnRfaW5pdAogIGpzX3BvaW50X2Nsb25lCiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfd3JhcAogIGpzX3BvaW50X2RhdGEKICBqc19wb2ludF9pbml0CiAganNfcG9pbnRfY29uc3RydWN0b3IKICBqc19pbml0X3BvaW50X21vZHVsZQogIGpzX3BvaW50X3JlYWQKICBqc19wb2ludF93cml0ZQogIGpzX3BvaW50X2dldAogIGpzX2lzX3BvaW50CiAganNfcG9pbnRfaW5pdAAAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								931
							],
							[
								1036,
								1049
							],
							[
								1159,
								1173
							],
							[
								1290,
								1304
							],
							[
								1638,
								1651
							],
							[
								2232,
								2245
							],
							[
								2388,
								2401
							],
							[
								2734,
								2747
							],
							[
								3090,
								3105
							],
							[
								3403,
								3418
							],
							[
								3737,
								3750
							],
							[
								4714,
								4729
							],
							[
								5054,
								5066
							],
							[
								5828,
								5846
							],
							[
								6724,
								6741
							],
							[
								7008,
								7024
							],
							[
								7458,
								7482
							],
							[
								7877,
								7891
							],
							[
								8766,
								8779
							],
							[
								9303,
								9325
							],
							[
								9465,
								9483
							],
							[
								9964,
								9989
							],
							[
								10037,
								10062
							],
							[
								10110,
								10122
							],
							[
								10156,
								10168
							],
							[
								10199,
								10211
							],
							[
								10247,
								10259
							],
							[
								10291,
								10309
							],
							[
								10342,
								10360
							],
							[
								10393,
								10411
							],
							[
								10444,
								10462
							],
							[
								10495,
								10507
							],
							[
								10539,
								10557
							],
							[
								10594,
								10612
							],
							[
								10649,
								10667
							],
							[
								10703,
								10721
							],
							[
								10765,
								10777
							],
							[
								10816,
								10828
							],
							[
								10884,
								10902
							],
							[
								11094,
								11106
							],
							[
								11140,
								11153
							],
							[
								12107,
								12127
							],
							[
								12339,
								12354
							],
							[
								12468,
								12482
							],
							[
								12520,
								12534
							],
							[
								12577,
								12591
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3AAAASlNfUE9JTlRfSFBQCiAganNfcG9pbnRfaW5pdAogIGpzX3BvaW50X2Nsb25lCiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfd3JhcAogIGpzX3BvaW50X2RhdGEKICBqc19wb2ludF9pbml0CiAganNfcG9pbnRfY29uc3RydWN0b3IKICBqc19pbml0X3BvaW50X21vZHVsZQogIGpzX3BvaW50X3JlYWQKICBqc19wb2ludF93cml0ZQogIGpzX3BvaW50X2dldAogIGpzX2lzX3BvaW50CiAganNfcG9pbnRfaW5pdAAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.hpp",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								93,
								106
							],
							[
								154,
								168
							],
							[
								328,
								340
							],
							[
								404,
								416
							],
							[
								466,
								479
							],
							[
								550,
								563
							],
							[
								600,
								613
							],
							[
								648,
								668
							],
							[
								734,
								754
							],
							[
								832,
								845
							],
							[
								1532,
								1546
							],
							[
								2164,
								2176
							],
							[
								2307,
								2318
							],
							[
								2521,
								2534
							]
						],
						"symlist":
						[
							"JS_POINT_HPP",
							"js_point_init",
							"js_point_clone",
							"js_point_new",
							"js_point_new",
							"js_point_wrap",
							"js_point_data",
							"js_point_init",
							"js_point_constructor",
							"js_init_point_module",
							"js_point_read",
							"js_point_write",
							"js_point_get",
							"js_is_point",
							"js_point_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.hpp",
						"symkeys":
						[
							[
								29,
								41
							],
							[
								93,
								106
							],
							[
								154,
								168
							],
							[
								328,
								340
							],
							[
								390,
								403
							],
							[
								474,
								487
							],
							[
								524,
								537
							],
							[
								572,
								592
							],
							[
								658,
								678
							],
							[
								736,
								748
							],
							[
								833,
								846
							],
							[
								1533,
								1547
							],
							[
								2165,
								2177
							],
							[
								2308,
								2319
							],
							[
								2522,
								2535
							]
						],
						"symlist":
						[
							"JS_POINT_HPP",
							"js_point_init",
							"js_point_clone",
							"js_point_new",
							"js_point_wrap",
							"js_point_data",
							"js_point_init",
							"js_point_constructor",
							"js_init_point_module",
							"js_point_new",
							"js_point_read",
							"js_point_write",
							"js_point_get",
							"js_is_point",
							"js_point_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3AAAASlNfUE9JTlRfSFBQCiAganNfcG9pbnRfaW5pdAogIGpzX3BvaW50X2Nsb25lCiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfd3JhcAogIGpzX3BvaW50X2RhdGEKICBqc19wb2ludF9pbml0CiAganNfcG9pbnRfY29uc3RydWN0b3IKICBqc19pbml0X3BvaW50X21vZHVsZQogIGpzX3BvaW50X3JlYWQKICBqc19wb2ludF93cml0ZQogIGpzX3BvaW50X2dldAogIGpzX2lzX3BvaW50CiAganNfcG9pbnRfaW5pdAAAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								931
							],
							[
								1036,
								1049
							],
							[
								1159,
								1173
							],
							[
								1290,
								1304
							],
							[
								1638,
								1651
							],
							[
								2232,
								2245
							],
							[
								2388,
								2401
							],
							[
								2734,
								2747
							],
							[
								3090,
								3105
							],
							[
								3403,
								3418
							],
							[
								3737,
								3750
							],
							[
								4714,
								4729
							],
							[
								5054,
								5066
							],
							[
								5828,
								5846
							],
							[
								6724,
								6741
							],
							[
								7008,
								7024
							],
							[
								7458,
								7482
							],
							[
								7877,
								7891
							],
							[
								8766,
								8779
							],
							[
								9303,
								9325
							],
							[
								9465,
								9483
							],
							[
								9964,
								9989
							],
							[
								10037,
								10062
							],
							[
								10110,
								10122
							],
							[
								10156,
								10168
							],
							[
								10199,
								10211
							],
							[
								10247,
								10259
							],
							[
								10291,
								10309
							],
							[
								10342,
								10360
							],
							[
								10393,
								10411
							],
							[
								10444,
								10462
							],
							[
								10495,
								10507
							],
							[
								10539,
								10557
							],
							[
								10594,
								10612
							],
							[
								10649,
								10667
							],
							[
								10703,
								10721
							],
							[
								10765,
								10777
							],
							[
								10816,
								10828
							],
							[
								10884,
								10902
							],
							[
								11094,
								11106
							],
							[
								11140,
								11153
							],
							[
								12107,
								12127
							],
							[
								12339,
								12354
							],
							[
								12468,
								12482
							],
							[
								12520,
								12534
							],
							[
								12577,
								12591
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD3AAAASlNfUE9JTlRfSFBQCiAganNfcG9pbnRfaW5pdAogIGpzX3BvaW50X2Nsb25lCiAganNfcG9pbnRfbmV3CiAganNfcG9pbnRfd3JhcAogIGpzX3BvaW50X2RhdGEKICBqc19wb2ludF9pbml0CiAganNfcG9pbnRfY29uc3RydWN0b3IKICBqc19pbml0X3BvaW50X21vZHVsZQogIGpzX3BvaW50X25ldwogIGpzX3BvaW50X3JlYWQKICBqc19wb2ludF93cml0ZQogIGpzX3BvaW50X2dldAogIGpzX2lzX3BvaW50CiAganNfcG9pbnRfaW5pdAAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								932
							],
							[
								1042,
								1056
							],
							[
								1173,
								1187
							],
							[
								1521,
								1534
							],
							[
								2115,
								2128
							],
							[
								2271,
								2284
							],
							[
								2617,
								2630
							],
							[
								2973,
								2988
							],
							[
								3286,
								3301
							],
							[
								3620,
								3633
							],
							[
								4597,
								4612
							],
							[
								4937,
								4949
							],
							[
								5711,
								5729
							],
							[
								6607,
								6624
							],
							[
								6891,
								6907
							],
							[
								7341,
								7365
							],
							[
								7760,
								7774
							],
							[
								8649,
								8662
							],
							[
								9186,
								9208
							],
							[
								9348,
								9366
							],
							[
								9673,
								9685
							],
							[
								9979,
								10004
							],
							[
								10052,
								10077
							],
							[
								10125,
								10137
							],
							[
								10171,
								10183
							],
							[
								10214,
								10226
							],
							[
								10262,
								10274
							],
							[
								10306,
								10324
							],
							[
								10357,
								10375
							],
							[
								10408,
								10426
							],
							[
								10459,
								10477
							],
							[
								10510,
								10522
							],
							[
								10554,
								10572
							],
							[
								10609,
								10627
							],
							[
								10664,
								10682
							],
							[
								10718,
								10736
							],
							[
								10780,
								10792
							],
							[
								10831,
								10843
							],
							[
								10899,
								10917
							],
							[
								11109,
								11121
							],
							[
								11155,
								11168
							],
							[
								12122,
								12142
							],
							[
								12354,
								12369
							],
							[
								12483,
								12497
							],
							[
								12535,
								12549
							],
							[
								12592,
								12606
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_rect.cpp",
						"symkeys":
						[
							[
								332,
								343
							],
							[
								872,
								884
							],
							[
								1021,
								1033
							],
							[
								2417,
								2429
							],
							[
								2664,
								2675
							],
							[
								3642,
								3653
							],
							[
								4706,
								4723
							],
							[
								5411,
								5428
							],
							[
								5974,
								5987
							],
							[
								7501,
								7516
							],
							[
								8284,
								8298
							],
							[
								12695,
								12718
							],
							[
								13112,
								13124
							],
							[
								13810,
								13827
							],
							[
								14239,
								14264
							],
							[
								14357,
								14382
							],
							[
								14475,
								14500
							],
							[
								14601,
								14626
							],
							[
								14729,
								14749
							],
							[
								14844,
								14864
							],
							[
								14959,
								14979
							],
							[
								15078,
								15098
							],
							[
								15197,
								15209
							],
							[
								15274,
								15286
							],
							[
								15351,
								15369
							],
							[
								15471,
								15489
							],
							[
								15585,
								15603
							],
							[
								15697,
								15715
							],
							[
								15805,
								15823
							],
							[
								15913,
								15931
							],
							[
								16027,
								16045
							],
							[
								16143,
								16161
							],
							[
								16259,
								16277
							],
							[
								16375,
								16387
							],
							[
								16475,
								16487
							],
							[
								16575,
								16593
							],
							[
								16688,
								16706
							],
							[
								16799,
								16817
							],
							[
								16916,
								16934
							],
							[
								17031,
								17049
							],
							[
								17161,
								17173
							],
							[
								17206,
								17218
							],
							[
								18082,
								18096
							],
							[
								18177,
								18196
							],
							[
								18410,
								18424
							],
							[
								18462,
								18476
							],
							[
								18529,
								18543
							]
						],
						"symlist":
						[
							"js_rect_new",
							"js_rect_wrap",
							"js_rect_ctor",
							"js_rect_data",
							"js_rect_get",
							"js_rect_set",
							"js_rect_to_string",
							"js_rect_to_source",
							"js_rect_funcs",
							"js_rect_inspect",
							"js_rect_method",
							"js_rect_symbol_iterator",
							"js_rect_from",
							"js_rect_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_rect_init",
							"js_rect_export",
							"js_rect_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAWAMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_rect.cpp",
						"symkeys":
						[
							[
								332,
								343
							],
							[
								872,
								883
							],
							[
								1009,
								1021
							],
							[
								1158,
								1170
							],
							[
								2554,
								2566
							],
							[
								2801,
								2812
							],
							[
								3779,
								3790
							],
							[
								4843,
								4860
							],
							[
								5548,
								5565
							],
							[
								6111,
								6124
							],
							[
								7638,
								7653
							],
							[
								8421,
								8435
							],
							[
								12832,
								12855
							],
							[
								13249,
								13261
							],
							[
								13947,
								13964
							],
							[
								14376,
								14401
							],
							[
								14494,
								14519
							],
							[
								14612,
								14637
							],
							[
								14738,
								14763
							],
							[
								14866,
								14886
							],
							[
								14981,
								15001
							],
							[
								15096,
								15116
							],
							[
								15215,
								15235
							],
							[
								15334,
								15346
							],
							[
								15411,
								15423
							],
							[
								15488,
								15506
							],
							[
								15608,
								15626
							],
							[
								15722,
								15740
							],
							[
								15834,
								15852
							],
							[
								15942,
								15960
							],
							[
								16050,
								16068
							],
							[
								16164,
								16182
							],
							[
								16280,
								16298
							],
							[
								16396,
								16414
							],
							[
								16512,
								16524
							],
							[
								16612,
								16624
							],
							[
								16712,
								16730
							],
							[
								16825,
								16843
							],
							[
								16936,
								16954
							],
							[
								17053,
								17071
							],
							[
								17168,
								17186
							],
							[
								17298,
								17310
							],
							[
								17343,
								17355
							],
							[
								18219,
								18233
							],
							[
								18314,
								18333
							],
							[
								18547,
								18561
							],
							[
								18599,
								18613
							],
							[
								18666,
								18680
							]
						],
						"symlist":
						[
							"js_rect_new",
							"js_rect_new",
							"js_rect_wrap",
							"js_rect_ctor",
							"js_rect_data",
							"js_rect_get",
							"js_rect_set",
							"js_rect_to_string",
							"js_rect_to_source",
							"js_rect_funcs",
							"js_rect_inspect",
							"js_rect_method",
							"js_rect_symbol_iterator",
							"js_rect_from",
							"js_rect_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_rect_init",
							"js_rect_export",
							"js_rect_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYAwAAICBqc19yZWN0X25ldwogIGpzX3JlY3Rfd3JhcAogIGpzX3JlY3RfY3RvcgogIGpzX3JlY3RfZGF0YQogIGpzX3JlY3RfZ2V0CiAganNfcmVjdF9zZXQKICBqc19yZWN0X3RvX3N0cmluZwogIGpzX3JlY3RfdG9fc291cmNlCiAganNfcmVjdF9mdW5jcwogIGpzX3JlY3RfaW5zcGVjdAogIGpzX3JlY3RfbWV0aG9kCiAganNfcmVjdF9zeW1ib2xfaXRlcmF0b3IKICBqc19yZWN0X2Zyb20KICBqc19yZWN0X2ZpbmFsaXplcgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0NHRVRTRVRfTUFHSUNfREVGCkpTX0FMSUFTX0RFRgpKU19BTElBU19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3JlY3RfaW5pdAogIGpzX3JlY3RfZXhwb3J0CiAganNfcmVjdF9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAZgMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_rect.cpp",
						"symkeys":
						[
							[
								332,
								343
							],
							[
								873,
								884
							],
							[
								1011,
								1023
							],
							[
								1160,
								1172
							],
							[
								2556,
								2568
							],
							[
								2803,
								2814
							],
							[
								3781,
								3792
							],
							[
								4845,
								4862
							],
							[
								5550,
								5567
							],
							[
								6113,
								6126
							],
							[
								7640,
								7655
							],
							[
								8423,
								8437
							],
							[
								12834,
								12857
							],
							[
								13251,
								13263
							],
							[
								13949,
								13966
							],
							[
								14378,
								14403
							],
							[
								14496,
								14521
							],
							[
								14614,
								14639
							],
							[
								14740,
								14765
							],
							[
								14868,
								14888
							],
							[
								14983,
								15003
							],
							[
								15098,
								15118
							],
							[
								15217,
								15237
							],
							[
								15336,
								15348
							],
							[
								15413,
								15425
							],
							[
								15490,
								15508
							],
							[
								15610,
								15628
							],
							[
								15724,
								15742
							],
							[
								15836,
								15854
							],
							[
								15944,
								15962
							],
							[
								16052,
								16070
							],
							[
								16166,
								16184
							],
							[
								16282,
								16300
							],
							[
								16398,
								16416
							],
							[
								16514,
								16526
							],
							[
								16614,
								16626
							],
							[
								16714,
								16732
							],
							[
								16827,
								16845
							],
							[
								16938,
								16956
							],
							[
								17055,
								17073
							],
							[
								17170,
								17188
							],
							[
								17300,
								17312
							],
							[
								17345,
								17357
							],
							[
								18221,
								18235
							],
							[
								18316,
								18335
							],
							[
								18549,
								18563
							],
							[
								18601,
								18615
							],
							[
								18668,
								18682
							]
						],
						"symlist":
						[
							"js_rect_new",
							"js_rect_new",
							"js_rect_wrap",
							"js_rect_ctor",
							"js_rect_data",
							"js_rect_get",
							"js_rect_set",
							"js_rect_to_string",
							"js_rect_to_source",
							"js_rect_funcs",
							"js_rect_inspect",
							"js_rect_method",
							"js_rect_symbol_iterator",
							"js_rect_from",
							"js_rect_finalizer",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_CGETSET_MAGIC_DEF",
							"JS_ALIAS_DEF",
							"JS_ALIAS_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_rect_init",
							"js_rect_export",
							"js_rect_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABmAwAAICBqc19yZWN0X25ldwogIGpzX3JlY3RfbmV3CiAganNfcmVjdF93cmFwCiAganNfcmVjdF9jdG9yCiAganNfcmVjdF9kYXRhCiAganNfcmVjdF9nZXQKICBqc19yZWN0X3NldAogIGpzX3JlY3RfdG9fc3RyaW5nCiAganNfcmVjdF90b19zb3VyY2UKICBqc19yZWN0X2Z1bmNzCiAganNfcmVjdF9pbnNwZWN0CiAganNfcmVjdF9tZXRob2QKICBqc19yZWN0X3N5bWJvbF9pdGVyYXRvcgogIGpzX3JlY3RfZnJvbQogIGpzX3JlY3RfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfcmVjdF9pbml0CiAganNfcmVjdF9leHBvcnQKICBqc19yZWN0X2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAABmAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								932
							],
							[
								1042,
								1056
							],
							[
								1173,
								1187
							],
							[
								1521,
								1534
							],
							[
								2115,
								2128
							],
							[
								2271,
								2284
							],
							[
								2617,
								2630
							],
							[
								2973,
								2988
							],
							[
								3286,
								3301
							],
							[
								3620,
								3633
							],
							[
								4597,
								4612
							],
							[
								4937,
								4949
							],
							[
								5711,
								5729
							],
							[
								6607,
								6624
							],
							[
								6891,
								6907
							],
							[
								7341,
								7365
							],
							[
								7760,
								7774
							],
							[
								8649,
								8662
							],
							[
								9186,
								9208
							],
							[
								9348,
								9366
							],
							[
								9673,
								9685
							],
							[
								9979,
								10004
							],
							[
								10052,
								10077
							],
							[
								10125,
								10137
							],
							[
								10171,
								10183
							],
							[
								10214,
								10226
							],
							[
								10262,
								10274
							],
							[
								10306,
								10324
							],
							[
								10357,
								10375
							],
							[
								10408,
								10426
							],
							[
								10459,
								10477
							],
							[
								10510,
								10522
							],
							[
								10554,
								10572
							],
							[
								10609,
								10627
							],
							[
								10664,
								10682
							],
							[
								10718,
								10736
							],
							[
								10780,
								10792
							],
							[
								10831,
								10843
							],
							[
								10899,
								10917
							],
							[
								11109,
								11121
							],
							[
								11155,
								11168
							],
							[
								12122,
								12142
							],
							[
								12354,
								12369
							],
							[
								12483,
								12497
							],
							[
								12535,
								12549
							],
							[
								12592,
								12606
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABmAwAAICBqc19yZWN0X25ldwogIGpzX3JlY3RfbmV3CiAganNfcmVjdF93cmFwCiAganNfcmVjdF9jdG9yCiAganNfcmVjdF9kYXRhCiAganNfcmVjdF9nZXQKICBqc19yZWN0X3NldAogIGpzX3JlY3RfdG9fc3RyaW5nCiAganNfcmVjdF90b19zb3VyY2UKICBqc19yZWN0X2Z1bmNzCiAganNfcmVjdF9pbnNwZWN0CiAganNfcmVjdF9tZXRob2QKICBqc19yZWN0X3N5bWJvbF9pdGVyYXRvcgogIGpzX3JlY3RfZnJvbQogIGpzX3JlY3RfZmluYWxpemVyCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRgpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQ0dFVFNFVF9NQUdJQ19ERUYKSlNfQUxJQVNfREVGCkpTX0FMSUFTX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19QUk9QX1NUUklOR19ERUYKSlNfQ0ZVTkNfREVGCiAganNfcmVjdF9pbml0CiAganNfcmVjdF9leHBvcnQKICBqc19yZWN0X2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								447,
								459
							],
							[
								919,
								932
							],
							[
								1042,
								1056
							],
							[
								1173,
								1187
							],
							[
								1521,
								1534
							],
							[
								2115,
								2128
							],
							[
								2271,
								2284
							],
							[
								2617,
								2630
							],
							[
								2973,
								2988
							],
							[
								3286,
								3301
							],
							[
								3620,
								3633
							],
							[
								4597,
								4612
							],
							[
								4937,
								4949
							],
							[
								5711,
								5729
							],
							[
								6607,
								6624
							],
							[
								6891,
								6907
							],
							[
								7341,
								7365
							],
							[
								7760,
								7774
							],
							[
								8649,
								8662
							],
							[
								9186,
								9208
							],
							[
								9348,
								9366
							],
							[
								9673,
								9685
							],
							[
								9979,
								10004
							],
							[
								10052,
								10077
							],
							[
								10125,
								10137
							],
							[
								10171,
								10183
							],
							[
								10214,
								10226
							],
							[
								10262,
								10274
							],
							[
								10306,
								10324
							],
							[
								10357,
								10375
							],
							[
								10408,
								10426
							],
							[
								10459,
								10477
							],
							[
								10510,
								10522
							],
							[
								10554,
								10572
							],
							[
								10609,
								10627
							],
							[
								10664,
								10682
							],
							[
								10718,
								10736
							],
							[
								10780,
								10792
							],
							[
								10831,
								10843
							],
							[
								10899,
								10917
							],
							[
								11109,
								11121
							],
							[
								11155,
								11168
							],
							[
								12122,
								12142
							],
							[
								12354,
								12369
							],
							[
								12483,
								12497
							],
							[
								12535,
								12549
							],
							[
								12592,
								12606
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								449,
								461
							],
							[
								934,
								947
							],
							[
								1057,
								1071
							],
							[
								1188,
								1202
							],
							[
								1536,
								1549
							],
							[
								2130,
								2143
							],
							[
								2286,
								2299
							],
							[
								2632,
								2645
							],
							[
								2988,
								3003
							],
							[
								3301,
								3316
							],
							[
								3635,
								3648
							],
							[
								4612,
								4627
							],
							[
								4952,
								4964
							],
							[
								5726,
								5744
							],
							[
								6622,
								6639
							],
							[
								6906,
								6922
							],
							[
								7356,
								7380
							],
							[
								7775,
								7789
							],
							[
								8664,
								8677
							],
							[
								9201,
								9223
							],
							[
								9363,
								9381
							],
							[
								9688,
								9700
							],
							[
								9994,
								10019
							],
							[
								10067,
								10092
							],
							[
								10140,
								10152
							],
							[
								10186,
								10198
							],
							[
								10229,
								10241
							],
							[
								10277,
								10289
							],
							[
								10321,
								10339
							],
							[
								10372,
								10390
							],
							[
								10423,
								10441
							],
							[
								10474,
								10492
							],
							[
								10525,
								10537
							],
							[
								10569,
								10587
							],
							[
								10624,
								10642
							],
							[
								10679,
								10697
							],
							[
								10733,
								10751
							],
							[
								10795,
								10807
							],
							[
								10846,
								10858
							],
							[
								10914,
								10932
							],
							[
								11124,
								11136
							],
							[
								11170,
								11183
							],
							[
								12137,
								12157
							],
							[
								12369,
								12384
							],
							[
								12498,
								12512
							],
							[
								12550,
								12564
							],
							[
								12607,
								12621
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					131,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								449,
								461
							],
							[
								934,
								947
							],
							[
								1057,
								1071
							],
							[
								1188,
								1202
							],
							[
								1536,
								1549
							],
							[
								2130,
								2143
							],
							[
								2286,
								2299
							],
							[
								2632,
								2645
							],
							[
								2988,
								3003
							],
							[
								3301,
								3316
							],
							[
								3635,
								3648
							],
							[
								4612,
								4627
							],
							[
								4952,
								4964
							],
							[
								5726,
								5744
							],
							[
								6622,
								6639
							],
							[
								6906,
								6922
							],
							[
								7356,
								7380
							],
							[
								7775,
								7789
							],
							[
								8664,
								8677
							],
							[
								9201,
								9223
							],
							[
								9363,
								9381
							],
							[
								9688,
								9700
							],
							[
								9994,
								10019
							],
							[
								10067,
								10092
							],
							[
								10140,
								10152
							],
							[
								10186,
								10198
							],
							[
								10229,
								10241
							],
							[
								10277,
								10289
							],
							[
								10321,
								10339
							],
							[
								10372,
								10390
							],
							[
								10423,
								10441
							],
							[
								10474,
								10492
							],
							[
								10525,
								10537
							],
							[
								10569,
								10587
							],
							[
								10624,
								10642
							],
							[
								10679,
								10697
							],
							[
								10733,
								10751
							],
							[
								10795,
								10807
							],
							[
								10846,
								10858
							],
							[
								10914,
								10932
							],
							[
								11124,
								11136
							],
							[
								11170,
								11183
							],
							[
								12137,
								12157
							],
							[
								12369,
								12384
							],
							[
								12498,
								12512
							],
							[
								12550,
								12564
							],
							[
								12607,
								12621
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								449,
								461
							],
							[
								934,
								947
							],
							[
								1057,
								1071
							],
							[
								1188,
								1202
							],
							[
								1536,
								1549
							],
							[
								2146,
								2159
							],
							[
								2302,
								2315
							],
							[
								2648,
								2661
							],
							[
								3004,
								3019
							],
							[
								3317,
								3332
							],
							[
								3651,
								3664
							],
							[
								4628,
								4643
							],
							[
								4968,
								4980
							],
							[
								5742,
								5760
							],
							[
								6638,
								6655
							],
							[
								6922,
								6938
							],
							[
								7372,
								7396
							],
							[
								7791,
								7805
							],
							[
								8680,
								8693
							],
							[
								9217,
								9239
							],
							[
								9379,
								9397
							],
							[
								9704,
								9716
							],
							[
								10010,
								10035
							],
							[
								10083,
								10108
							],
							[
								10156,
								10168
							],
							[
								10202,
								10214
							],
							[
								10245,
								10257
							],
							[
								10293,
								10305
							],
							[
								10337,
								10355
							],
							[
								10388,
								10406
							],
							[
								10439,
								10457
							],
							[
								10490,
								10508
							],
							[
								10541,
								10553
							],
							[
								10585,
								10603
							],
							[
								10640,
								10658
							],
							[
								10695,
								10713
							],
							[
								10749,
								10767
							],
							[
								10811,
								10823
							],
							[
								10862,
								10874
							],
							[
								10930,
								10948
							],
							[
								11140,
								11152
							],
							[
								11186,
								11199
							],
							[
								12153,
								12173
							],
							[
								12385,
								12400
							],
							[
								12514,
								12528
							],
							[
								12566,
								12580
							],
							[
								12623,
								12637
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					133,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1230,
								1259
							],
							[
								1434,
								1463
							],
							[
								1616,
								1650
							],
							[
								1811,
								1831
							],
							[
								1877,
								1908
							],
							[
								2400,
								2418
							],
							[
								2582,
								2611
							],
							[
								3958,
								3989
							],
							[
								4085,
								4121
							],
							[
								4424,
								4438
							],
							[
								4476,
								4490
							],
							[
								4560,
								4574
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					134,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_point.cpp",
						"symkeys":
						[
							[
								449,
								461
							],
							[
								935,
								948
							],
							[
								1058,
								1072
							],
							[
								1189,
								1203
							],
							[
								1537,
								1550
							],
							[
								2149,
								2162
							],
							[
								2305,
								2318
							],
							[
								2651,
								2664
							],
							[
								3007,
								3022
							],
							[
								3320,
								3335
							],
							[
								3654,
								3667
							],
							[
								4631,
								4646
							],
							[
								4971,
								4983
							],
							[
								5745,
								5763
							],
							[
								6641,
								6658
							],
							[
								6925,
								6941
							],
							[
								7375,
								7399
							],
							[
								7794,
								7808
							],
							[
								8683,
								8696
							],
							[
								9220,
								9242
							],
							[
								9382,
								9400
							],
							[
								9706,
								9718
							],
							[
								10013,
								10038
							],
							[
								10086,
								10111
							],
							[
								10159,
								10171
							],
							[
								10205,
								10217
							],
							[
								10248,
								10260
							],
							[
								10296,
								10308
							],
							[
								10340,
								10358
							],
							[
								10391,
								10409
							],
							[
								10442,
								10460
							],
							[
								10493,
								10511
							],
							[
								10544,
								10556
							],
							[
								10588,
								10606
							],
							[
								10643,
								10661
							],
							[
								10698,
								10716
							],
							[
								10752,
								10770
							],
							[
								10814,
								10826
							],
							[
								10865,
								10877
							],
							[
								10933,
								10951
							],
							[
								11143,
								11155
							],
							[
								11189,
								11202
							],
							[
								12156,
								12176
							],
							[
								12388,
								12403
							],
							[
								12517,
								12531
							],
							[
								12569,
								12583
							],
							[
								12626,
								12640
							]
						],
						"symlist":
						[
							"js_point_new",
							"js_point_wrap",
							"js_point_clone",
							"js_point_cross",
							"js_point_ctor",
							"js_point_data",
							"js_point_ddot",
							"js_point_diff",
							"js_point_get_xy",
							"js_point_inside",
							"js_point_norm",
							"js_point_set_xy",
							"js_point_add",
							"js_point_to_string",
							"js_point_to_array",
							"js_point_inspect",
							"js_point_symbol_iterator",
							"js_point_round",
							"js_point_from",
							"js_array_to<double, 2>",
							"js_point_finalizer",
							"js_point_new",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CGETSET_ENUMERABLE_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_CFUNC_DEF",
							"js_point_init",
							"js_point_constructor",
							"js_point_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1230,
								1259
							],
							[
								1434,
								1463
							],
							[
								1616,
								1650
							],
							[
								1811,
								1831
							],
							[
								1877,
								1908
							],
							[
								2400,
								2418
							],
							[
								2582,
								2611
							],
							[
								3958,
								3989
							],
							[
								4085,
								4121
							],
							[
								4424,
								4438
							],
							[
								4476,
								4490
							],
							[
								4560,
								4574
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AwAAICBqc19wb2ludF9uZXcKICBqc19wb2ludF93cmFwCiAganNfcG9pbnRfY2xvbmUKICBqc19wb2ludF9jcm9zcwogIGpzX3BvaW50X2N0b3IKICBqc19wb2ludF9kYXRhCiAganNfcG9pbnRfZGRvdAogIGpzX3BvaW50X2RpZmYKICBqc19wb2ludF9nZXRfeHkKICBqc19wb2ludF9pbnNpZGUKICBqc19wb2ludF9ub3JtCiAganNfcG9pbnRfc2V0X3h5CiAganNfcG9pbnRfYWRkCiAganNfcG9pbnRfdG9fc3RyaW5nCiAganNfcG9pbnRfdG9fYXJyYXkKICBqc19wb2ludF9pbnNwZWN0CiAganNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yCiAganNfcG9pbnRfcm91bmQKICBqc19wb2ludF9mcm9tCiAganNfYXJyYXlfdG88ZG91YmxlLCAyPgogIGpzX3BvaW50X2ZpbmFsaXplcgogIGpzX3BvaW50X25ldwpKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGCkpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX01BR0lDX0RFRgpKU19DRlVOQ19NQUdJQ19ERUYKSlNfQ0ZVTkNfTUFHSUNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCkpTX0NGVU5DX0RFRgogIGpzX3BvaW50X2luaXQKICBqc19wb2ludF9jb25zdHJ1Y3RvcgogIGpzX3BvaW50X2V4cG9ydApKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					136,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1230,
								1259
							],
							[
								1569,
								1598
							],
							[
								1751,
								1785
							],
							[
								1946,
								1966
							],
							[
								2012,
								2043
							],
							[
								2535,
								2553
							],
							[
								2717,
								2746
							],
							[
								4093,
								4124
							],
							[
								4220,
								4256
							],
							[
								4559,
								4573
							],
							[
								4611,
								4625
							],
							[
								4695,
								4709
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMBAAAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAIMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					137,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1230,
								1259
							],
							[
								1547,
								1576
							],
							[
								1729,
								1763
							],
							[
								1924,
								1944
							],
							[
								1990,
								2021
							],
							[
								2513,
								2531
							],
							[
								2695,
								2724
							],
							[
								4071,
								4102
							],
							[
								4198,
								4234
							],
							[
								4537,
								4551
							],
							[
								4589,
								4603
							],
							[
								4673,
								4687
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					138,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1208,
								1237
							],
							[
								1523,
								1552
							],
							[
								1705,
								1739
							],
							[
								1900,
								1920
							],
							[
								1966,
								1997
							],
							[
								2489,
								2507
							],
							[
								2671,
								2700
							],
							[
								4047,
								4078
							],
							[
								4174,
								4210
							],
							[
								4513,
								4527
							],
							[
								4565,
								4579
							],
							[
								4649,
								4663
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMBAAAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAIMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					139,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1208,
								1237
							],
							[
								1660,
								1689
							],
							[
								1842,
								1876
							],
							[
								2037,
								2057
							],
							[
								2103,
								2134
							],
							[
								2626,
								2644
							],
							[
								2808,
								2837
							],
							[
								4184,
								4215
							],
							[
								4311,
								4347
							],
							[
								4650,
								4664
							],
							[
								4702,
								4716
							],
							[
								4786,
								4800
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					140,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								106,
								135
							],
							[
								333,
								361
							],
							[
								1208,
								1237
							],
							[
								2188,
								2217
							],
							[
								2370,
								2404
							],
							[
								2565,
								2585
							],
							[
								2631,
								2662
							],
							[
								3154,
								3172
							],
							[
								3336,
								3365
							],
							[
								4712,
								4743
							],
							[
								4839,
								4875
							],
							[
								5178,
								5192
							],
							[
								5230,
								5244
							],
							[
								5314,
								5328
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					141,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1273,
								1302
							],
							[
								2253,
								2282
							],
							[
								2435,
								2469
							],
							[
								2630,
								2650
							],
							[
								2696,
								2727
							],
							[
								3219,
								3237
							],
							[
								3401,
								3430
							],
							[
								4777,
								4808
							],
							[
								4904,
								4940
							],
							[
								5243,
								5257
							],
							[
								5295,
								5309
							],
							[
								5379,
								5393
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQEAAEpTTGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					142,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1249,
								1278
							],
							[
								2229,
								2258
							],
							[
								2411,
								2445
							],
							[
								2606,
								2626
							],
							[
								2672,
								2703
							],
							[
								3195,
								3213
							],
							[
								3377,
								3406
							],
							[
								4753,
								4784
							],
							[
								4880,
								4916
							],
							[
								5219,
								5233
							],
							[
								5271,
								5285
							],
							[
								5355,
								5369
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQEAAEpTTGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					143,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1249,
								1278
							],
							[
								2229,
								2258
							],
							[
								2409,
								2443
							],
							[
								2604,
								2624
							],
							[
								2670,
								2701
							],
							[
								3193,
								3211
							],
							[
								3375,
								3404
							],
							[
								4751,
								4782
							],
							[
								4878,
								4914
							],
							[
								5217,
								5231
							],
							[
								5269,
								5283
							],
							[
								5353,
								5367
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQEAAEpTTGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					144,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1249,
								1278
							],
							[
								2229,
								2258
							],
							[
								2409,
								2443
							],
							[
								2602,
								2622
							],
							[
								2668,
								2699
							],
							[
								3191,
								3209
							],
							[
								3373,
								3402
							],
							[
								4749,
								4780
							],
							[
								4876,
								4912
							],
							[
								5215,
								5229
							],
							[
								5267,
								5281
							],
							[
								5351,
								5365
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					145,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1249,
								1278
							],
							[
								2229,
								2258
							],
							[
								2409,
								2443
							],
							[
								2600,
								2620
							],
							[
								2666,
								2697
							],
							[
								3189,
								3207
							],
							[
								3371,
								3400
							],
							[
								4747,
								4778
							],
							[
								4874,
								4910
							],
							[
								5213,
								5227
							],
							[
								5265,
								5279
							],
							[
								5349,
								5363
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQEAAEpTTGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					146,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1240,
								1269
							],
							[
								2220,
								2249
							],
							[
								2400,
								2434
							],
							[
								2591,
								2611
							],
							[
								2657,
								2688
							],
							[
								3180,
								3198
							],
							[
								3362,
								3391
							],
							[
								4738,
								4769
							],
							[
								4865,
								4901
							],
							[
								5204,
								5218
							],
							[
								5256,
								5270
							],
							[
								5340,
								5354
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMBAAAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAIMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					147,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1278,
								1307
							],
							[
								2258,
								2287
							],
							[
								2438,
								2472
							],
							[
								2629,
								2649
							],
							[
								2695,
								2726
							],
							[
								3218,
								3236
							],
							[
								3400,
								3429
							],
							[
								4776,
								4807
							],
							[
								4903,
								4939
							],
							[
								5242,
								5256
							],
							[
								5294,
								5308
							],
							[
								5378,
								5392
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					148,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1278,
								1307
							],
							[
								2258,
								2287
							],
							[
								2438,
								2472
							],
							[
								2629,
								2649
							],
							[
								2695,
								2726
							],
							[
								3218,
								3236
							],
							[
								3400,
								3429
							],
							[
								4776,
								4807
							],
							[
								4903,
								4939
							],
							[
								5242,
								5256
							],
							[
								5294,
								5308
							],
							[
								5378,
								5392
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					149,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1286,
								1315
							],
							[
								2266,
								2295
							],
							[
								2446,
								2480
							],
							[
								2637,
								2657
							],
							[
								2703,
								2734
							],
							[
								3226,
								3244
							],
							[
								3408,
								3437
							],
							[
								4784,
								4815
							],
							[
								4911,
								4947
							],
							[
								5250,
								5264
							],
							[
								5302,
								5316
							],
							[
								5386,
								5400
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					150,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1286,
								1315
							],
							[
								2266,
								2295
							],
							[
								2446,
								2480
							],
							[
								2617,
								2637
							],
							[
								2683,
								2714
							],
							[
								3206,
								3224
							],
							[
								3388,
								3417
							],
							[
								4764,
								4795
							],
							[
								4891,
								4927
							],
							[
								5230,
								5244
							],
							[
								5282,
								5296
							],
							[
								5366,
								5380
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					151,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1286,
								1315
							],
							[
								2266,
								2295
							],
							[
								2446,
								2480
							],
							[
								2637,
								2657
							],
							[
								2703,
								2734
							],
							[
								3226,
								3244
							],
							[
								3408,
								3437
							],
							[
								4784,
								4815
							],
							[
								4911,
								4947
							],
							[
								5250,
								5264
							],
							[
								5302,
								5316
							],
							[
								5386,
								5400
							]
						],
						"symlist":
						[
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgwEAACAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								115,
								136
							],
							[
								162,
								191
							],
							[
								389,
								417
							],
							[
								1286,
								1315
							],
							[
								2266,
								2295
							],
							[
								2446,
								2480
							],
							[
								2637,
								2657
							],
							[
								2703,
								2734
							],
							[
								3226,
								3244
							],
							[
								3408,
								3437
							],
							[
								4784,
								4815
							],
							[
								4911,
								4947
							],
							[
								5250,
								5264
							],
							[
								5302,
								5316
							],
							[
								5386,
								5400
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACDAQAAICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					153,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1299,
								1328
							],
							[
								2300,
								2329
							],
							[
								2480,
								2514
							],
							[
								2671,
								2691
							],
							[
								2737,
								2768
							],
							[
								3260,
								3278
							],
							[
								3442,
								3471
							],
							[
								4818,
								4849
							],
							[
								4945,
								4981
							],
							[
								5284,
								5298
							],
							[
								5336,
								5350
							],
							[
								5420,
								5434
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					154,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2672,
								2692
							],
							[
								2738,
								2769
							],
							[
								3261,
								3279
							],
							[
								3443,
								3472
							],
							[
								4819,
								4850
							],
							[
								4946,
								4982
							],
							[
								5285,
								5299
							],
							[
								5337,
								5351
							],
							[
								5421,
								5435
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					155,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2672,
								2692
							],
							[
								2738,
								2769
							],
							[
								3261,
								3279
							],
							[
								3443,
								3472
							],
							[
								4819,
								4850
							],
							[
								4946,
								4982
							],
							[
								5285,
								5299
							],
							[
								5337,
								5351
							],
							[
								5421,
								5435
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					156,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2299,
								2328
							],
							[
								2479,
								2513
							],
							[
								2670,
								2690
							],
							[
								2736,
								2767
							],
							[
								3259,
								3277
							],
							[
								3441,
								3470
							],
							[
								4817,
								4848
							],
							[
								4944,
								4980
							],
							[
								5283,
								5297
							],
							[
								5335,
								5349
							],
							[
								5419,
								5433
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					157,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2299,
								2328
							],
							[
								2479,
								2513
							],
							[
								2712,
								2732
							],
							[
								2778,
								2809
							],
							[
								3301,
								3319
							],
							[
								3483,
								3512
							],
							[
								4859,
								4890
							],
							[
								4986,
								5022
							],
							[
								5325,
								5339
							],
							[
								5377,
								5391
							],
							[
								5461,
								5475
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAACZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					158,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2299,
								2328
							],
							[
								2479,
								2513
							],
							[
								2712,
								2732
							],
							[
								2781,
								2812
							],
							[
								3304,
								3322
							],
							[
								3486,
								3515
							],
							[
								4862,
								4893
							],
							[
								4989,
								5025
							],
							[
								5328,
								5342
							],
							[
								5380,
								5394
							],
							[
								5464,
								5478
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					159,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2299,
								2328
							],
							[
								2479,
								2513
							],
							[
								2712,
								2732
							],
							[
								2781,
								2812
							],
							[
								3304,
								3322
							],
							[
								3486,
								3515
							],
							[
								4862,
								4893
							],
							[
								4989,
								5025
							],
							[
								5328,
								5342
							],
							[
								5380,
								5394
							],
							[
								5464,
								5478
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					160,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1300,
								1329
							],
							[
								2299,
								2328
							],
							[
								2479,
								2513
							],
							[
								2712,
								2732
							],
							[
								2779,
								2810
							],
							[
								3300,
								3318
							],
							[
								3482,
								3511
							],
							[
								4858,
								4889
							],
							[
								4985,
								5021
							],
							[
								5324,
								5338
							],
							[
								5376,
								5390
							],
							[
								5460,
								5474
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					161,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2815
							],
							[
								3305,
								3317
							],
							[
								3392,
								3410
							],
							[
								3574,
								3603
							],
							[
								4950,
								4981
							],
							[
								5077,
								5113
							],
							[
								5416,
								5430
							],
							[
								5468,
								5482
							],
							[
								5552,
								5566
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAApgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					162,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2815
							],
							[
								3305,
								3317
							],
							[
								3388,
								3406
							],
							[
								3570,
								3599
							],
							[
								4946,
								4977
							],
							[
								5073,
								5109
							],
							[
								5412,
								5426
							],
							[
								5464,
								5478
							],
							[
								5548,
								5562
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACmAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAKYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAKYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAKYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					163,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								2915,
								2946
							],
							[
								3436,
								3448
							],
							[
								3519,
								3537
							],
							[
								3701,
								3730
							],
							[
								5077,
								5108
							],
							[
								5204,
								5240
							],
							[
								5543,
								5557
							],
							[
								5595,
								5609
							],
							[
								5679,
								5693
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACmAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAANIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA0gEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					164,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3603,
								3615
							],
							[
								3686,
								3704
							],
							[
								3868,
								3897
							],
							[
								5244,
								5275
							],
							[
								5371,
								5407
							],
							[
								5710,
								5724
							],
							[
								5762,
								5776
							],
							[
								5846,
								5860
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADSAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA0gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANIBAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb21wYXJlX3NlZ21lbnRzCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAADSAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					165,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3603,
								3615
							],
							[
								3686,
								3698
							],
							[
								3750,
								3768
							],
							[
								3932,
								3961
							],
							[
								5308,
								5339
							],
							[
								5435,
								5471
							],
							[
								5774,
								5788
							],
							[
								5826,
								5840
							],
							[
								5910,
								5924
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADSAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA3wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8BAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb21wYXJlX3NlZ21lbnRzCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAA3wEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					166,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3370,
								3401
							],
							[
								3891,
								3903
							],
							[
								3974,
								3986
							],
							[
								4038,
								4056
							],
							[
								4220,
								4249
							],
							[
								5596,
								5627
							],
							[
								5723,
								5759
							],
							[
								6062,
								6076
							],
							[
								6114,
								6128
							],
							[
								6198,
								6212
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADfAQAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAAAECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAABAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					167,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3370,
								3401
							],
							[
								3891,
								3903
							],
							[
								3974,
								3986
							],
							[
								4038,
								4050
							],
							[
								4108,
								4126
							],
							[
								4290,
								4319
							],
							[
								5666,
								5697
							],
							[
								5793,
								5829
							],
							[
								6132,
								6146
							],
							[
								6184,
								6198
							],
							[
								6268,
								6282
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABAgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAAOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					168,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3370,
								3401
							],
							[
								3891,
								3903
							],
							[
								3974,
								3986
							],
							[
								4038,
								4050
							],
							[
								4115,
								4133
							],
							[
								4297,
								4326
							],
							[
								5673,
								5704
							],
							[
								5800,
								5836
							],
							[
								6139,
								6153
							],
							[
								6191,
								6205
							],
							[
								6275,
								6289
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAOAgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAADgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4CAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb21wYXJlX3NlZ21lbnRzCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RldGVjdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAAOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					169,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								124,
								145
							],
							[
								171,
								200
							],
							[
								398,
								426
							],
							[
								1302,
								1331
							],
							[
								2301,
								2330
							],
							[
								2481,
								2515
							],
							[
								2717,
								2737
							],
							[
								2784,
								2825
							],
							[
								3082,
								3113
							],
							[
								3369,
								3407
							],
							[
								3664,
								3695
							],
							[
								4185,
								4197
							],
							[
								4268,
								4280
							],
							[
								4332,
								4344
							],
							[
								4409,
								4427
							],
							[
								4591,
								4620
							],
							[
								5967,
								5998
							],
							[
								6094,
								6130
							],
							[
								6433,
								6447
							],
							[
								6485,
								6499
							],
							[
								6569,
								6583
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_draw_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAOAgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcCAABKU0xpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcgp+TGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb21wYXJlX3NlZ21lbnRzCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RldGVjdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kcmF3X3NlZ21lbnRzCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZApKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19QUk9QX1NUUklOR19ERUYKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUKSlNfSU5JVF9NT0RVTEUAAAAAAAAAADcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3AgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZHJhd19zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					170,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								147,
								168
							],
							[
								194,
								223
							],
							[
								421,
								449
							],
							[
								1325,
								1354
							],
							[
								2324,
								2353
							],
							[
								2504,
								2538
							],
							[
								2740,
								2760
							],
							[
								2807,
								2848
							],
							[
								3105,
								3136
							],
							[
								3392,
								3430
							],
							[
								3687,
								3718
							],
							[
								4208,
								4220
							],
							[
								4291,
								4303
							],
							[
								4355,
								4367
							],
							[
								4432,
								4450
							],
							[
								4614,
								4643
							],
							[
								5990,
								6021
							],
							[
								6117,
								6153
							],
							[
								6456,
								6470
							],
							[
								6508,
								6522
							],
							[
								6592,
								6606
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_draw_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA3AgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZHJhd19zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwIAAEpTTGluZVNlZ21lbnREZXRlY3RvcgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyCn5MaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbXBhcmVfc2VnbWVudHMKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGV0ZWN0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RyYXdfc2VnbWVudHMKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfQ0ZVTkNfREVGCkpTX1BST1BfU1RSSU5HX0RFRgogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydAogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcgpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQpKU19JTklUX01PRFVMRQAAAAAAAAAANwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					171,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								147,
								168
							],
							[
								194,
								223
							],
							[
								421,
								449
							],
							[
								1325,
								1354
							],
							[
								2324,
								2353
							],
							[
								2504,
								2538
							],
							[
								2740,
								2760
							],
							[
								2807,
								2848
							],
							[
								3124,
								3155
							],
							[
								3411,
								3449
							],
							[
								3706,
								3737
							],
							[
								4227,
								4239
							],
							[
								4310,
								4322
							],
							[
								4374,
								4386
							],
							[
								4451,
								4469
							],
							[
								4633,
								4662
							],
							[
								6009,
								6040
							],
							[
								6136,
								6172
							],
							[
								6475,
								6489
							],
							[
								6527,
								6541
							],
							[
								6611,
								6625
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_draw_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZHJhd19zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
						"symkeys":
						[
							[
								147,
								168
							],
							[
								194,
								223
							],
							[
								421,
								449
							],
							[
								1325,
								1354
							],
							[
								2324,
								2353
							],
							[
								2504,
								2538
							],
							[
								2740,
								2760
							],
							[
								2807,
								2848
							],
							[
								3161,
								3192
							],
							[
								3448,
								3486
							],
							[
								3743,
								3774
							],
							[
								4264,
								4276
							],
							[
								4347,
								4359
							],
							[
								4411,
								4423
							],
							[
								4488,
								4506
							],
							[
								4670,
								4699
							],
							[
								6046,
								6077
							],
							[
								6173,
								6209
							],
							[
								6512,
								6526
							],
							[
								6564,
								6578
							],
							[
								6648,
								6662
							]
						],
						"symlist":
						[
							"JSLineSegmentDetector",
							"js_line_segment_detector_init",
							"js_line_segment_detector_new",
							"js_line_segment_detector_ctor",
							"js_line_segment_detector_data",
							"js_line_segment_detector_finalizer",
							"~LineSegmentDetector",
							"js_line_segment_detector_compare_segments",
							"js_line_segment_detector_detect",
							"js_line_segment_detector_draw_segments",
							"js_line_segment_detector_method",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_PROP_STRING_DEF",
							"js_line_segment_detector_init",
							"js_line_segment_detector_export",
							"js_line_segment_detector_constructor",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZHJhd19zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAA3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/jsbindings.hpp",
						"symkeys":
						[
							[
								31,
								45
							],
							[
								425,
								436
							],
							[
								454,
								463
							],
							[
								482,
								492
							],
							[
								513,
								524
							],
							[
								980,
								998
							],
							[
								1022,
								1037
							],
							[
								1066,
								1077
							],
							[
								1104,
								1116
							],
							[
								1143,
								1156
							],
							[
								1188,
								1206
							],
							[
								1479,
								1491
							],
							[
								1521,
								1531
							],
							[
								1557,
								1568
							],
							[
								1595,
								1606
							],
							[
								1894,
								1901
							],
							[
								1902,
								1912
							],
							[
								1932,
								1938
							],
							[
								1953,
								1960
							],
							[
								1961,
								1974
							],
							[
								2008,
								2014
							],
							[
								2015,
								2028
							],
							[
								2069,
								2094
							],
							[
								2858,
								2875
							],
							[
								2913,
								2925
							],
							[
								2970,
								2981
							],
							[
								3057,
								3071
							],
							[
								3127,
								3147
							],
							[
								3187,
								3206
							],
							[
								3246,
								3265
							],
							[
								3305,
								3323
							],
							[
								3363,
								3385
							],
							[
								3425,
								3444
							],
							[
								3484,
								3503
							],
							[
								3543,
								3560
							],
							[
								3600,
								3628
							],
							[
								3660,
								3681
							],
							[
								3726,
								3747
							],
							[
								4031,
								4042
							],
							[
								4436,
								4449
							],
							[
								4504,
								4518
							],
							[
								4576,
								4594
							],
							[
								4652,
								4667
							],
							[
								4731,
								4747
							],
							[
								4804,
								4818
							],
							[
								4876,
								4890
							],
							[
								4930,
								4950
							],
							[
								5381,
								5388
							],
							[
								5430,
								5454
							],
							[
								5524,
								5531
							],
							[
								5710,
								5718
							],
							[
								5824,
								5830
							],
							[
								5960,
								5974
							],
							[
								6137,
								6160
							],
							[
								6273,
								6297
							],
							[
								6412,
								6435
							],
							[
								6566,
								6579
							],
							[
								6668,
								6690
							],
							[
								6782,
								6805
							],
							[
								6900,
								6922
							],
							[
								6993,
								7006
							],
							[
								7074,
								7087
							],
							[
								7171,
								7184
							],
							[
								7504,
								7516
							],
							[
								8175,
								8181
							],
							[
								8272,
								8280
							],
							[
								8380,
								8400
							],
							[
								8608,
								8628
							],
							[
								8716,
								8726
							],
							[
								8967,
								8986
							],
							[
								9269,
								9288
							],
							[
								9786,
								9799
							],
							[
								10026,
								10040
							],
							[
								10123,
								10146
							],
							[
								10401,
								10414
							],
							[
								10639,
								10657
							],
							[
								10847,
								10868
							],
							[
								11148,
								11168
							],
							[
								11393,
								11407
							],
							[
								11599,
								11617
							],
							[
								12079,
								12093
							],
							[
								12473,
								12489
							],
							[
								12676,
								12692
							],
							[
								12728,
								12744
							],
							[
								12822,
								12839
							],
							[
								13133,
								13153
							],
							[
								13329,
								13345
							],
							[
								13907,
								13920
							],
							[
								14229,
								14252
							],
							[
								14699,
								14724
							],
							[
								15005,
								15021
							],
							[
								15952,
								15963
							],
							[
								16086,
								16101
							],
							[
								16302,
								16318
							],
							[
								16745,
								16746
							],
							[
								16875,
								16886
							],
							[
								16997,
								17008
							],
							[
								17122,
								17133
							],
							[
								17363,
								17364
							],
							[
								17497,
								17510
							],
							[
								17603,
								17616
							],
							[
								17699,
								17712
							],
							[
								17857,
								17870
							],
							[
								17990,
								18001
							],
							[
								18031,
								18040
							],
							[
								18146,
								18161
							],
							[
								18181,
								18186
							],
							[
								18232,
								18248
							],
							[
								18302,
								18313
							],
							[
								18349,
								18358
							],
							[
								18373,
								18385
							],
							[
								18414,
								18426
							],
							[
								18454,
								18458
							],
							[
								18507,
								18515
							],
							[
								18637,
								18652
							],
							[
								18721,
								18737
							],
							[
								18791,
								18802
							],
							[
								18856,
								18868
							],
							[
								18897,
								18909
							],
							[
								18960,
								18969
							],
							[
								19038,
								19046
							],
							[
								19150,
								19164
							],
							[
								19326,
								19340
							],
							[
								19425,
								19435
							],
							[
								19526,
								19540
							]
						],
						"symlist":
						[
							"JSBINDINGS_HPP",
							"JSRectDataD",
							"JSMatData",
							"JSUMatData",
							"JSSizeDataD",
							"JSVideoCaptureData",
							"JSTickMeterData",
							"JSCLAHEData",
							"JSInputArray",
							"JSOutputArray",
							"JSInputOutputArray",
							"JSLineTraits",
							"array_type",
							"vector_type",
							"scalar_type",
							"VISIBLE",
							"__declspec",
							"HIDDEN",
							"VISIBLE",
							"__attribute__",
							"HIDDEN",
							"__attribute__",
							"JS_CGETSET_ENUMERABLE_DEF",
							"js_draw_functions",
							"js_draw_init",
							"js_line_new",
							"js_init_module",
							"js_init_module_point",
							"js_init_module_size",
							"js_init_module_rect",
							"js_init_module_mat",
							"js_init_module_contour",
							"js_init_module_line",
							"js_init_module_draw",
							"js_init_module_cv",
							"js_init_module_video_capture",
							"js_video_capture_init",
							"js_video_capture_wrap",
							"js_mat_wrap",
							"js_global_get",
							"js_is_iterable",
							"js_iterator_method",
							"js_iterator_new",
							"js_iterator_next",
							"js_symbol_atom",
							"js_symbol_ctor",
							"js_symbol_get_static",
							"countof",
							"js_vector_vec4i_to_array",
							"js_ctor",
							"js_proto",
							"js_new",
							"js_number_read",
							"js_number_read<int32_t>",
							"js_number_read<uint32_t>",
							"js_number_read<int64_t>",
							"js_number_new",
							"js_number_new<int32_t>",
							"js_number_new<uint32_t>",
							"js_number_new<int64_t>",
							"js_color_read",
							"js_color_read",
							"js_color_read",
							"js_color_new",
							"js_ref",
							"round_to",
							"js_arraybuffer_range",
							"js_arraybuffer_range",
							"value_type",
							"js_arraybuffer_from",
							"js_arraybuffer_from",
							"js_global_get",
							"js_symbol_ctor",
							"js_symbol_invoke_static",
							"js_symbol_for",
							"js_symbol_for_atom",
							"js_set_inspect_method",
							"js_symbol_get_static",
							"js_symbol_atom",
							"js_iterator_method",
							"js_is_iterable",
							"js_is_array_like",
							"ArrayBufferProps",
							" ArrayBufferProps",
							"js_is_arraybuffer",
							"js_arraybuffer_props",
							"js_function_name",
							"js_class_name",
							"js_typedarray_prototype",
							"js_typedarray_constructor",
							"js_is_typedarray",
							"js_is_array",
							"js_iterator_new",
							"js_iterator_next",
							"T",
							"js_value_to",
							"js_value_to",
							"js_value_to",
							"T",
							"js_value_from",
							"js_value_from",
							"js_value_from",
							"js_value_from",
							"js_iterable",
							" to_vector",
							" js_iterator_new",
							" clear",
							" js_iterator_next",
							" js_value_to",
							" push_back",
							" JS_FreeValue",
							" JS_FreeValue",
							" size",
							" to_array",
							" js_iterator_new",
							" js_iterator_next",
							" js_value_to",
							" JS_FreeValue",
							" JS_FreeValue",
							" to_scalar",
							" to_array",
							"js_iterable_to",
							"js_iterable_to",
							"array_type",
							"js_iterable_to"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA3AgAASlNMaW5lU2VnbWVudERldGVjdG9yCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YQogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIKfkxpbmVTZWdtZW50RGV0ZWN0b3IKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29tcGFyZV9zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZHJhd19zZWdtZW50cwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QKSlNfQ0ZVTkNfREVGCkpTX0NGVU5DX0RFRgpKU19DRlVOQ19ERUYKSlNfUFJPUF9TVFJJTkdfREVGCiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFCkpTX0lOSVRfTU9EVUxFAAAAAAAAAAAgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "js_size.cpp",
			"settings":
			{
				"buffer_size": 14933,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					850,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAIUXAAAAAAAAWxgAAAAAAADZAAAACgogICAgICAgIGlmKChhcmcgPSBqc19zaXplX2RhdGEoY3R4LCBhcmd2WzBdKSkpIHsKICAgICAgICAgIGVxdWFscyA9IHMtPndpZHRoID09IGFyZy0+d2lkdGggJiYgcy0+aGVpZ2h0ID09IGFyZy0+aGVpZ2h0OwoKICAgICAgICB9IGVsc2UgaWYoanNfc2l6ZV9yZWFkKGN0eCwgYXJndlswXSwgJm90aGVyKSkgewogICAgICAgICAgZXF1YWxzID0gcy0+d2lkdGggPT0gb3RoZXIudw",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhRcAAAAAAABeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"revert",
					null,
					"",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhRcAAAAAAABbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"BAAAAOIWAAAAAAAA4xYAAAAAAAAAAAAA4xYAAAAAAADjFgAAAAAAAAwAAABKU19FWENFUFRJT07jFgAAAAAAAOQWAAAAAAAAAAAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hYAAAAAAADuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1022,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKUWAAAAAAAAphYAAAAAAAAAAAAAphYAAAAAAACnFgAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApRYAAAAAAAClFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"revert",
					null,
					"",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApxYAAAAAAACnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1048,
					1,
					"revert",
					null,
					"",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"paste",
					null,
					"AgAAABMVAAAAAAAAIxUAAAAAAAAAAAAAIxUAAAAAAAAjFQAAAAAAAAoAAABzaXplX3Byb3Rv",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAExUAAAAAAAAdFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": "Class"
					},
					"BgAAAAgVAAAAAAAACRUAAAAAAAAAAAAACRUAAAAAAAAJFQAAAAAAAAUAAABQcm90bwkVAAAAAAAAChUAAAAAAAAAAAAAChUAAAAAAAALFQAAAAAAAAAAAAALFQAAAAAAAAwVAAAAAAAAAAAAAAwVAAAAAAAADRUAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBUAAAAAAAANFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1095,
					1,
					"insert",
					{
						"characters": "_size"
					},
					"BgAAABUVAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAWFQAAAAAAAAUAAABfcmVjdBYVAAAAAAAAFxUAAAAAAAAAAAAAFxUAAAAAAAAYFQAAAAAAAAAAAAAYFQAAAAAAABkVAAAAAAAAAAAAABkVAAAAAAAAGhUAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRUAAAAAAAAaFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1216,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAMQOAAAAAAAAxg4AAAAAAAAAAAAArg4AAAAAAACwDgAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArg4AAAAAAADEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1219,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPAOAAAAAAAA8g4AAAAAAAAAAAAA2g4AAAAAAADcDgAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2g4AAAAAAADwDgAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUzAAAAAAAAXDMAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUzAAAAAAAAXDMAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAPIGAAAAAAAAVgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gYAAAAAAADyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABbBwAAAAAAAAAAAABXBwAAAAAAAFcHAAAAAAAABAAAACAgICBXBwAAAAAAAFkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgcAAAAAAABWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAPMGAAAAAAAA8wYAAAAAAABlAAAAcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICBnb3RvIGZhaWw7CiA",
					"AQAAAAAAAAABAAAA8wYAAAAAAABYBwAAAAAAAAAAAAAAACBA"
				],
				[
					36,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJQkAAAAAAAA0CQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "js_point.cpp",
			"settings":
			{
				"buffer_size": 12825,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"paste",
					null,
					"AQAAAGYGAAAAAAAAygYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgYAAAAAAABmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADPBgAAAAAAAAAAAADLBgAAAAAAAMsGAAAAAAAABAAAACAgICDLBgAAAAAAAM0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygYAAAAAAADKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					2,
					"left_delete",
					null,
					"AwAAAMEGAAAAAAAAwQYAAAAAAAAJAAAAb3RvIGZhaWw7wgYAAAAAAADCBgAAAAAAAAIAAAAgIMAGAAAAAAAAwAYAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAwQYAAAAAAADKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAMAGAAAAAAAAwQYAAAAAAAAAAAAAwQYAAAAAAADCBgAAAAAAAAAAAADCBgAAAAAAAMMGAAAAAAAAAAAAAMMGAAAAAAAAxAYAAAAAAAAAAAAAxAYAAAAAAADFBgAAAAAAAAAAAADFBgAAAAAAAMYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAYAAAAAAADABgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " JS_EX"
					},
					"BgAAAMYGAAAAAAAAxwYAAAAAAAAAAAAAxwYAAAAAAADIBgAAAAAAAAAAAADIBgAAAAAAAMkGAAAAAAAAAAAAAMkGAAAAAAAAygYAAAAAAAAAAAAAygYAAAAAAADLBgAAAAAAAAAAAADLBgAAAAAAAMwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgYAAAAAAADGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_completion",
					{
						"completion": "JS_EXCEPTION",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_EXCEPTION"
					},
					"AgAAAMcGAAAAAAAAxwYAAAAAAAAFAAAASlNfRVjHBgAAAAAAANMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAYAAAAAAADMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANMGAAAAAAAA1AYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wYAAAAAAADTBgAAAAAAAP///////+9/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "p√º"
					},
					"AwAAAAUIAAAAAAAABggAAAAAAAAAAAAABggAAAAAAAAGCAAAAAAAAAEAAAAgBggAAAAAAAAHCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQgAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAAYIAAAAAAAABggAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAABwgAAAAAAAAHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "roto,"
					},
					"BQAAAAYIAAAAAAAABwgAAAAAAAAAAAAABwgAAAAAAAAICAAAAAAAAAAAAAAICAAAAAAAAAkIAAAAAAAAAAAAAAkIAAAAAAAACggAAAAAAAAAAAAACggAAAAAAAALCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABggAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "JSV"
					},
					"AwAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAADeAQAAAAAAAN8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAN8BAAAAAAAA3wEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "alueConst"
					},
					"CQAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAADnAQAAAAAAAOgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " proto,"
					},
					"BwAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADqAQAAAAAAAAAAAADqAQAAAAAAAOsBAAAAAAAAAAAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AEAAAAAAADoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wEAAAAAAADvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "proto"
					},
					"BgAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACWAgAAAAAAAAsAAABwb2ludF9wcm90b5YCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"cut",
					null,
					"AQAAAK4BAAAAAAAArgEAAAAAAADYAQAAClZJU0lCTEUgSlNWYWx1ZQpqc19wb2ludF9uZXcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwcm90bywgZG91YmxlIHgsIGRvdWJsZSB5KSB7CiAgSlNWYWx1ZSByZXQ7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogczsKCiAgaWYoSlNfSXNVbmRlZmluZWQocG9pbnRfcHJvdG8pKQogICAganNfcG9pbnRfaW5pdChjdHgsIE5VTEwpOwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX3BvaW50X2NsYXNzX2lkKTsKCiAgcyA9IGpzX2FsbG9jYXRlPEpTUG9pbnREYXRhPGRvdWJsZT4+KGN0eCk7CgogIG5ldyhzKSBKU1BvaW50RGF0YTxkb3VibGU+KCk7CiAgcy0+eCA9IHggPD0gREJMX0VQU0lMT04gPyAwIDogeDsKICBzLT55ID0geSA8PSBEQkxfRVBTSUxPTiA/IDAgOiB5OwoKICBwb2ludHMucHVzaF9iYWNrKHMpOwoKICBKU19TZXRPcGFxdWUocmV0LCBzKTsKICByZXR1cm4gcmV0Owp9Cg",
					"AQAAAAAAAAABAAAArgEAAAAAAACGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					2,
					"paste",
					null,
					"AgAAAK4BAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAABeBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgEAAAAAAACuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALQDAAAAAAAAtQMAAAAAAAAAAAAAtQMAAAAAAAC1AwAAAAAAABMAAABKU1ZhbHVlQ29uc3QgcHJvdG8s",
					"AQAAAAAAAAABAAAAtAMAAAAAAADHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " rtu"
					},
					"BQAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADPAwAAAAAAAHsBAABKU1ZhbHVlIHJldDsKICBKU1BvaW50RGF0YTxkb3VibGU+KiBzOwoKICBpZihKU19Jc1VuZGVmaW5lZChwb2ludF9wcm90bykpCiAgICBqc19wb2ludF9pbml0KGN0eCwgTlVMTCk7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfcG9pbnRfY2xhc3NfaWQpOwoKICBzID0ganNfYWxsb2NhdGU8SlNQb2ludERhdGE8ZG91YmxlPj4oY3R4KTsKCiAgbmV3KHMpIEpTUG9pbnREYXRhPGRvdWJsZT4oKTsKICBzLT54ID0geCA8PSBEQkxfRVBTSUxPTiA/IDAgOiB4OwogIHMtPnkgPSB5IDw9IERCTF9FUFNJTE9OID8gMCA6IHk7CgogIHBvaW50cy5wdXNoX2JhY2socyk7CgogIEpTX1NldE9wYXF1ZShyZXQsIHMpOwogIHJldHVybiByZXQ7zwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAANEDAAAAAAAA0gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgMAAAAAAABJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					2,
					"left_delete",
					null,
					"AgAAANEDAAAAAAAA0QMAAAAAAAABAAAAddADAAAAAAAA0AMAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA0gMAAAAAAADSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "eturn"
					},
					"BQAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAADSAwAAAAAAANMDAAAAAAAAAAAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AMAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " js_point_new"
					},
					"DQAAANUDAAAAAAAA1gMAAAAAAAAAAAAA1gMAAAAAAADXAwAAAAAAAAAAAADXAwAAAAAAANgDAAAAAAAAAAAAANgDAAAAAAAA2QMAAAAAAAAAAAAA2QMAAAAAAADaAwAAAAAAAAAAAADaAwAAAAAAANsDAAAAAAAAAAAAANsDAAAAAAAA3AMAAAAAAAAAAAAA3AMAAAAAAADdAwAAAAAAAAAAAADdAwAAAAAAAN4DAAAAAAAAAAAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA3wMAAAAAAADgAwAAAAAAAAAAAADgAwAAAAAAAOEDAAAAAAAAAAAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOIDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAADlAwAAAAAAAOYDAAAAAAAAAAAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wMAAAAAAADjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " point_proto,"
					},
					"DQAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAADpAwAAAAAAAOoDAAAAAAAAAAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAO0DAAAAAAAA7gMAAAAAAAAAAAAA7gMAAAAAAADvAwAAAAAAAAAAAADvAwAAAAAAAPADAAAAAAAAAAAAAPADAAAAAAAA8QMAAAAAAAAAAAAA8QMAAAAAAADyAwAAAAAAAAAAAADyAwAAAAAAAPMDAAAAAAAAAAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wMAAAAAAADnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAPQDAAAAAAAA9QMAAAAAAAAAAAAA9QMAAAAAAAD2AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AMAAAAAAAD0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAPUDAAAAAAAA9QMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA9gMAAAAAAAD2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "x,"
					},
					"AgAAAPUDAAAAAAAA9gMAAAAAAAAAAAAA9gMAAAAAAAD3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QMAAAAAAAD1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " y"
					},
					"AgAAAPcDAAAAAAAA+AMAAAAAAAAAAAAA+AMAAAAAAAD5AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wMAAAAAAAD3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPoDAAAAAAAA+wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gMAAAAAAAD6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADrMQAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfcG9pbnQuaHBwIgojaW5jbHVkZSAianNfcmVjdC5ocHAiCiNpbmNsdWRlICJqc19tYXQuaHBwIgojaW5jbHVkZSAianNfYXJyYXkuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgojaW5jbHVkZSAianNfdHlwZWRfYXJyYXkuaHBwIgojaW5jbHVkZSAiY3V0aWxzLmgiCiNpbmNsdWRlICJxdWlja2pzLmgiCgojaW5jbHVkZSA8bGlzdD4KI2luY2x1ZGUgPG9wZW5jdjIvY29yZS9jb3JlLmhwcD4KI2luY2x1ZGUgPG9wZW5jdjIvaW1ncHJvYy9pbWdwcm9jLmhwcD4KCnN0ZDo6dmVjdG9yPEpTUG9pbnREYXRhPGRvdWJsZT4qPiBwb2ludHM7CgpleHRlcm4gIkMiIHsKCkpTVmFsdWUgcG9pbnRfcHJvdG8gPSBKU19VTkRFRklORUQ7CkpTQ2xhc3NJRCBqc19wb2ludF9jbGFzc19pZCA9IDA7CgpWSVNJQkxFIEpTVmFsdWUKanNfcG9pbnRfbmV3KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIGRvdWJsZSB4LCBkb3VibGUgeSkgewogIEpTVmFsdWUgcmV0OwogIEpTUG9pbnREYXRhPGRvdWJsZT4qIHM7CgogIGlmKEpTX0lzVW5kZWZpbmVkKHBvaW50X3Byb3RvKSkKICAgIGpzX3BvaW50X2luaXQoY3R4LCBOVUxMKTsKCiAgcmV0ID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBqc19wb2ludF9jbGFzc19pZCk7CgogIHMgPSBqc19hbGxvY2F0ZTxKU1BvaW50RGF0YTxkb3VibGU+PihjdHgpOwoKICBuZXcocykgSlNQb2ludERhdGE8ZG91YmxlPigpOwogIHMtPnggPSB4IDw9IERCTF9FUFNJTE9OID8gMCA6IHg7CiAgcy0+eSA9IHkgPD0gREJMX0VQU0lMT04gPyAwIDogeTsKCiAgcG9pbnRzLnB1c2hfYmFjayhzKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgcyk7CiAgcmV0dXJuIHJldDsKfQoKVklTSUJMRSBKU1ZhbHVlCmpzX3BvaW50X25ldyhKU0NvbnRleHQqIGN0eCwgICBkb3VibGUgeCwgZG91YmxlIHkpIHsKICAgcmV0dXJuIGpzX3BvaW50X25ldyhjdHgsIHBvaW50X3Byb3RvLCB4LCB5KTsKfQoKVklTSUJMRSBKU1ZhbHVlCmpzX3BvaW50X3dyYXAoSlNDb250ZXh0KiBjdHgsIGNvbnN0IEpTUG9pbnREYXRhPGRvdWJsZT4mIHBvaW50KSB7CiAgcmV0dXJuIGpzX3BvaW50X25ldyhjdHgsIHBvaW50LngsIHBvaW50LnkpOwp9CgpKU1ZhbHVlCmpzX3BvaW50X2Nsb25lKEpTQ29udGV4dCogY3R4LCBjb25zdCBKU1BvaW50RGF0YTxkb3VibGU+JiBwb2ludCkgewogIHJldHVybiBqc19wb2ludF9uZXcoY3R4LCBwb2ludC54LCBwb2ludC55KTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfY3Jvc3MoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIEpTUG9pbnREYXRhPGRvdWJsZT4qIHMgPSBqc19wb2ludF9kYXRhKGN0eCwgdGhpc192YWwpOwogIEpTUG9pbnREYXRhPGRvdWJsZT4qIG90aGVyID0ganNfcG9pbnRfZGF0YShjdHgsIGFyZ3ZbMF0pOwogIGRvdWJsZSByZXR2YWw7CiAgaWYoIXMgfHwgIW90aGVyKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICByZXR2YWwgPSBzLT5jcm9zcygqb3RoZXIpOwogIHJldHVybiBKU19OZXdGbG9hdDY0KGN0eCwgcmV0dmFsKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfY3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBkb3VibGUgeCwgeTsKICBKU1BvaW50RGF0YTxkb3VibGU+IHBvaW50OwogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYoYXJnYyA+IDApIHsKICAgIGlmKGpzX3BvaW50X3JlYWQoY3R4LCBhcmd2WzBdLCAmcG9pbnQpKSB7CiAgICAgIHggPSBwb2ludC54OwogICAgICB5ID0gcG9pbnQueTsKICAgIH0gZWxzZSB7CiAgICAgIGlmKEpTX1RvRmxvYXQ2NChjdHgsICZ4LCBhcmd2WzBdKSkKICAgICAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogICAgICBpZihhcmdjIDwgMiB8fCBKU19Ub0Zsb2F0NjQoY3R4LCAmeSwgYXJndlsxXSkpCiAgICAgICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICAgIH0KICB9CgogIHJldHVybiBqc19wb2ludF9uZXcoY3R4LCBwcm90bywgeCwgeSk7Cn0KClZJU0lCTEUgSlNQb2ludERhdGE8ZG91YmxlPioKanNfcG9pbnRfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbCkgewogIHJldHVybiBzdGF0aWNfY2FzdDxKU1BvaW50RGF0YTxkb3VibGU+Kj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfcG9pbnRfY2xhc3NfaWQpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfZGRvdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogb3RoZXIgPSBqc19wb2ludF9kYXRhKGN0eCwgYXJndlswXSk7CiAgZG91YmxlIHJldHZhbDsKICBpZighcyB8fCAhb3RoZXIpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIHJldHZhbCA9IHMtPmRkb3QoKm90aGVyKTsKICByZXR1cm4gSlNfTmV3RmxvYXQ2NChjdHgsIHJldHZhbCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3BvaW50X2RpZmYoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIEpTUG9pbnREYXRhPGRvdWJsZT4qIHMgPSBqc19wb2ludF9kYXRhKGN0eCwgdGhpc192YWwpOwogIEpTUG9pbnREYXRhPGRvdWJsZT4qIG90aGVyID0ganNfcG9pbnRfZGF0YShjdHgsIGFyZ3ZbMF0pOwoKICBKU1ZhbHVlIHJldDsKICBpZighcyB8fCAhb3RoZXIpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICByZXQgPSBqc19wb2ludF9uZXcoY3R4LCBzLT54IC0gb3RoZXItPngsIHMtPnkgLSBvdGhlci0+eSk7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfZ2V0X3h5KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIEpTUG9pbnREYXRhPGRvdWJsZT4qIHMgPSBqc19wb2ludF9kYXRhKGN0eCwgdGhpc192YWwpOwogIGlmKCFzKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKICBpZihtYWdpYyA9PSAwKQogICAgcmV0dXJuIEpTX05ld0Zsb2F0NjQoY3R4LCBzLT54KTsKICBlbHNlIGlmKG1hZ2ljID09IDEpCiAgICByZXR1cm4gSlNfTmV3RmxvYXQ2NChjdHgsIHMtPnkpOwogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3BvaW50X2luc2lkZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgSlNSZWN0RGF0YTxkb3VibGU+IHIgPSBqc19yZWN0X2dldChjdHgsIGFyZ3ZbMF0pOwogIGJvb2wgcmV0dmFsOwogIGlmKCFzIC8qfHwgIXIqLykKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHJldHZhbCA9IHMtPmluc2lkZShyKTsKCiAgcmV0dXJuIEpTX05ld0Jvb2woY3R4LCByZXR2YWwpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wb2ludF9ub3JtKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBKU1BvaW50RGF0YTxkb3VibGU+KiBzID0ganNfcG9pbnRfZGF0YShjdHgsIHRoaXNfdmFsKTsKICBpZighcykKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgcmV0dXJuIEpTX05ld0Zsb2F0NjQoY3R4LCBzcXJ0KChkb3VibGUpcy0+eCAqIHMtPnggKyAoZG91YmxlKXMtPnkgKiBzLT55KSk7Cn0KCi8qCnN0YXRpYyBKU1ZhbHVlCmpzX3BvaW50X211bChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgZG91YmxlIGZhY3RvciA9IDEuMDsKICBKU19Ub0Zsb2F0NjQoY3R4LCAmZmFjdG9yLCBhcmd2WzBdKTsKICBKU1ZhbHVlIHJldDsKICBpZighcyB8fCBhcmdjIDwgMSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHJldHVybiBqc19wb2ludF9uZXcoY3R4LCBzLT54ICogZmFjdG9yLCBzLT55ICogZmFjdG9yKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfcXVvdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgZG91YmxlIGRpdmlzb3IgPSAxLjA7CiAgSlNfVG9GbG9hdDY0KGN0eCwgJmRpdmlzb3IsIGFyZ3ZbMF0pOwogIEpTVmFsdWUgcmV0OwogIGlmKCFzIHx8IGFyZ2MgPCAxKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgcmV0ID0ganNfcG9pbnRfbmV3KGN0eCwgcy0+eCAvIGRpdmlzb3IsIHMtPnkgLyBkaXZpc29yKTsKICByZXR1cm4gcmV0Owp9Ki8KCnN0YXRpYyBKU1ZhbHVlCmpzX3BvaW50X3NldF94eShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBKU1ZhbHVlQ29uc3QgdmFsLCBpbnQgbWFnaWMpIHsKICBKU1BvaW50RGF0YTxkb3VibGU+KiBzID0ganNfcG9pbnRfZGF0YShjdHgsIHRoaXNfdmFsKTsKICBkb3VibGUgdjsKICBpZighcykKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgaWYoSlNfVG9GbG9hdDY0KGN0eCwgJnYsIHZhbCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogIGlmKG1hZ2ljID09IDApCiAgICBzLT54ID0gdjsKICBlbHNlCiAgICBzLT55ID0gdjsKICByZXR1cm4gSlNfVU5ERUZJTkVEOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wb2ludF9hZGQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiBvdGhlciwgcG9pbnQsICpzID0ganNfcG9pbnRfZGF0YShjdHgsIHRoaXNfdmFsKTsKICBkb3VibGUgeCwgeTsKCiAgaWYoanNfcG9pbnRfcmVhZChjdHgsIGFyZ3ZbMF0sICZvdGhlcikpIHsKICAgIHggPSBvdGhlci54OwogICAgeSA9IG90aGVyLnk7CiAgfSBlbHNlIHsKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZ4LCBhcmd2WzBdKTsKICAgIGlmKGFyZ2MgPCAyKQogICAgICB5ID0geDsKICAgIGVsc2UKICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJnksIGFyZ3ZbMV0pOwogIH0KCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIDA6CiAgICAgIHBvaW50LnggPSBzLT54ICsgeDsKICAgICAgcG9pbnQueSA9IHMtPnkgKyB5OwoKICAgICAgYnJlYWs7CiAgICBjYXNlIDE6CiAgICAgIHBvaW50LnggPSBzLT54IC0geDsKICAgICAgcG9pbnQueSA9IHMtPnkgLSB5OwogICAgICBicmVhazsKICAgIGNhc2UgMjoKICAgICAgcG9pbnQueCA9IHMtPnggKiB4OwogICAgICBwb2ludC55ID0gcy0+eSAqIHk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAzOgogICAgICBwb2ludC54ID0gcy0+eCAvIHg7CiAgICAgIHBvaW50LnkgPSBzLT55IC8geTsKICAgICAgYnJlYWs7CiAgfQogIHJldHVybiBqc19wb2ludF93cmFwKGN0eCwgcG9pbnQpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wb2ludF90b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgc3RkOjpvc3RyaW5nc3RyZWFtIG9zOwogIEpTVmFsdWUgeHYsIHl2OwogIGNvbnN0IGNoYXIqIGRlbGltID0gIiwiOwogIGRvdWJsZSB4ID0gLTEsIHkgPSAtMTsKICAvKiBpZighcykKICAgICByZXR1cm4gSlNfRVhDRVBUSU9OOyovCiAgaWYoYXJnYyA+IDApCiAgICBkZWxpbSA9IEpTX1RvQ1N0cmluZyhjdHgsIGFyZ3ZbMF0pOwoKICB4diA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgdGhpc192YWwsICJ4Iik7CiAgeXYgPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIHRoaXNfdmFsLCAieSIpOwoKICBpZihKU19Jc051bWJlcih4dikgJiYgSlNfSXNOdW1iZXIoeXYpKSB7CiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmeCwgeHYpOwogICAgSlNfVG9GbG9hdDY0KGN0eCwgJnksIHl2KTsKICB9IGVsc2UgaWYocykgewogICAgeCA9IHMtPng7CiAgICB5ID0gcy0+eTsKICB9CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSAwOiB7CiAgICAgIG9zIDw8IHggPDwgIiwiIDw8IHk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAxOiB7CiAgICAgIG9zIDw8ICJbIiA8PCB4IDw8ICIsIiA8PCB5IDw8ICJdIjsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIDI6IHsKCiAgICAgIG9zIDw8ICJ7eDoiIDw8IHggPDwgIix5OiIgPDwgeSA8PCAifSI7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gSlNfTmV3U3RyaW5nKGN0eCwgb3Muc3RyKCkuY19zdHIoKSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3BvaW50X3RvX2FycmF5KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBKU1BvaW50RGF0YTxkb3VibGU+KiBzID0ganNfcG9pbnRfZGF0YShjdHgsIHRoaXNfdmFsKTsKICBzdGQ6OmFycmF5PGRvdWJsZSwgMj4gYXJyOwoKICBhcnJbMF0gPSBzLT54OwogIGFyclsxXSA9IHMtPnk7CgogIHJldHVybiBqc19hcnJheV9mcm9tKGN0eCwgYXJyLmNiZWdpbigpLCBhcnIuY2VuZCgpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfaW5zcGVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgSlNWYWx1ZSBvYmogPSBKU19OZXdPYmplY3RDbGFzcyhjdHgsIGpzX3BvaW50X2NsYXNzX2lkKTsKCiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgIngiLCBKU19OZXdGbG9hdDY0KGN0eCwgcy0+eCksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgInkiLCBKU19OZXdGbG9hdDY0KGN0eCwgcy0+eSksIEpTX1BST1BfRU5VTUVSQUJMRSk7CgogIHJldHVybiBvYmo7Cn0KCnN0YXRpYyBKU0F0b20gaXRlcmF0b3Jfc3ltYm9sOwoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfc3ltYm9sX2l0ZXJhdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBKU1ZhbHVlIGFyciwgaXRlcjsKICBhcnIgPSBqc19wb2ludF90b19hcnJheShjdHgsIHRoaXNfdmFsLCBhcmdjLCBhcmd2KTsKCiAgaWYoaXRlcmF0b3Jfc3ltYm9sID09IDApCiAgICBpdGVyYXRvcl9zeW1ib2wgPSBqc19zeW1ib2xfYXRvbShjdHgsICJpdGVyYXRvciIpOwoKICBpZighSlNfSXNGdW5jdGlvbihjdHgsIChpdGVyID0gSlNfR2V0UHJvcGVydHkoY3R4LCBhcnIsIGl0ZXJhdG9yX3N5bWJvbCkpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgcmV0dXJuIEpTX0NhbGwoY3R4LCBpdGVyLCBhcnIsIDAsIGFyZ3YpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19wb2ludF9yb3VuZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMpIHsKICBKU1BvaW50RGF0YTxkb3VibGU+IHBvaW50LCAqcyA9IGpzX3BvaW50X2RhdGEoY3R4LCB0aGlzX3ZhbCk7CiAgZG91YmxlIHgsIHk7CiAgZG91YmxlIHByZWMgPSAxOwogIHBvaW50ID0gKnM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSAwOgogICAgICBpZihhcmdjID4gMCkKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmcHJlYywgYXJndlswXSk7CgogICAgICB4ID0gcm91bmQocy0+eCAvIHByZWMpOwogICAgICB5ID0gcm91bmQocy0+eSAvIHByZWMpOwogICAgICByZXQgPSBqc19wb2ludF9uZXcoY3R4LCB4ICogcHJlYywgeSAqIHByZWMpOwogICAgICBicmVhazsKICAgIGNhc2UgMToKICAgICAgaWYoYXJnYyA+IDApCiAgICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJnByZWMsIGFyZ3ZbMF0pOwoKICAgICAgeCA9IGZsb29yKHMtPnggLyBwcmVjKTsKICAgICAgeSA9IGZsb29yKHMtPnkgLyBwcmVjKTsKICAgICAgcmV0ID0ganNfcG9pbnRfbmV3KGN0eCwgeCAqIHByZWMsIHkgKiBwcmVjKTsKICAgICAgYnJlYWs7CiAgICBjYXNlIDI6CiAgICAgIGlmKGFyZ2MgPiAwKQogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZwcmVjLCBhcmd2WzBdKTsKCiAgICAgIHggPSBjZWlsKHMtPnggLyBwcmVjKTsKICAgICAgeSA9IGNlaWwocy0+eSAvIHByZWMpOwogICAgICByZXQgPSBqc19wb2ludF9uZXcoY3R4LCB4ICogcHJlYywgeSAqIHByZWMpOwogICAgICBicmVhazsKICB9CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcG9pbnRfZnJvbShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHBvaW50LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgc3RkOjphcnJheTxkb3VibGUsIDI+IGFycmF5OwogIEpTVmFsdWUgcmV0ID0gSlNfRVhDRVBUSU9OOwoKICBpZihKU19Jc1N0cmluZyhhcmd2WzBdKSkgewogICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICBjaGFyKiBlbmRwdHIgPSBudWxscHRyOwogICAgZm9yKHNpemVfdCBpID0gMDsgaSA8IDI7IGkrKykgewogICAgICB3aGlsZSghaXNkaWdpdCgqc3RyKSAmJiAqc3RyICE9ICctJyAmJiAqc3RyICE9ICcrJyAmJiAhKCpzdHIgPT0gJy4nICYmIGlzZGlnaXQoc3RyWzFdKSkpIHN0cisrOwogICAgICBpZigqc3RyID09ICdcMCcpCiAgICAgICAgYnJlYWs7CiAgICAgIGFycmF5W2ldID0gc3RydG9kKHN0ciwgJmVuZHB0cik7CiAgICAgIHN0ciA9IGVuZHB0cjsKICAgIH0KICB9IGVsc2UgaWYoanNfaXNfYXJyYXkoY3R4LCBhcmd2WzBdKSkgewogICAganNfYXJyYXlfdG88ZG91YmxlLCAyPihjdHgsIGFyZ3ZbMF0sIGFycmF5KTsKICB9CiAgaWYoYXJyYXlbMF0gPiAwICYmIGFycmF5WzFdID4gMCkKICAgIHJldCA9IGpzX3BvaW50X25ldyhjdHgsIGFycmF5WzBdLCBhcnJheVsxXSk7CiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIHZvaWQKanNfcG9pbnRfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiogcyA9IHN0YXRpY19jYXN0PEpTUG9pbnREYXRhPGRvdWJsZT4qPihKU19HZXRPcGFxdWUodmFsLCBqc19wb2ludF9jbGFzc19pZCkpOwoKICBpZihzICE9IG51bGxwdHIpIHsKICAgIGpzX2RlYWxsb2NhdGUocnQsIHMpOwogIH0KCiAgLy8gSlNfRnJlZVZhbHVlUlQocnQsIHZhbCk7CgogIC8qICBpZihwb2ludHMuc2l6ZSgpID09IDApCiAgICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBwb2ludF9wcm90byk7Ki8KfQoKSlNWYWx1ZSBwb2ludF9jbGFzcyA9IEpTX1VOREVGSU5FRDsKCkpTQ2xhc3NEZWYganNfcG9pbnRfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJQb2ludCIsCiAgICAuZmluYWxpemVyID0ganNfcG9pbnRfZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcG9pbnRfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYoIngiLCBqc19wb2ludF9nZXRfeHksIGpzX3BvaW50X3NldF94eSwgMCksCiAgICBKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGKCJ5IiwganNfcG9pbnRfZ2V0X3h5LCBqc19wb2ludF9zZXRfeHksIDEpLAogICAgSlNfQ0ZVTkNfREVGKCJjcm9zcyIsIDEsIGpzX3BvaW50X2Nyb3NzKSwKICAgIEpTX0NGVU5DX0RFRigiZG90IiwgMSwganNfcG9pbnRfZGRvdCksCiAgICBKU19DRlVOQ19ERUYoImluc2lkZSIsIDEsIGpzX3BvaW50X2luc2lkZSksCiAgICBKU19DRlVOQ19ERUYoImRpZmYiLCAxLCBqc19wb2ludF9kaWZmKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYWRkIiwgMSwganNfcG9pbnRfYWRkLCAwKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic3ViIiwgMSwganNfcG9pbnRfYWRkLCAxKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibXVsIiwgMSwganNfcG9pbnRfYWRkLCAyKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZGl2IiwgMSwganNfcG9pbnRfYWRkLCAzKSwKICAgIEpTX0NGVU5DX0RFRigibm9ybSIsIDAsIGpzX3BvaW50X25vcm0pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyb3VuZCIsIDAsIGpzX3BvaW50X3JvdW5kLCAwKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZmxvb3IiLCAwLCBqc19wb2ludF9yb3VuZCwgMSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImNlaWwiLCAwLCBqc19wb2ludF9yb3VuZCwgMiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRvU3RyaW5nIiwgMCwganNfcG9pbnRfdG9fc3RyaW5nLCAwKSwKICAgIEpTX0NGVU5DX0RFRigidG9BcnJheSIsIDAsIGpzX3BvaW50X3RvX2FycmF5KSwKICAgIEpTX0NGVU5DX0RFRigiW1N5bWJvbC5pdGVyYXRvcl0iLCAwLCBqc19wb2ludF9zeW1ib2xfaXRlcmF0b3IpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJQb2ludCIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKCiAgICAvLyBKU19DRlVOQ19NQUdJQ19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgMCwganNfcG9pbnRfdG9fc3RyaW5nLCAxKSwKfTsKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcG9pbnRfc3RhdGljX2Z1bmNzW10gPSB7SlNfQ0ZVTkNfREVGKCJmcm9tIiwgMSwganNfcG9pbnRfZnJvbSl9OwoKaW50CmpzX3BvaW50X2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX3BvaW50X2NsYXNzX2lkID09IDApIHsKICAgIC8qIGNyZWF0ZSB0aGUgUG9pbnQgY2xhc3MgKi8KICAgIEpTX05ld0NsYXNzSUQoJmpzX3BvaW50X2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfcG9pbnRfY2xhc3NfaWQsICZqc19wb2ludF9jbGFzcyk7CgogICAgcG9pbnRfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgcG9pbnRfcHJvdG8sIGpzX3BvaW50X3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3BvaW50X3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfcG9pbnRfY2xhc3NfaWQsIHBvaW50X3Byb3RvKTsKCiAgICBwb2ludF9jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19wb2ludF9jdG9yLCAiUG9pbnQiLCAwLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIHBvaW50X2NsYXNzLCBwb2ludF9wcm90byk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHBvaW50X2NsYXNzLCBqc19wb2ludF9zdGF0aWNfZnVuY3MsIGNvdW50b2YoanNfcG9pbnRfc3RhdGljX2Z1bmNzKSk7CgogICAganNfc2V0X2luc3BlY3RfbWV0aG9kKGN0eCwgcG9pbnRfcHJvdG8sIGpzX3BvaW50X2luc3BlY3QpOwogIH0KCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJQb2ludCIsIHBvaW50X2NsYXNzKTsKICAvKiBlbHNlCiAgICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCAqc3RhdGljX2Nhc3Q8SlNWYWx1ZSo+KG0pLCBuYW1lLCBwb2ludF9jbGFzcyk7Ki8KICByZXR1cm4gMDsKfQoKdm9pZApqc19wb2ludF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChwb2ludF9jbGFzcykpCiAgICBqc19wb2ludF9pbml0KGN0eCwgMCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcGFyZW50LCBuYW1lID8gbmFtZSA6ICJQb2ludCIsIHBvaW50X2NsYXNzKTsKfQoKZXh0ZXJuICJDIiBWSVNJQkxFIHZvaWQKanNfcG9pbnRfZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJQb2ludCIpOwp9CgojaWYgZGVmaW5lZChKU19QT0lOVF9NT0RVTEUpCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUgVklTSUJMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX3BvaW50CiNlbmRpZgoKSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19wb2ludF9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIGpzX3BvaW50X2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9Cn0AAAAAAAAAAOgxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wMAAAAAAAD7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"cut",
					null,
					"AQAAAIUDAAAAAAAAhQMAAAAAAAB1AAAACgpWSVNJQkxFIEpTVmFsdWUKanNfcG9pbnRfbmV3KEpTQ29udGV4dCogY3R4LCBkb3VibGUgeCwgZG91YmxlIHkpIHsKICByZXR1cm4ganNfcG9pbnRfbmV3KGN0eCwgcG9pbnRfcHJvdG8sIHgsIHkpOwp9",
					"AQAAAAAAAAABAAAAhQMAAAAAAAD6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AgAAALQlAAAAAAAAtSUAAAAAAAAAAAAAtSUAAAAAAAC2JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtCUAAAAAAAC0JQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\neter"
					},
					"BQAAALYlAAAAAAAAtyUAAAAAAAAAAAAAtyUAAAAAAAC4JQAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAALklAAAAAAAAuiUAAAAAAAAAAAAAuiUAAAAAAAC7JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtiUAAAAAAAC2JQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					3,
					"left_delete",
					null,
					"AwAAALolAAAAAAAAuiUAAAAAAAABAAAAcrklAAAAAAAAuSUAAAAAAAABAAAAZbglAAAAAAAAuCUAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAuyUAAAAAAAC7JQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "xtern"
					},
					"BQAAALglAAAAAAAAuSUAAAAAAAAAAAAAuSUAAAAAAAC6JQAAAAAAAAAAAAC6JQAAAAAAALslAAAAAAAAAAAAALslAAAAAAAAvCUAAAAAAAAAAAAAvCUAAAAAAAC9JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuCUAAAAAAAC4JQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0lAAAAAAAAviUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvSUAAAAAAAC9JQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAL4lAAAAAAAAwCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAviUAAAAAAAC+JQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAL8lAAAAAAAAwCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvyUAAAAAAAC/JQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMElAAAAAAAAwyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwSUAAAAAAADBJQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"right_delete",
					null,
					"AQAAAMIlAAAAAAAAwiUAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAwiUAAAAAAADCJQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALYlAAAAAAAAtyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtiUAAAAAAAC2JQAAAAAAAAAAAAAAAFZA"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAALclAAAAAAAALCYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtyUAAAAAAAC3JQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAK4BAAAAAAAArwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgEAAAAAAACuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAIcDAAAAAAAAiAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"left_delete",
					null,
					"AQAAAIcDAAAAAAAAhwMAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAiAMAAAAAAACIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n\nextern"
					},
					"CAAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACJAwAAAAAAAAAAAACJAwAAAAAAAIoDAAAAAAAAAAAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAACMAwAAAAAAAI0DAAAAAAAAAAAAAI0DAAAAAAAAjgMAAAAAAAAAAAAAjgMAAAAAAACPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " C\""
					},
					"AwAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAACRAwAAAAAAAJIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwMAAAAAAACPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					2,
					"left_delete",
					null,
					"AgAAAJEDAAAAAAAAkQMAAAAAAAABAAAAIpADAAAAAAAAkAMAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJADAAAAAAAAkgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAJEDAAAAAAAAkgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJMDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwMAAAAAAACTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"right_delete",
					null,
					"AQAAAJQDAAAAAAAAlAMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIMGAAAAAAAAhAYAAAAAAAAAAAAAhAYAAAAAAACFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "JSValue"
					},
					"BwAAAIMGAAAAAAAAhAYAAAAAAAAAAAAAhAYAAAAAAACFBgAAAAAAAAAAAACFBgAAAAAAAIYGAAAAAAAAAAAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAACIBgAAAAAAAIkGAAAAAAAAAAAAAIkGAAAAAAAAigYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " proto;"
					},
					"BwAAAIoGAAAAAAAAiwYAAAAAAAAAAAAAiwYAAAAAAACMBgAAAAAAAAAAAACMBgAAAAAAAI0GAAAAAAAAAAAAAI0GAAAAAAAAjgYAAAAAAAAAAAAAjgYAAAAAAACPBgAAAAAAAAAAAACPBgAAAAAAAJAGAAAAAAAAAAAAAJAGAAAAAAAAkQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigYAAAAAAACKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAkQYAAAAAAACRBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "js_point.hpp",
			"settings":
			{
				"buffer_size": 2598,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "JSValueConst,"
					},
					"DQAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAABlAQAAAAAAAGYBAAAAAAAAAAAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmCQAAI2lmbmRlZiBKU19QT0lOVF9IUFAKI2RlZmluZSBKU19QT0lOVF9IUFAKCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfcG9pbnRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiBKU1ZhbHVlIGpzX3BvaW50X2Nsb25lKEpTQ29udGV4dCogY3R4LCBjb25zdCBKU1BvaW50RGF0YTxkb3VibGU+JiBwb2ludCk7CmV4dGVybiAiQyIgewoKZXh0ZXJuIEpTVmFsdWUgcG9pbnRfcHJvdG8sIHBvaW50X2NsYXNzOwpleHRlcm4gSlNDbGFzc0lEIGpzX3BvaW50X2NsYXNzX2lkOwoKVklTSUJMRSBKU1ZhbHVlIGpzX3BvaW50X25ldyhKU0NvbnRleHQqLEpTVmFsdWVDb25zdCwgZG91YmxlIHgsIGRvdWJsZSB5KTsKVklTSUJMRSBKU1ZhbHVlIGpzX3BvaW50X3dyYXAoSlNDb250ZXh0KiwgY29uc3QgSlNQb2ludERhdGE8ZG91YmxlPiYpOwpWSVNJQkxFIEpTUG9pbnREYXRhPGRvdWJsZT4qIGpzX3BvaW50X2RhdGEoSlNDb250ZXh0KiwgSlNWYWx1ZUNvbnN0IHZhbCk7CgppbnQganNfcG9pbnRfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CnZvaWQganNfcG9pbnRfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgcGFyZW50LCBjb25zdCBjaGFyKiBuYW1lKTsKCkpTTW9kdWxlRGVmKiBqc19pbml0X3BvaW50X21vZHVsZShKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgaW50CmpzX3BvaW50X3JlYWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwb2ludCwgSlNQb2ludERhdGE8VD4qIG91dCkgewogIGludCByZXQgPSAxOwogIEpTVmFsdWUgeCA9IEpTX1VOREVGSU5FRCwgeSA9IEpTX1VOREVGSU5FRDsKICBpZihqc19pc19hcnJheV9saWtlKGN0eCwgcG9pbnQpKSB7CiAgICB4ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBwb2ludCwgMCk7CiAgICB5ID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBwb2ludCwgMSk7CiAgfSBlbHNlIGlmKEpTX0lzT2JqZWN0KHBvaW50KSkgewogICAgeCA9IEpTX0dldFByb3BlcnR5U3RyKGN0eCwgcG9pbnQsICJ4Iik7CiAgICB5ID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBwb2ludCwgInkiKTsKICB9CiAgaWYoSlNfSXNOdW1iZXIoeCkgJiYgSlNfSXNOdW1iZXIoeSkpIHsKICAgIHJldCAmPSBqc19udW1iZXJfcmVhZChjdHgsIHgsICZvdXQtPngpOwogICAgcmV0ICY9IGpzX251bWJlcl9yZWFkKGN0eCwgeSwgJm91dC0+eSk7CiAgfSBlbHNlIHsKICAgIHJldCA9IDA7CiAgfQogIGlmKCFKU19Jc1VuZGVmaW5lZCh4KSkKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHgpOwogIGlmKCFKU19Jc1VuZGVmaW5lZCh5KSkKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHkpOwogIHJldHVybiByZXQ7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgdm9pZApqc19wb2ludF93cml0ZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG91dCwgY29uc3QgSlNQb2ludERhdGE8VD4mIGluKSB7CiAgSlNWYWx1ZSB4ID0ganNfbnVtYmVyX25ldzxUPihjdHgsIGluLngpOwogIEpTVmFsdWUgeSA9IGpzX251bWJlcl9uZXc8VD4oY3R4LCBpbi55KTsKCiAgaWYoanNfaXNfYXJyYXlfbGlrZShjdHgsIG91dCkpIHsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgb3V0LCAwLCB4KTsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgb3V0LCAxLCB5KTsKCiAgfSBlbHNlIGlmKEpTX0lzT2JqZWN0KG91dCkpIHsKICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgb3V0LCAieCIsIHgpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBvdXQsICJ5IiwgeSk7CiAgfSBlbHNlIGlmKEpTX0lzRnVuY3Rpb24oY3R4LCBvdXQpKSB7CiAgICBKU1ZhbHVlQ29uc3QgYXJnc1syXTsKICAgIGFyZ3NbMF0gPSB4OwogICAgYXJnc1sxXSA9IHk7CiAgICBKU19DYWxsKGN0eCwgb3V0LCBKU19VTkRFRklORUQsIDIsIGFyZ3MpOwogIH0KICBKU19GcmVlVmFsdWUoY3R4LCB4KTsKICBKU19GcmVlVmFsdWUoY3R4LCB5KTsKfQoKc3RhdGljIGlubGluZSBKU1BvaW50RGF0YTxkb3VibGU+CmpzX3BvaW50X2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHBvaW50KSB7CiAgSlNQb2ludERhdGE8ZG91YmxlPiByOwogIGpzX3BvaW50X3JlYWQoY3R4LCBwb2ludCwgJnIpOwogIHJldHVybiByOwp9CgpzdGF0aWMgaW5saW5lIGJvb2wKanNfaXNfcG9pbnQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBwb2ludCkgewogIEpTUG9pbnREYXRhPGRvdWJsZT4gcjsKCiAgaWYoanNfcG9pbnRfZGF0YShjdHgsIHBvaW50KSkKICAgIHJldHVybiB0cnVlOwoKICBpZihqc19wb2ludF9yZWFkKGN0eCwgcG9pbnQsICZyKSkKICAgIHJldHVybiB0cnVlOwoKICByZXR1cm4gZmFsc2U7Cn0KCmV4dGVybiAiQyIgaW50IGpzX3BvaW50X2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCiNlbmRpZiAvKiBkZWZpbmVkKEpTX1BPSU5UX0hQUCkgKi8AAAAAAAAAAOcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQEAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"cut",
					null,
					"AQAAADgBAAAAAAAAOAEAAAAAAABMAAAAVklTSUJMRSBKU1ZhbHVlIGpzX3BvaW50X25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGRvdWJsZSB4LCBkb3VibGUgeSk7Cg",
					"AQAAAAAAAAABAAAAOAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"paste",
					null,
					"AgAAADgBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAADQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAEAAAAAAAA4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACtAQAAAAAAAA8AAAAgSlNWYWx1ZUNvbnN0LCA",
					"AQAAAAAAAAABAAAArAEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"cut",
					null,
					"AQAAADgBAAAAAAAAOAEAAAAAAABMAAAAVklTSUJMRSBKU1ZhbHVlIGpzX3BvaW50X25ldyhKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGRvdWJsZSB4LCBkb3VibGUgeSk7Cg",
					"AQAAAAAAAAABAAAAOAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAAM8CAAAAAAAAGwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "js_cv.cpp",
			"settings":
			{
				"buffer_size": 84703,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMPUAAAAAAAAydQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_utility.cpp",
			"settings":
			{
				"buffer_size": 5972,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "util.hpp",
			"settings":
			{
				"buffer_size": 7579,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAALEYAAAAAAAAshgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEYAAAAAAAAsRgAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIYAAAAAAAAsxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIYAAAAAAAAshgAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					2,
					"left_delete",
					null,
					"AgAAALIYAAAAAAAAshgAAAAAAAABAAAAILEYAAAAAAAAsRgAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMYAAAAAAAAsxgAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALEYAAAAAAAAshgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEYAAAAAAAAsRgAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAALIYAAAAAAAAsxgAAAAAAAAAAAAAsxgAAAAAAAC0GAAAAAAAAAAAAAC0GAAAAAAAALUYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIYAAAAAAAAshgAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALUYAAAAAAAAthgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUYAAAAAAAAtRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"paste",
					null,
					"AQAAAKwYAAAAAAAA3BkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwYAAAAAAAArBgAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"paste",
					null,
					"AgAAALIYAAAAAAAAwBgAAAAAAAAAAAAAwBgAAAAAAADAGAAAAAAAAAoAAABhcmd2X3Jhbmdl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwYAAAAAAAAshgAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKsYAAAAAAAArBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsYAAAAAAAAqxgAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAKwYAAAAAAAAvhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwYAAAAAAAArBgAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAL0YAAAAAAAAvRgAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4YAAAAAAAAvhgAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKsYAAAAAAAArBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsYAAAAAAAAqxgAAAAAAAAAAAAAAABhQA"
				],
				[
					44,
					1,
					"cut",
					null,
					"AQAAAPcYAAAAAAAA9xgAAAAAAAAKAAAAY29uc3QgY2hhcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcYAAAAAAAAARkAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAPcYAAAAAAAA+BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcYAAAAAAAA9xgAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AgAAADoZAAAAAAAAOxkAAAAAAAAAAAAAOxkAAAAAAAA7GQAAAAAAAAsAAABjb25zdCBjaGFyIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoZAAAAAAAARRkAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AgAAAGcZAAAAAAAAaBkAAAAAAAAAAAAAaBkAAAAAAABoGQAAAAAAAAoAAABjb25zdCBjaGFy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcZAAAAAAAAcRkAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AgAAALoZAAAAAAAAuxkAAAAAAAAAAAAAuxkAAAAAAAC7GQAAAAAAAAoAAABjb25zdCBjaGFy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoZAAAAAAAAxBkAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "view"
					},
					"BQAAAM4YAAAAAAAAzxgAAAAAAAAAAAAAzxgAAAAAAADPGAAAAAAAAAUAAAByYW5nZc8YAAAAAAAA0BgAAAAAAAAAAAAA0BgAAAAAAADRGAAAAAAAAAAAAADRGAAAAAAAANIYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4YAAAAAAAA0xgAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAM0ZAAAAAAAAzhkAAAAAAAAAAAAAzhkAAAAAAADPGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0ZAAAAAAAAzRkAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"paste",
					null,
					"AQAAAM8ZAAAAAAAAZxoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8ZAAAAAAAAzxkAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPAZAAAAAAAA8RkAAAAAAAAAAAAA8RkAAAAAAADxGQAAAAAAABkAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAZAAAAAAAACRoAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"paste",
					null,
					"AQAAAPEZAAAAAAAA/hkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEZAAAAAAAA8RkAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "<T>"
					},
					"AwAAAP4ZAAAAAAAA/xkAAAAAAAAAAAAA/xkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAEaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4ZAAAAAAAA/hkAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"paste",
					null,
					"AgAAAC8aAAAAAAAAPxoAAAAAAAAAAAAAPxoAAAAAAAA/GgAAAAAAAC0AAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+KGFyZ3YsIGFyZ3YgKyBhcmdjKTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8aAAAAAAAAXBoAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8aAAAAAAAAQRoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8aAAAAAAAAPxoAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "argc,"
					},
					"BQAAAEAaAAAAAAAAQRoAAAAAAAAAAAAAQRoAAAAAAABCGgAAAAAAAAAAAABCGgAAAAAAAEMaAAAAAAAAAAAAAEMaAAAAAAAARBoAAAAAAAAAAAAARBoAAAAAAABFGgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAaAAAAAAAAQBoAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUaAAAAAAAARhoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUaAAAAAAAARRoAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAAEUaAAAAAAAARRoAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYaAAAAAAAARhoAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "argv"
					},
					"BAAAAEUaAAAAAAAARhoAAAAAAAAAAAAARhoAAAAAAABHGgAAAAAAAAAAAABHGgAAAAAAAEgaAAAAAAAAAAAAAEgaAAAAAAAASRoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUaAAAAAAAARRoAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEoaAAAAAAAASxoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoaAAAAAAAAShoAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"paste",
					null,
					"AgAAAOEYAAAAAAAA7hgAAAAAAAAAAAAA7hgAAAAAAADuGAAAAAAAAAoAAABhcmd2X3Jhbmdl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEYAAAAAAAA6xgAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"paste",
					null,
					"AgAAAK0YAAAAAAAAtBkAAAAAAAAAAAAAtBkAAAAAAAC0GQAAAAAAACMBAAB0ZW1wbGF0ZTxjbGFzcyBUPgpjbGFzcyBhcmd1bWVudF92aWV3IHsKIHB1YmxpYzoKICAgYXJndW1lbnRfdmlldyhpbnQgYXJnYywgVCAqIGNvbnN0IGFyZ3ZbXSkKICAgICAgICA6IGFyZ2NfKGFyZ2MpLCBhcmd2Xyhhcmd2KQogICB7CiAgIH0KCiAgIFQqIGNvbnN0ICpiZWdpbigpIGNvbnN0IHsgcmV0dXJuIGFyZ3ZfOyB9CiAgIFQgKiBjb25zdCAqZW5kKCkgY29uc3QgeyByZXR1cm4gYXJndl8gKyBhcmdjXzsgfQoKIHByaXZhdGU6CiAgIGNvbnN0IGludCBhcmdjXzsKICAgVCAqIGNvbnN0ICphcmd2XzsKfTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAZAAAAAAAArRgAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKwYAAAAAAAArRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwYAAAAAAAArBgAAAAAAAAAAAAAAAAwQA"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAALYZAAAAAAAAthkAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcZAAAAAAAAtxkAAAAAAAAAAAAAAAAAAA"
				],
				[
					151,
					1,
					"left_delete",
					null,
					"AQAAAK0YAAAAAAAArRgAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4YAAAAAAAArhgAAAAAAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0YAAAAAAAArRgAAAAAAAAAAAAAAADwvw"
				],
				[
					254,
					1,
					"left_delete",
					null,
					"AQAAACkZAAAAAAAAKRkAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoZAAAAAAAAKhkAAAAAAAAAAAAAAADwvw"
				],
				[
					258,
					1,
					"left_delete",
					null,
					"AQAAAFgZAAAAAAAAWBkAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkZAAAAAAAAWRkAAAAAAAD////////vfw"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAKIZAAAAAAAAohkAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMZAAAAAAAAoxkAAAAAAAAAAAAAAADwvw"
				],
				[
					268,
					1,
					"left_delete",
					null,
					"AQAAAPgYAAAAAAAA+BgAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkYAAAAAAAA+RgAAAAAAAAAAAAAAADwvw"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAB4ZAAAAAAAAHxkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4ZAAAAAAAAHhkAAAAAAAAAAAAAAADwvw"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAAB4ZAAAAAAAAHhkAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8ZAAAAAAAAHxkAAAAAAAAAAAAAAADwvw"
				],
				[
					284,
					1,
					"cut",
					null,
					"AQAAACEZAAAAAAAAIRkAAAAAAAACAAAAKiA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEZAAAAAAAAIxkAAAAAAAAAAAAAAADwvw"
				],
				[
					285,
					1,
					"paste",
					null,
					"AQAAACEZAAAAAAAAIxkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEZAAAAAAAAIRkAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"paste",
					null,
					"AQAAAPgYAAAAAAAA+hgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					2,
					"left_delete",
					null,
					"AgAAAAYZAAAAAAAABhkAAAAAAAABAAAAXQUZAAAAAAAABRkAAAAAAAABAAAAWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcZAAAAAAAABxkAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"left_delete",
					null,
					"AQAAAPQZAAAAAAAA9BkAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUZAAAAAAAA9RkAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAPQZAAAAAAAA9RkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQZAAAAAAAA9BkAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"left_delete",
					null,
					"AQAAAPQZAAAAAAAA9BkAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUZAAAAAAAA9RkAAAAAAAAAAAAAAADwvw"
				],
				[
					303,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPkZAAAAAAAA+xkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkZAAAAAAAA+RkAAAAAAAAAAAAAAADwvw"
				],
				[
					308,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYaAAAAAAAAKBoAAAAAAAAAAAAAAADwvw"
				],
				[
					340,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClHQAAI2lmbmRlZiBVVElMX0hQUAojZGVmaW5lIFVUSUxfSFBQCgojaW5jbHVkZSA8c3RyaW5nPgojaW5jbHVkZSA8bnVtZXJpYz4KI2luY2x1ZGUgPGlvc3RyZWFtPgojaW5jbHVkZSA8aW9tYW5pcD4KI2luY2x1ZGUgPHN5cy9zdGF0Lmg+CgojaW5jbHVkZSA8b3BlbmN2Mi9jb3JlLmhwcD4KCiNpZiBkZWZpbmVkKF9XSU4zMikgfHwgZGVmaW5lZChfX01JTkdXMzJfXykKI2RlZmluZSBWSVNJQkxFIF9fZGVjbHNwZWMoZGxsZXhwb3J0KQojZGVmaW5lIEhJRERFTgojZWxzZQojZGVmaW5lIFZJU0lCTEUgX19hdHRyaWJ1dGVfXygodmlzaWJpbGl0eSgiZGVmYXVsdCIpKSkKI2RlZmluZSBISURERU4gX19hdHRyaWJ1dGVfXygodmlzaWJpbGl0eSgiaGlkZGVuIikpKQojZW5kaWYKCiNkZWZpbmUgQ09MT1JfQkxBQ0sgIlx4MWJbMzBtIgojZGVmaW5lIENPTE9SX1JFRCAiXHgxYlszMW0iCiNkZWZpbmUgQ09MT1JfR1JFRU4gIlx4MWJbMzJtIgojZGVmaW5lIENPTE9SX1lFTExPVyAiXHgxYlszM20iCiNkZWZpbmUgQ09MT1JfQkxVRSAiXHgxYlszNG0iCiNkZWZpbmUgQ09MT1JfTUFHRU5UQSAiXHgxYlszNW0iCiNkZWZpbmUgQ09MT1JfQ1lBTiAiXHgxYlszNm0iCiNkZWZpbmUgQ09MT1JfV0hJVEUgIlx4MWJbMzdtIgoKI2RlZmluZSBDT0xPUl9HUkFZICJceDFiWzE7MzBtIgojZGVmaW5lIENPTE9SX0xJR0hUUkVEICJceDFiWzE7MzFtIgojZGVmaW5lIENPTE9SX0xJR0hUR1JFRU4gIlx4MWJbMTszMm0iCiNkZWZpbmUgQ09MT1JfTElHSFRZRUxMT1cgIlx4MWJbMTszM20iCiNkZWZpbmUgQ09MT1JfTElHSFRCTFVFICJceDFiWzE7MzRtIgojZGVmaW5lIENPTE9SX0xJR0hUTUFHRU5UQSAiXHgxYlsxOzM1bSIKI2RlZmluZSBDT0xPUl9MSUdIVENZQU4gIlx4MWJbMTszNm0iCiNkZWZpbmUgQ09MT1JfTElHSFRXSElURSAiXHgxYlsxOzM3bSIKCiNkZWZpbmUgQ09MT1JfTk9ORSAiXHgxYlttIgoKYm9vbCBzdHJfZW5kKGNvbnN0IGNoYXIqIHN0ciwgY29uc3QgY2hhciogc3VmZml4KTsKYm9vbCBzdHJfZW5kKGNvbnN0IHN0ZDo6c3RyaW5nJiBzdHIsIGNvbnN0IHN0ZDo6c3RyaW5nJiBzdWZmaXgpOwoKc3RkOjpzdHJpbmcgdG9fc3RyaW5nKGNvbnN0IGN2OjpTY2FsYXImIHNjYWxhcik7CgpzdGQ6OnN0cmluZyBtYWtlX2ZpbGVuYW1lKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lLCBpbnQgY291bnQsIGNvbnN0IHN0ZDo6c3RyaW5nJiBleHQsIGNvbnN0IHN0ZDo6c3RyaW5nJiBkaXIgPSAidG1wIik7CgppbmxpbmUgaW50MzJfdApnZXRfbXRpbWUoY29uc3QgY2hhciogZmlsZW5hbWUpIHsKI2lmIF9fU1REQ19WRVJTSU9OX18gPj0gMjAxNzEwTAogIHJldHVybiBzdGQ6OmZpbGVzeXN0ZW06Omxhc3Rfd3JpdGVfdGltZShmaWxlbmFtZSk7CiNlbHNlCiAgc3RydWN0IHN0YXQgc3Q7CiAgaWYoc3RhdChmaWxlbmFtZSwgJnN0KSAhPSAtMSkgewogICAgdWludDMyX3QgcmV0ID0gc3Quc3RfbXRpbWU7CiAgICByZXR1cm4gcmV0OwogIH0KI2VuZGlmCiAgcmV0dXJuIC0xOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBDaGFyLCBjbGFzcyBWYWx1ZT4KaW5saW5lIHN0ZDo6b3N0cmVhbSYKb3BlcmF0b3I8PChzdGQ6Om9zdHJlYW0mIG9zLCBjb25zdCBzdGQ6OnZlY3RvcjxWYWx1ZT4mIGMpIHsKICB0eXBlZGVmIHR5cGVuYW1lIHN0ZDo6dmVjdG9yPFZhbHVlPjo6Y29uc3RfaXRlcmF0b3IgaXRlcmF0b3JfdHlwZTsKICBpdGVyYXRvcl90eXBlIGVuZCA9IGMuZW5kKCk7CiAgZm9yKGl0ZXJhdG9yX3R5cGUgaXQgPSBjLmJlZ2luKCk7IGl0ICE9IGVuZDsgKytpdCkgewogICAgb3MgPDwgJyAnOwogICAgb3MgPDwgdG9fc3RyaW5nKCppdCk7CiAgfQogIHJldHVybiBvczsKfQoKaW5saW5lIHN0ZDo6c3RyaW5nCnRvX3N0cmluZyhjb25zdCBjdjo6U2NhbGFyJiBzY2FsYXIpIHsKICBjb25zdCBpbnQgcGFkID0gMzsKICBzdGQ6Om9zdHJpbmdzdHJlYW0gb3NzOwogIG9zcyA8PCAnWycgPDwgc3RkOjpzZXRmaWxsKCcgJykgPDwgc3RkOjpzZXR3KHBhZCkgPDwgc2NhbGFyWzBdIDw8ICcsJyA8PCBzdGQ6OnNldGZpbGwoJyAnKSA8PCBzdGQ6OnNldHcocGFkKSA8PCBzY2FsYXJbMV0KICAgICAgPDwgJywnIDw8IHN0ZDo6c2V0ZmlsbCgnICcpIDw8IHN0ZDo6c2V0dyhwYWQpIDw8IHNjYWxhclsyXSA8PCAnLCcgPDwgc3RkOjpzZXRmaWxsKCcgJykgPDwgc3RkOjpzZXR3KHBhZCkgPDwgc2NhbGFyWzNdCiAgICAgIDw8ICddJzsKICByZXR1cm4gb3NzLnN0cigpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBJdGVyYXRvcj4Kc3RhdGljIGlubGluZSBzdGQ6OnN0cmluZwpqb2luKGNvbnN0IEl0ZXJhdG9yJiBzdGFydCwgY29uc3QgSXRlcmF0b3ImIGVuZCwgY29uc3Qgc3RkOjpzdHJpbmcmIGRlbGltKSB7CiAgcmV0dXJuIHN0ZDo6YWNjdW11bGF0ZShzdGFydCwgZW5kLCBzdGQ6OnN0cmluZygpLCBbJmRlbGltXShjb25zdCBzdGQ6OnN0cmluZyYgYSwgY29uc3Qgc3RkOjpzdHJpbmcmIGIpIC0+IHN0ZDo6c3RyaW5nIHsKICAgIHJldHVybiBhICsgKGEubGVuZ3RoKCkgPiAwID8gZGVsaW0gOiAiIikgKyBiOwogIH0pOwp9CgpleHRlcm4gIkMiIHZvaWQqIGdldF9oZWFwX2Jhc2UoKTsKCnR5cGVkZWYgc3RydWN0IEpTTWF0RGltZW5zaW9ucyB7CiAgdWludDMyX3Qgcm93cywgY29sczsKCiAgb3BlcmF0b3IgY3Y6OlNpemUoKSBjb25zdCB7IHJldHVybiBjdjo6U2l6ZShjb2xzLCByb3dzKTsgfQp9IEpTTWF0RGltZW5zaW9uczsKCnN0YXRpYyBpbmxpbmUgaW50Cm1hdHR5cGVfZGVwdGgoaW50IHR5cGUpIHsKICByZXR1cm4gdHlwZSAmIDB4NzsKfQpzdGF0aWMgaW5saW5lIGludAptYXR0eXBlX2NoYW5uZWxzKGludCB0eXBlKSB7CiAgcmV0dXJuICh0eXBlID4+IDMpICsgMTsKfQpzdGF0aWMgaW5saW5lIGJvb2wKbWF0dHlwZV9mbG9hdGluZyhpbnQgdHlwZSkgewogIHN3aXRjaChtYXR0eXBlX2RlcHRoKHR5cGUpKSB7CiAgICBjYXNlIENWXzMyRjoKICAgIGNhc2UgQ1ZfNjRGOiByZXR1cm4gdHJ1ZTsKICAgIGRlZmF1bHQ6IHJldHVybiBmYWxzZTsKICB9Cn0Kc3RhdGljIGlubGluZSBib29sCm1hdHR5cGVfc2lnbmVkKGludCB0eXBlKSB7CiAgc3dpdGNoKG1hdHR5cGVfZGVwdGgodHlwZSkpIHsKICAgIGNhc2UgQ1ZfOFM6CiAgICBjYXNlIENWXzE2UzoKICAgIGNhc2UgQ1ZfMzJTOiByZXR1cm4gdHJ1ZTsKICAgIGRlZmF1bHQ6IHJldHVybiBmYWxzZTsKICB9Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgSlNNYXREaW1lbnNpb25zCm1hdF9kaW1lbnNpb25zKGNvbnN0IFQmIG1hdCkgewogIEpTTWF0RGltZW5zaW9ucyByZXQ7CiAgcmV0LnJvd3MgPSBtYXQucm93czsKICByZXQuY29scyA9IG1hdC5jb2xzOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKbWF0X3B0cihjdjo6TWF0JiBtYXQpIHsKICByZXR1cm4gcmVpbnRlcnByZXRfY2FzdDx1aW50OF90Kj4obWF0LnB0cigpKTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgptYXRfcHRyKGN2OjpVTWF0JiBtYXQpIHsKICBjdjo6VU1hdERhdGEqIHU7CgogIGlmKCh1ID0gbWF0LnUpKQogICAgcmV0dXJuIHJlaW50ZXJwcmV0X2Nhc3Q8dWludDhfdCo+KHUtPmRhdGEpOwoKICByZXR1cm4gbnVsbHB0cjsKfQoKc3RhdGljIGlubGluZSBzaXplX3QKbWF0X29mZnNldChjb25zdCBjdjo6TWF0JiBtYXQsIHVpbnQzMl90IHJvdywgdWludDMyX3QgY29sKSB7CiAgY29uc3QgdWNoYXIgKmJhc2UsICpwdHI7CgogIGJhc2UgPSBtYXQucHRyPHVjaGFyPigpOwogIHB0ciA9IG1hdC5wdHI8dWNoYXI+KHJvdywgY29sKTsKCiAgcmV0dXJuIHB0ciAtIGJhc2U7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90Cm1hdF9vZmZzZXQoY29uc3QgY3Y6OlVNYXQmIG1hdCwgdWludDMyX3Qgcm93LCB1aW50MzJfdCBjb2wpIHsKICByZXR1cm4gKHNpemVfdChtYXQuY29scykgKiByb3cgKyBjb2wpICogbWF0LmVsZW1TaXplKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCYKbWF0X2F0KGN2OjpNYXQmIG1hdCwgdWludDMyX3Qgcm93LCB1aW50MzJfdCBjb2wpIHsKICByZXR1cm4gKm1hdC5wdHI8VD4ocm93LCBjb2wpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQmCm1hdF9hdChjdjo6VU1hdCYgbWF0LCB1aW50MzJfdCByb3csIHVpbnQzMl90IGNvbCkgewogIHNpemVfdCBvZmZzID0gbWF0X29mZnNldChtYXQsIHJvdywgY29sKTsKICByZXR1cm4gKnJlaW50ZXJwcmV0X2Nhc3Q8VCo+KG1hdF9wdHIobWF0KSArIG9mZnMpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIHNpemVfdAptYXRfYnl0ZXNpemUoY29uc3QgVCYgbWF0KSB7CiAgcmV0dXJuIG1hdC5lbGVtU2l6ZSgpICogbWF0LnRvdGFsKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgaW50Cm1hdF9kZXB0aChjb25zdCBUJiBtYXQpIHsKICByZXR1cm4gbWF0dHlwZV9kZXB0aChtYXQudHlwZSgpKTsKfQoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBpbnQKbWF0X2NoYW5uZWxzKGNvbnN0IFQmIG1hdCkgewogIHJldHVybiBtYXR0eXBlX2NoYW5uZWxzKG1hdC50eXBlKCkpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIGJvb2wKbWF0X3NpZ25lZChjb25zdCBUJiBtYXQpIHsKICByZXR1cm4gbWF0dHlwZV9zaWduZWQobWF0LnR5cGUoKSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgYm9vbAptYXRfZmxvYXRpbmcoY29uc3QgVCYgbWF0KSB7CiAgcmV0dXJuIG1hdHR5cGVfZmxvYXRpbmcobWF0LnR5cGUoKSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQsIGludCBOPgpzdGF0aWMgaW5saW5lIFQqCmJlZ2luKGN2OjpWZWM8VCwgTj4mIHYpIHsKICByZXR1cm4gJnZbMF07Cn0KdGVtcGxhdGU8Y2xhc3MgVCwgaW50IE4+CnN0YXRpYyBpbmxpbmUgVCoKZW5kKGN2OjpWZWM8VCwgTj4mIHYpIHsKICByZXR1cm4gJnZbTl07Cn0KCnRlbXBsYXRlPGNsYXNzIFQsIGludCBOPgpzdGF0aWMgaW5saW5lIFQgY29uc3QqCmJlZ2luKGN2OjpWZWM8VCwgTj4gY29uc3QmIHYpIHsKICByZXR1cm4gJnZbMF07Cn0KdGVtcGxhdGU8Y2xhc3MgVCwgaW50IE4+CnN0YXRpYyBpbmxpbmUgVCBjb25zdCoKZW5kKGN2OjpWZWM8VCwgTj4gY29uc3QmIHYpIHsKICByZXR1cm4gJnZbTl07Cn0KLyoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlIGNvbnN0KgpiZWdpbihjb25zdCBUJiBvYmopIHsKICByZXR1cm4gb2JqLmJlZ2luKCk7Cn0KdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlKgpiZWdpbihUJiBvYmopIHsKICByZXR1cm4gb2JqLmJlZ2luKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgdHlwZW5hbWUgVDo6dmFsdWVfdHlwZSBjb25zdCoKZW5kKGNvbnN0IFQmIG9iaikgewogIHJldHVybiBvYmouZW5kKCk7Cn0KdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlKgplbmQoVCYgb2JqKSB7CiAgcmV0dXJuIG9iai5lbmQoKTsKfQoqLwp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQqCmJlZ2luKHN0ZDo6dmVjdG9yPFQ+JiB2KSB7CiAgcmV0dXJuICZ2WzBdOwp9CnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCoKZW5kKHN0ZDo6dmVjdG9yPFQ+JiB2KSB7CiAgcmV0dXJuICZ2W3Yuc2l6ZSgpXTsKfQp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQgY29uc3QqCmJlZ2luKHN0ZDo6dmVjdG9yPFQ+IGNvbnN0JiB2KSB7CiAgcmV0dXJuICZ2WzBdOwp9CnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCBjb25zdCoKZW5kKHN0ZDo6dmVjdG9yPFQ+IGNvbnN0JiB2KSB7CiAgcmV0dXJuICZ2W3Yuc2l6ZSgpXTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpiZWdpbihjdjo6TWF0JiBtYXQpIHsKICByZXR1cm4gbWF0LnB0cjx1aW50OF90PigpOwp9CnN0YXRpYyBpbmxpbmUgdWludDhfdCoKZW5kKGN2OjpNYXQmIG1hdCkgewogIHJldHVybiBtYXQucHRyPHVpbnQ4X3Q+KCkgKyAobWF0LnRvdGFsKCkgKiBtYXQuZWxlbVNpemUoKSk7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCBjb25zdCoKYmVnaW4oY3Y6Ok1hdCBjb25zdCYgbWF0KSB7CiAgcmV0dXJuIG1hdC5wdHI8dWludDhfdCBjb25zdD4oKTsKfQpzdGF0aWMgaW5saW5lIHVpbnQ4X3QgY29uc3QqCmVuZChjdjo6TWF0IGNvbnN0JiBtYXQpIHsKICByZXR1cm4gbWF0LnB0cjx1aW50OF90IGNvbnN0PigpICsgKG1hdC50b3RhbCgpICogbWF0LmVsZW1TaXplKCkpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPiBjbGFzcyBhcmd1bWVudF92aWV3IHsKcHVibGljOgogIGFyZ3VtZW50X3ZpZXcoaW50IGFyZ2MsIFQqICBjb25zdCBhcmd2KSA6IGMoYXJnYyksIHYoYXJndikge30KCiAgVCogY29uc3QKICBiZWdpbigpIGNvbnN0IHsKICAgIHJldHVybiB2OwogIH0KICBUKiBjb25zdAogIGVuZCgpIGNvbnN0IHsKICAgIHJldHVybiB2ICsgYzsKICB9Cgpwcml2YXRlOgogIGNvbnN0IGludCBjOwogIFQqIGNvbnN0IHY7Cn07Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIGFyZ3VtZW50X3ZpZXc8VD4KYXJndW1lbnRfcmFuZ2UoaW50IGFyZ2MsIFQgYXJndltdKSB7CiAgcmV0dXJuIGFyZ3VtZW50X3ZpZXc8VD4oYXJnYywgYXJndik7Cn0KCiNpZiAwICYmIENYWF9TVEFOREFSRCA+PSAyMAoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VD4Kc2l6ZWRfcmFuZ2UoVCBwdHIsIHNpemVfdCBsZW4pIHsKICByZXR1cm4gc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+KHB0ciwgcHRyICsgbGVuKTsKfQoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+CmFyZ3VtZW50X3JhbmdlKGludCBhcmdjLCBUKiBhcmd2KSB7CiAgcmV0dXJuIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTxUKj4oYXJndiwgYXJndiArIGFyZ2MpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTxUKj4KcmFuZ2UoVCogYmVnaW4sIFQqIGVuZCkgewogIHJldHVybiBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+KGJlZ2luLCBlbmQpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBDb250YWluZXI+CnN0YXRpYyBpbmxpbmUgc3RkOjpyYW5nZXM6OnN1YnJhbmdlPHR5cGVuYW1lIENvbnRhaW5lcjo6dmFsdWVfdHlwZSo+CnJhbmdlKENvbnRhaW5lciYgYykgewogIHJldHVybiBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8dHlwZW5hbWUgQ29udGFpbmVyOjp2YWx1ZV90eXBlKj4oYmVnaW4oYyksIGVuZChjKSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQsIGNsYXNzIENvbnRhaW5lcj4Kc3RhdGljIGlubGluZSBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VD4KcmFuZ2UoQ29udGFpbmVyJiBjKSB7CiAgcmV0dXJuIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTxUPihyZWludGVycHJldF9jYXN0PFQ+KGJlZ2luKGMpKSwgcmVpbnRlcnByZXRfY2FzdDxUPihlbmQoYykpKTsKfQojZW5kaWYKCiNlbmRpZiAvLyBkZWZpbmVkKFVUSUxfSFBQKQoAAAAAAAAAAJkdAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwYAAAAAAAAKBoAAAAAAAAAAAAAAADwvw"
				],
				[
					342,
					1,
					"paste",
					null,
					"AgAAAKwYAAAAAAAAKBoAAAAAAAAAAAAAKBoAAAAAAAAoGgAAAAAAAHwBAAAKdGVtcGxhdGU8Y2xhc3MgVD4gY2xhc3MgcmFuZ2VfdmlldyB7CnB1YmxpYzoKICByYW5nZV92aWV3KGludCBhcmdjLCBUKiAgY29uc3QgYXJndikgOiBjKGFyZ2MpLCB2KGFyZ3YpIHt9CgogIFQqIGNvbnN0CiAgYmVnaW4oKSBjb25zdCB7CiAgICByZXR1cm4gdjsKICB9CiAgVCogY29uc3QKICBlbmQoKSBjb25zdCB7CiAgICByZXR1cm4gdiArIGM7CiAgfQoKcHJpdmF0ZToKICBjb25zdCBpbnQgYzsKICBUKiBjb25zdCB2Owp9OwoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSByYW5nZV92aWV3PFQ+CmFyZ3VtZW50X3JhbmdlKGludCBhcmdjLCBUIGFyZ3ZbXSkgewogIHJldHVybiByYW5nZV92aWV3PFQ+KGFyZ2MsIGFyZ3YpOwp9CgojaWYgMCAmJiBDWA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwYAAAAAAAAKBoAAAAAAAAAAAAAAADwvw"
				],
				[
					346,
					1,
					"cut",
					null,
					"AQAAAPEYAAAAAAAA8RgAAAAAAAAOAAAAVCogIGNvbnN0IGJhc2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEYAAAAAAAA/xgAAAAAAAAAAAAAAADwvw"
				],
				[
					349,
					1,
					"paste",
					null,
					"AQAAAOcYAAAAAAAA9RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcYAAAAAAAA5xgAAAAAAAAAAAAAAADwvw"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPUYAAAAAAAA9hgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUYAAAAAAAA9RgAAAAAAAAAAAAAAADwvw"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPYYAAAAAAAA9xgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYYAAAAAAAA9hgAAAAAAAAAAAAAAADwvw"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BwAAAPcYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD4GAAAAAAAAAMAAABpbnT4GAAAAAAAAPkYAAAAAAAAAAAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA+hgAAAAAAAD7GAAAAAAAAAAAAAD7GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAAA/RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcYAAAAAAAA+hgAAAAAAAAAAAAAAADwvw"
				],
				[
					358,
					2,
					"left_delete",
					null,
					"AgAAAAMZAAAAAAAAAxkAAAAAAAABAAAAIAIZAAAAAAAAAhkAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQZAAAAAAAABBkAAAAAAAAAAAAAAADwvw"
				],
				[
					361,
					1,
					"cut",
					null,
					"AQAAAA8ZAAAAAAAADxkAAAAAAAAHAAAAcChiYXNlKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8ZAAAAAAAAFhkAAAAAAAAAAAAAAADwvw"
				],
				[
					364,
					1,
					"paste",
					null,
					"AQAAAAYZAAAAAAAADRkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYZAAAAAAAABhkAAAAAAAAAAAAAAADwvw"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA0ZAAAAAAAADhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0ZAAAAAAAADRkAAAAAAAAAAAAAAADwvw"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4ZAAAAAAAADxkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4ZAAAAAAAADhkAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					1,
					"left_delete",
					null,
					"AQAAABUZAAAAAAAAFRkAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYZAAAAAAAAFhkAAAAAAAAAAAAAAADwvw"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABUZAAAAAAAAFhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUZAAAAAAAAFRkAAAAAAAAAAAAAAADwvw"
				],
				[
					370,
					1,
					"right_delete",
					null,
					"AQAAABYZAAAAAAAAFhkAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYZAAAAAAAAFhkAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					1,
					"cut",
					null,
					"AQAAAJUZAAAAAAAAlRkAAAAAAAAOAAAAICBUKiBjb25zdCBwOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUZAAAAAAAAoxkAAAAAAAAAAAAAAADwvw"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJUZAAAAAAAAlhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUZAAAAAAAAlRkAAAAAAAAAAAAAAADwvw"
				],
				[
					383,
					1,
					"left_delete",
					null,
					"AQAAAJUZAAAAAAAAlRkAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYZAAAAAAAAlhkAAAAAAAAAAAAAAADwvw"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJUZAAAAAAAAlhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUZAAAAAAAAlRkAAAAAAAAAAAAAAADwvw"
				],
				[
					385,
					1,
					"left_delete",
					null,
					"AQAAAJUZAAAAAAAAlRkAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYZAAAAAAAAlhkAAAAAAAAAAAAAAADwvw"
				],
				[
					387,
					1,
					"paste",
					null,
					"AQAAAIYZAAAAAAAAlBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYZAAAAAAAAhhkAAAAAAAAAAAAAAAAAAA"
				],
				[
					390,
					2,
					"left_delete",
					null,
					"AgAAAJ4ZAAAAAAAAnhkAAAAAAAABAAAAdJ0ZAAAAAAAAnRkAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8ZAAAAAAAAnxkAAAAAAAAAAAAAAADwvw"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJ0ZAAAAAAAAnhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0ZAAAAAAAAnRkAAAAAAAAAAAAAAADwvw"
				],
				[
					392,
					2,
					"left_delete",
					null,
					"AgAAAJ0ZAAAAAAAAnRkAAAAAAAABAAAAc5wZAAAAAAAAnBkAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4ZAAAAAAAAnhkAAAAAAAAAAAAAAADwvw"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAAJwZAAAAAAAAnRkAAAAAAAAAAAAAnRkAAAAAAACeGQAAAAAAAAAAAACeGQAAAAAAAJ8ZAAAAAAAAAAAAAJ8ZAAAAAAAAoBkAAAAAAAAAAAAAoBkAAAAAAAChGQAAAAAAAAAAAAChGQAAAAAAAKIZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwZAAAAAAAAnBkAAAAAAAAAAAAAAADwvw"
				],
				[
					421,
					1,
					"cut",
					null,
					"AQAAAKkZAAAAAAAAqRkAAAAAAAB6AAAACnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgcmFuZ2VfdmlldzxUPgphcmd1bWVudF9yYW5nZShpbnQgc2l6ZSwgVCBiYXNlW10pIHsKICByZXR1cm4gcmFuZ2VfdmlldzxUPihzaXplLCBiYXNlKTsKfQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkZAAAAAAAAIxoAAAAAAAAAAAAAAADwvw"
				],
				[
					422,
					1,
					"paste",
					null,
					"AQAAAKkZAAAAAAAAIxoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkZAAAAAAAAqRkAAAAAAAAAAAAAAADwvw"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "base,"
					},
					"BQAAABQaAAAAAAAAFRoAAAAAAAAAAAAAFRoAAAAAAAAWGgAAAAAAAAAAAAAWGgAAAAAAABcaAAAAAAAAAAAAABcaAAAAAAAAGBoAAAAAAAAAAAAAGBoAAAAAAAAZGgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQaAAAAAAAAFBoAAAAAAAAAAAAAAADwvw"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABkaAAAAAAAAGhoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkaAAAAAAAAGRoAAAAAAAAAAAAAAADwvw"
				],
				[
					432,
					1,
					"left_delete",
					null,
					"AQAAAB4aAAAAAAAAHhoAAAAAAAAGAAAALCBiYXNl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4aAAAAAAAAJBoAAAAAAAAAAAAAAADwvw"
				],
				[
					435,
					4,
					"left_delete",
					null,
					"BAAAAB0aAAAAAAAAHRoAAAAAAAABAAAAZRwaAAAAAAAAHBoAAAAAAAABAAAAehsaAAAAAAAAGxoAAAAAAAABAAAAaRoaAAAAAAAAGhoAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4aAAAAAAAAHhoAAAAAAAAAAAAAAIBwQA"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "argc"
					},
					"BAAAABoaAAAAAAAAGxoAAAAAAAAAAAAAGxoAAAAAAAAcGgAAAAAAAAAAAAAcGgAAAAAAAB0aAAAAAAAAAAAAAB0aAAAAAAAAHhoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoaAAAAAAAAGhoAAAAAAAAAAAAAAADwvw"
				],
				[
					438,
					4,
					"left_delete",
					null,
					"BAAAABcaAAAAAAAAFxoAAAAAAAABAAAAZRYaAAAAAAAAFhoAAAAAAAABAAAAcxUaAAAAAAAAFRoAAAAAAAABAAAAYRQaAAAAAAAAFBoAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgaAAAAAAAAGBoAAAAAAAAAAAAAAADwvw"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "argv"
					},
					"BAAAABQaAAAAAAAAFRoAAAAAAAAAAAAAFRoAAAAAAAAWGgAAAAAAAAAAAAAWGgAAAAAAABcaAAAAAAAAAAAAABcaAAAAAAAAGBoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQaAAAAAAAAFBoAAAAAAAAAAAAAAADwvw"
				],
				[
					442,
					4,
					"left_delete",
					null,
					"BAAAAO4ZAAAAAAAA7hkAAAAAAAABAAAAZe0ZAAAAAAAA7RkAAAAAAAABAAAAeuwZAAAAAAAA7BkAAAAAAAABAAAAaesZAAAAAAAA6xkAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8ZAAAAAAAA7xkAAAAAAAAAAAAAAADwvw"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "argc0"
					},
					"BQAAAOsZAAAAAAAA7BkAAAAAAAAAAAAA7BkAAAAAAADtGQAAAAAAAAAAAADtGQAAAAAAAO4ZAAAAAAAAAAAAAO4ZAAAAAAAA7xkAAAAAAAAAAAAA7xkAAAAAAADwGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsZAAAAAAAA6xkAAAAAAAAAAAAAAADwvw"
				],
				[
					446,
					1,
					"left_delete",
					null,
					"AQAAAO8ZAAAAAAAA7xkAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAZAAAAAAAA8BkAAAAAAAAAAAAAAADwvw"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "argv"
					},
					"BAAAAPMZAAAAAAAA9BkAAAAAAAAAAAAA9BkAAAAAAAD1GQAAAAAAAAAAAAD1GQAAAAAAAPYZAAAAAAAAAAAAAPYZAAAAAAAA9xkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMZAAAAAAAA8xkAAAAAAAAAAAAAAADwvw"
				],
				[
					449,
					4,
					"right_delete",
					null,
					"BAAAAPcZAAAAAAAA9xkAAAAAAAABAAAAYvcZAAAAAAAA9xkAAAAAAAABAAAAYfcZAAAAAAAA9xkAAAAAAAABAAAAc/cZAAAAAAAA9xkAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcZAAAAAAAA9xkAAAAAAAAAAAAAAADwvw"
				],
				[
					455,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8YAAAAAAAAxRgAAAAAAAAAAAAAAADwvw"
				],
				[
					462,
					1,
					"cut",
					null,
					"AQAAAEkZAAAAAAAASRkAAAAAAAAxAAAAICBUKiBjb25zdAogIGVuZCgpIGNvbnN0IHsKICAgIHJldHVybiBwICsgbjsKICB9Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkZAAAAAAAAehkAAAAAAAAAAAAAAADwvw"
				],
				[
					463,
					2,
					"paste",
					null,
					"AgAAAEkZAAAAAAAAehkAAAAAAAAAAAAAehkAAAAAAACrGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkZAAAAAAAASRkAAAAAAAAAAAAAAADwvw"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": " size_t"
					},
					"CAAAAHsZAAAAAAAAfBkAAAAAAAAAAAAAfBkAAAAAAAB8GQAAAAAAAAkAAAAgVCogY29uc3R8GQAAAAAAAH0ZAAAAAAAAAAAAAH0ZAAAAAAAAfhkAAAAAAAAAAAAAfhkAAAAAAAB/GQAAAAAAAAAAAAB/GQAAAAAAAIAZAAAAAAAAAAAAAIAZAAAAAAAAgRkAAAAAAAAAAAAAgRkAAAAAAACCGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsZAAAAAAAAhBkAAAAAAAAAAAAAAADwvw"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BQAAAIUZAAAAAAAAhhkAAAAAAAAAAAAAhhkAAAAAAACGGQAAAAAAAAMAAABlbmSGGQAAAAAAAIcZAAAAAAAAAAAAAIcZAAAAAAAAiBkAAAAAAAAAAAAAiBkAAAAAAACJGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUZAAAAAAAAiBkAAAAAAAAAAAAAAADwvw"
				],
				[
					473,
					4,
					"left_delete",
					null,
					"BAAAAKIZAAAAAAAAohkAAAAAAAABAAAAIKEZAAAAAAAAoRkAAAAAAAABAAAAK6AZAAAAAAAAoBkAAAAAAAABAAAAIJ8ZAAAAAAAAnxkAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMZAAAAAAAAoxkAAAAAAAAAAAAAAADwvw"
				],
				[
					475,
					3,
					"join_lines",
					null,
					"CAAAAIIZAAAAAAAAghkAAAAAAAABAAAACoIZAAAAAAAAghkAAAAAAAACAAAAICCCGQAAAAAAAIMZAAAAAAAAAAAAAJEZAAAAAAAAkRkAAAAAAAABAAAACpEZAAAAAAAAkRkAAAAAAAAEAAAAICAgIJoZAAAAAAAAmhkAAAAAAAABAAAACpoZAAAAAAAAmhkAAAAAAAACAAAAICCaGQAAAAAAAJsZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIZAAAAAAAAghkAAAAAAAAAAAAAAABWQA"
				],
				[
					477,
					3,
					"join_lines",
					null,
					"CAAAAFMZAAAAAAAAUxkAAAAAAAABAAAAClMZAAAAAAAAUxkAAAAAAAACAAAAICBTGQAAAAAAAFQZAAAAAAAAAAAAAGEZAAAAAAAAYRkAAAAAAAABAAAACmEZAAAAAAAAYRkAAAAAAAAEAAAAICAgIG4ZAAAAAAAAbhkAAAAAAAABAAAACm4ZAAAAAAAAbhkAAAAAAAACAAAAICBuGQAAAAAAAG8ZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMZAAAAAAAAUxkAAAAAAAAAAAAAAIBwQA"
				],
				[
					479,
					3,
					"join_lines",
					null,
					"CAAAACQZAAAAAAAAJBkAAAAAAAABAAAACiQZAAAAAAAAJBkAAAAAAAACAAAAICAkGQAAAAAAACUZAAAAAAAAAAAAADQZAAAAAAAANBkAAAAAAAABAAAACjQZAAAAAAAANBkAAAAAAAAEAAAAICAgID0ZAAAAAAAAPRkAAAAAAAABAAAACj0ZAAAAAAAAPRkAAAAAAAACAAAAICA9GQAAAAAAAD4ZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQZAAAAAAAAJBkAAAAAAAAAAAAAAABzQA"
				],
				[
					509,
					1,
					"cut",
					null,
					"AQAAANoYAAAAAAAA2hgAAAAAAAA/AAAAICByYW5nZV92aWV3KFQqIGNvbnN0IGJhc2UsIHNpemVfdCBzaXplKSA6IHAoYmFzZSksIG4oc2l6ZSkge30K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoYAAAAAAAAGRkAAAAAAAAAAAAAAADwvw"
				],
				[
					510,
					2,
					"paste",
					null,
					"AgAAANoYAAAAAAAAGRkAAAAAAAAAAAAAGRkAAAAAAABYGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoYAAAAAAAA2hgAAAAAAAAAAAAAAADwvw"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAOcYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADoGAAAAAAAABoAAABUKiBjb25zdCBiYXNlLCBzaXplX3Qgc2l6ZegYAAAAAAAA6RgAAAAAAAAAAAAA6RgAAAAAAADqGAAAAAAAAAAAAADqGAAAAAAAAOsYAAAAAAAAAAAAAOsYAAAAAAAA7BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcYAAAAAAAAARkAAAAAAAAAAAAAAADwvw"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwYAAAAAAAA7RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwYAAAAAAAA7BgAAAAAAAAAAAAAAADwvw"
				],
				[
					515,
					6,
					"left_delete",
					null,
					"BgAAAOwYAAAAAAAA7BgAAAAAAAABAAAAIOsYAAAAAAAA6xgAAAAAAAABAAAAdOoYAAAAAAAA6hgAAAAAAAABAAAAc+kYAAAAAAAA6RgAAAAAAAABAAAAbugYAAAAAAAA6BgAAAAAAAABAAAAb+cYAAAAAAAA5xgAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0YAAAAAAAA7RgAAAAAAAAAAAAAAADwvw"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": "range_view"
					},
					"CgAAAOcYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADpGAAAAAAAAAAAAADpGAAAAAAAAOoYAAAAAAAAAAAAAOoYAAAAAAAA6xgAAAAAAAAAAAAA6xgAAAAAAADsGAAAAAAAAAAAAADsGAAAAAAAAO0YAAAAAAAAAAAAAO0YAAAAAAAA7hgAAAAAAAAAAAAA7hgAAAAAAADvGAAAAAAAAAAAAADvGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA8RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcYAAAAAAAA5xgAAAAAAAAAAAAAAADwvw"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "<T>"
					},
					"AwAAAPEYAAAAAAAA8hgAAAAAAAAAAAAA8hgAAAAAAADzGAAAAAAAAAAAAADzGAAAAAAAAPQYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEYAAAAAAAA8RgAAAAAAAAAAAAAAADwvw"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQYAAAAAAAA9RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQYAAAAAAAA9BgAAAAAAAAAAAAAAADwvw"
				],
				[
					519,
					1,
					"left_delete",
					null,
					"AQAAAPQYAAAAAAAA9BgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUYAAAAAAAA9RgAAAAAAAAAAAAAAADwvw"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": " const"
					},
					"BgAAAPQYAAAAAAAA9RgAAAAAAAAAAAAA9RgAAAAAAAD2GAAAAAAAAAAAAAD2GAAAAAAAAPcYAAAAAAAAAAAAAPcYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD5GAAAAAAAAAAAAAD5GAAAAAAAAPoYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQYAAAAAAAA9BgAAAAAAAAAAAAAAADwvw"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoYAAAAAAAA+hgAAAAAAAAAAAAAAADwvw"
				],
				[
					522,
					1,
					"left_delete",
					null,
					"AQAAAPoYAAAAAAAA+hgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsYAAAAAAAA+xgAAAAAAAAAAAAAAADwvw"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AQAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoYAAAAAAAA+hgAAAAAAAAAAAAAAADwvw"
				],
				[
					524,
					1,
					"left_delete",
					null,
					"AQAAAPoYAAAAAAAA+hgAAAAAAAABAAAAJQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsYAAAAAAAA+xgAAAAAAAAAAAAAAADwvw"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoYAAAAAAAA+hgAAAAAAAAAAAAAAADwvw"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": " rabge"
					},
					"BgAAAPsYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAD9GAAAAAAAAAAAAAD9GAAAAAAAAP4YAAAAAAAAAAAAAP4YAAAAAAAA/xgAAAAAAAAAAAAA/xgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAEZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsYAAAAAAAA+xgAAAAAAAAAAAAAAADwvw"
				],
				[
					527,
					3,
					"left_delete",
					null,
					"AwAAAAAZAAAAAAAAABkAAAAAAAABAAAAZf8YAAAAAAAA/xgAAAAAAAABAAAAZ/4YAAAAAAAA/hgAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEZAAAAAAAAARkAAAAAAAAAAAAAAADwvw"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "nge"
					},
					"AwAAAP4YAAAAAAAA/xgAAAAAAAAAAAAA/xgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAEZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4YAAAAAAAA/hgAAAAAAAAAAAAAAADwvw"
				],
				[
					530,
					4,
					"left_delete",
					null,
					"BAAAAAoZAAAAAAAAChkAAAAAAAABAAAAZQkZAAAAAAAACRkAAAAAAAABAAAAcwgZAAAAAAAACBkAAAAAAAABAAAAYQcZAAAAAAAABxkAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsZAAAAAAAACxkAAAAAAAAAAAAAAADwvw"
				],
				[
					531,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAYZAAAAAAAABhkAAAAAAAABAAAAKAYZAAAAAAAABhkAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcZAAAAAAAABxkAAAAAAAAAAAAAAADwvw"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "(range."
					},
					"BwAAAAYZAAAAAAAABxkAAAAAAAAAAAAABxkAAAAAAAAIGQAAAAAAAAAAAAAIGQAAAAAAAAkZAAAAAAAAAAAAAAkZAAAAAAAAChkAAAAAAAAAAAAAChkAAAAAAAALGQAAAAAAAAAAAAALGQAAAAAAAAwZAAAAAAAAAAAAAAwZAAAAAAAADRkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYZAAAAAAAABhkAAAAAAAAAAAAAAADwvw"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": "begin())"
					},
					"CAAAAA0ZAAAAAAAADhkAAAAAAAAAAAAADhkAAAAAAAAPGQAAAAAAAAAAAAAPGQAAAAAAABAZAAAAAAAAAAAAABAZAAAAAAAAERkAAAAAAAAAAAAAERkAAAAAAAASGQAAAAAAAAAAAAASGQAAAAAAABMZAAAAAAAAAAAAABMZAAAAAAAAFBkAAAAAAAAAAAAAFBkAAAAAAAAVGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0ZAAAAAAAADRkAAAAAAAAAAAAAAADwvw"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUZAAAAAAAAFhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUZAAAAAAAAFRkAAAAAAAAAAAAAAADwvw"
				],
				[
					535,
					1,
					"left_delete",
					null,
					"AQAAABUZAAAAAAAAFRkAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYZAAAAAAAAFhkAAAAAAAAAAAAAAADwvw"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAABUZAAAAAAAAFhkAAAAAAAAAAAAAFhkAAAAAAAAXGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUZAAAAAAAAFRkAAAAAAAAAAAAAAADwvw"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcZAAAAAAAAGBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcZAAAAAAAAFxkAAAAAAAAAAAAAAADwvw"
				],
				[
					538,
					3,
					"left_delete",
					null,
					"AwAAABcZAAAAAAAAFxkAAAAAAAABAAAAIBYZAAAAAAAAFhkAAAAAAAABAAAALBUZAAAAAAAAFRkAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgZAAAAAAAAGBkAAAAAAAAAAAAAAADwvw"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABUZAAAAAAAAFhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUZAAAAAAAAFRkAAAAAAAAAAAAAAADwvw"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": " n(range."
					},
					"CQAAABYZAAAAAAAAFxkAAAAAAAAAAAAAFxkAAAAAAAAYGQAAAAAAAAAAAAAYGQAAAAAAABkZAAAAAAAAAAAAABkZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAbGQAAAAAAAAAAAAAbGQAAAAAAABwZAAAAAAAAAAAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAeGQAAAAAAAAAAAAAeGQAAAAAAAB8ZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYZAAAAAAAAFhkAAAAAAAAAAAAAAADwvw"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "size())"
					},
					"BwAAAB8ZAAAAAAAAIBkAAAAAAAAAAAAAIBkAAAAAAAAhGQAAAAAAAAAAAAAhGQAAAAAAACIZAAAAAAAAAAAAACIZAAAAAAAAIxkAAAAAAAAAAAAAIxkAAAAAAAAkGQAAAAAAAAAAAAAkGQAAAAAAACUZAAAAAAAAAAAAACUZAAAAAAAAJhkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8ZAAAAAAAAHxkAAAAAAAAAAAAAAADwvw"
				],
				[
					543,
					1,
					"left_delete",
					null,
					"AQAAACYZAAAAAAAAJhkAAAAAAAAJAAAALCBuKHNpemUp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYZAAAAAAAALxkAAAAAAAAAAAAAAADwvw"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANwYAAAAAAAA3RgAAAAAAAAAAAAA3RgAAAAAAADeGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwYAAAAAAAA3BgAAAAAAAAAAAAAAADwvw"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "\n\nrange_view&"
					},
					"EAAAAGoZAAAAAAAAaxkAAAAAAAAAAAAAaxkAAAAAAABtGQAAAAAAAAAAAABtGQAAAAAAAG4ZAAAAAAAAAAAAAG4ZAAAAAAAAcBkAAAAAAAAAAAAAaxkAAAAAAABrGQAAAAAAAAIAAAAgIG4ZAAAAAAAAbxkAAAAAAAAAAAAAbxkAAAAAAABwGQAAAAAAAAAAAABwGQAAAAAAAHEZAAAAAAAAAAAAAHEZAAAAAAAAchkAAAAAAAAAAAAAchkAAAAAAABzGQAAAAAAAAAAAABzGQAAAAAAAHQZAAAAAAAAAAAAAHQZAAAAAAAAdRkAAAAAAAAAAAAAdRkAAAAAAAB2GQAAAAAAAAAAAAB2GQAAAAAAAHcZAAAAAAAAAAAAAHcZAAAAAAAAeBkAAAAAAAAAAAAAeBkAAAAAAAB5GQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoZAAAAAAAAahkAAAAAAAAAAAAAAADwvw"
				],
				[
					571,
					1,
					"left_delete",
					null,
					"AQAAAHgZAAAAAAAAeBkAAAAAAAABAAAAJg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkZAAAAAAAAeRkAAAAAAAAAAAAAAADwvw"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "<T>&"
					},
					"BAAAAHgZAAAAAAAAeRkAAAAAAAAAAAAAeRkAAAAAAAB6GQAAAAAAAAAAAAB6GQAAAAAAAHsZAAAAAAAAAAAAAHsZAAAAAAAAfBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgZAAAAAAAAeBkAAAAAAAAAAAAAAADwvw"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "\noperator="
					},
					"CwAAAHwZAAAAAAAAfRkAAAAAAAAAAAAAfRkAAAAAAAB/GQAAAAAAAAAAAAB/GQAAAAAAAIAZAAAAAAAAAAAAAIAZAAAAAAAAgRkAAAAAAAAAAAAAgRkAAAAAAACCGQAAAAAAAAAAAACCGQAAAAAAAIMZAAAAAAAAAAAAAIMZAAAAAAAAhBkAAAAAAAAAAAAAhBkAAAAAAACFGQAAAAAAAAAAAACFGQAAAAAAAIYZAAAAAAAAAAAAAIYZAAAAAAAAhxkAAAAAAAAAAAAAhxkAAAAAAACIGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwZAAAAAAAAfBkAAAAAAAAAAAAAAADwvw"
				],
				[
					574,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIgZAAAAAAAAihkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgZAAAAAAAAiBkAAAAAAAAAAAAAAADwvw"
				],
				[
					579,
					1,
					"left_delete",
					null,
					"AQAAAIkZAAAAAAAAiRkAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoZAAAAAAAAihkAAAAAAAAAAAAAAADwvw"
				],
				[
					584,
					1,
					"paste",
					null,
					"AgAAAOkYAAAAAAAABBkAAAAAAAAAAAAABBkAAAAAAAAEGQAAAAAAABsAAAByYW5nZV92aWV3PFQ+IGNvbnN0JiByYW5nZSk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkYAAAAAAAABBkAAAAAAAAAAAAAAADwvw"
				],
				[
					590,
					1,
					"paste",
					null,
					"AQAAAIkZAAAAAAAApBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkZAAAAAAAAiRkAAAAAAAAAAAAAAADwvw"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQZAAAAAAAApRkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQZAAAAAAAApBkAAAAAAAAAAAAAAADwvw"
				],
				[
					592,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKUZAAAAAAAApxkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUZAAAAAAAApRkAAAAAAAAAAAAAAADwvw"
				],
				[
					596,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKYZAAAAAAAApxkAAAAAAAAAAAAApxkAAAAAAACpGQAAAAAAAAAAAACpGQAAAAAAAKoZAAAAAAAAAAAAAKoZAAAAAAAArBkAAAAAAAAAAAAApxkAAAAAAACnGQAAAAAAAAIAAAAgIKcZAAAAAAAAqxkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYZAAAAAAAAphkAAAAAAAAAAAAAAADwvw"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAKsZAAAAAAAArBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsZAAAAAAAAqxkAAAAAAAAAAAAAAABAQA"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKwZAAAAAAAArRkAAAAAAAAAAAAArRkAAAAAAACuGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwZAAAAAAAArBkAAAAAAAAAAAAAAADwvw"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": " range.begin"
					},
					"DAAAAK4ZAAAAAAAArxkAAAAAAAAAAAAArxkAAAAAAACwGQAAAAAAAAAAAACwGQAAAAAAALEZAAAAAAAAAAAAALEZAAAAAAAAshkAAAAAAAAAAAAAshkAAAAAAACzGQAAAAAAAAAAAACzGQAAAAAAALQZAAAAAAAAAAAAALQZAAAAAAAAtRkAAAAAAAAAAAAAtRkAAAAAAAC2GQAAAAAAAAAAAAC2GQAAAAAAALcZAAAAAAAAAAAAALcZAAAAAAAAuBkAAAAAAAAAAAAAuBkAAAAAAAC5GQAAAAAAAAAAAAC5GQAAAAAAALoZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4ZAAAAAAAArhkAAAAAAAAAAAAAAADwvw"
				],
				[
					602,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALoZAAAAAAAAvBkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoZAAAAAAAAuhkAAAAAAAAAAAAAAADwvw"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALwZAAAAAAAAvRkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwZAAAAAAAAvBkAAAAAAAAAAAAAAADwvw"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": "\nn"
					},
					"AwAAAL0ZAAAAAAAAvhkAAAAAAAAAAAAAvhkAAAAAAADCGQAAAAAAAAAAAADCGQAAAAAAAMMZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0ZAAAAAAAAvRkAAAAAAAAAAAAAAADwvw"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMMZAAAAAAAAxBkAAAAAAAAAAAAAxBkAAAAAAADFGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMZAAAAAAAAwxkAAAAAAAAAAAAAAADwvw"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": " range.size"
					},
					"CwAAAMUZAAAAAAAAxhkAAAAAAAAAAAAAxhkAAAAAAADHGQAAAAAAAAAAAADHGQAAAAAAAMgZAAAAAAAAAAAAAMgZAAAAAAAAyRkAAAAAAAAAAAAAyRkAAAAAAADKGQAAAAAAAAAAAADKGQAAAAAAAMsZAAAAAAAAAAAAAMsZAAAAAAAAzBkAAAAAAAAAAAAAzBkAAAAAAADNGQAAAAAAAAAAAADNGQAAAAAAAM4ZAAAAAAAAAAAAAM4ZAAAAAAAAzxkAAAAAAAAAAAAAzxkAAAAAAADQGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUZAAAAAAAAxRkAAAAAAAAAAAAAAADwvw"
				],
				[
					608,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANAZAAAAAAAA0hkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAZAAAAAAAA0BkAAAAAAAAAAAAAAADwvw"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANIZAAAAAAAA0xkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIZAAAAAAAA0hkAAAAAAAAAAAAAAADwvw"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANMZAAAAAAAA1BkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMZAAAAAAAA0xkAAAAAAAAAAAAAAADwvw"
				],
				[
					612,
					1,
					"left_delete",
					null,
					"AQAAANMZAAAAAAAA0xkAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQZAAAAAAAA1BkAAAAAAAAAAAAAAADwvw"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFkaAAAAAAAAWhoAAAAAAAAAAAAAWhoAAAAAAABaGgAAAAAAAAUAAABjb25zdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkaAAAAAAAAXhoAAAAAAAAAAAAAAADwvw"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGAaAAAAAAAAYRoAAAAAAAAAAAAAYRoAAAAAAABhGgAAAAAAAAUAAABjb25zdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAaAAAAAAAAZRoAAAAAAAAAAAAAAADwvw"
				],
				[
					639,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABmHgAAI2lmbmRlZiBVVElMX0hQUAojZGVmaW5lIFVUSUxfSFBQCgojaW5jbHVkZSA8c3RyaW5nPgojaW5jbHVkZSA8bnVtZXJpYz4KI2luY2x1ZGUgPGlvc3RyZWFtPgojaW5jbHVkZSA8aW9tYW5pcD4KI2luY2x1ZGUgPHN5cy9zdGF0Lmg+CgojaW5jbHVkZSA8b3BlbmN2Mi9jb3JlLmhwcD4KCiNpZiBkZWZpbmVkKF9XSU4zMikgfHwgZGVmaW5lZChfX01JTkdXMzJfXykKI2RlZmluZSBWSVNJQkxFIF9fZGVjbHNwZWMoZGxsZXhwb3J0KQojZGVmaW5lIEhJRERFTgojZWxzZQojZGVmaW5lIFZJU0lCTEUgX19hdHRyaWJ1dGVfXygodmlzaWJpbGl0eSgiZGVmYXVsdCIpKSkKI2RlZmluZSBISURERU4gX19hdHRyaWJ1dGVfXygodmlzaWJpbGl0eSgiaGlkZGVuIikpKQojZW5kaWYKCiNkZWZpbmUgQ09MT1JfQkxBQ0sgIlx4MWJbMzBtIgojZGVmaW5lIENPTE9SX1JFRCAiXHgxYlszMW0iCiNkZWZpbmUgQ09MT1JfR1JFRU4gIlx4MWJbMzJtIgojZGVmaW5lIENPTE9SX1lFTExPVyAiXHgxYlszM20iCiNkZWZpbmUgQ09MT1JfQkxVRSAiXHgxYlszNG0iCiNkZWZpbmUgQ09MT1JfTUFHRU5UQSAiXHgxYlszNW0iCiNkZWZpbmUgQ09MT1JfQ1lBTiAiXHgxYlszNm0iCiNkZWZpbmUgQ09MT1JfV0hJVEUgIlx4MWJbMzdtIgoKI2RlZmluZSBDT0xPUl9HUkFZICJceDFiWzE7MzBtIgojZGVmaW5lIENPTE9SX0xJR0hUUkVEICJceDFiWzE7MzFtIgojZGVmaW5lIENPTE9SX0xJR0hUR1JFRU4gIlx4MWJbMTszMm0iCiNkZWZpbmUgQ09MT1JfTElHSFRZRUxMT1cgIlx4MWJbMTszM20iCiNkZWZpbmUgQ09MT1JfTElHSFRCTFVFICJceDFiWzE7MzRtIgojZGVmaW5lIENPTE9SX0xJR0hUTUFHRU5UQSAiXHgxYlsxOzM1bSIKI2RlZmluZSBDT0xPUl9MSUdIVENZQU4gIlx4MWJbMTszNm0iCiNkZWZpbmUgQ09MT1JfTElHSFRXSElURSAiXHgxYlsxOzM3bSIKCiNkZWZpbmUgQ09MT1JfTk9ORSAiXHgxYlttIgoKYm9vbCBzdHJfZW5kKGNvbnN0IGNoYXIqIHN0ciwgY29uc3QgY2hhciogc3VmZml4KTsKYm9vbCBzdHJfZW5kKGNvbnN0IHN0ZDo6c3RyaW5nJiBzdHIsIGNvbnN0IHN0ZDo6c3RyaW5nJiBzdWZmaXgpOwoKc3RkOjpzdHJpbmcgdG9fc3RyaW5nKGNvbnN0IGN2OjpTY2FsYXImIHNjYWxhcik7CgpzdGQ6OnN0cmluZyBtYWtlX2ZpbGVuYW1lKGNvbnN0IHN0ZDo6c3RyaW5nJiBuYW1lLCBpbnQgY291bnQsIGNvbnN0IHN0ZDo6c3RyaW5nJiBleHQsIGNvbnN0IHN0ZDo6c3RyaW5nJiBkaXIgPSAidG1wIik7CgppbmxpbmUgaW50MzJfdApnZXRfbXRpbWUoY29uc3QgY2hhciogZmlsZW5hbWUpIHsKI2lmIF9fU1REQ19WRVJTSU9OX18gPj0gMjAxNzEwTAogIHJldHVybiBzdGQ6OmZpbGVzeXN0ZW06Omxhc3Rfd3JpdGVfdGltZShmaWxlbmFtZSk7CiNlbHNlCiAgc3RydWN0IHN0YXQgc3Q7CiAgaWYoc3RhdChmaWxlbmFtZSwgJnN0KSAhPSAtMSkgewogICAgdWludDMyX3QgcmV0ID0gc3Quc3RfbXRpbWU7CiAgICByZXR1cm4gcmV0OwogIH0KI2VuZGlmCiAgcmV0dXJuIC0xOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBDaGFyLCBjbGFzcyBWYWx1ZT4KaW5saW5lIHN0ZDo6b3N0cmVhbSYKb3BlcmF0b3I8PChzdGQ6Om9zdHJlYW0mIG9zLCBjb25zdCBzdGQ6OnZlY3RvcjxWYWx1ZT4mIGMpIHsKICB0eXBlZGVmIHR5cGVuYW1lIHN0ZDo6dmVjdG9yPFZhbHVlPjo6Y29uc3RfaXRlcmF0b3IgaXRlcmF0b3JfdHlwZTsKICBpdGVyYXRvcl90eXBlIGVuZCA9IGMuZW5kKCk7CiAgZm9yKGl0ZXJhdG9yX3R5cGUgaXQgPSBjLmJlZ2luKCk7IGl0ICE9IGVuZDsgKytpdCkgewogICAgb3MgPDwgJyAnOwogICAgb3MgPDwgdG9fc3RyaW5nKCppdCk7CiAgfQogIHJldHVybiBvczsKfQoKaW5saW5lIHN0ZDo6c3RyaW5nCnRvX3N0cmluZyhjb25zdCBjdjo6U2NhbGFyJiBzY2FsYXIpIHsKICBjb25zdCBpbnQgcGFkID0gMzsKICBzdGQ6Om9zdHJpbmdzdHJlYW0gb3NzOwogIG9zcyA8PCAnWycgPDwgc3RkOjpzZXRmaWxsKCcgJykgPDwgc3RkOjpzZXR3KHBhZCkgPDwgc2NhbGFyWzBdIDw8ICcsJyA8PCBzdGQ6OnNldGZpbGwoJyAnKSA8PCBzdGQ6OnNldHcocGFkKSA8PCBzY2FsYXJbMV0KICAgICAgPDwgJywnIDw8IHN0ZDo6c2V0ZmlsbCgnICcpIDw8IHN0ZDo6c2V0dyhwYWQpIDw8IHNjYWxhclsyXSA8PCAnLCcgPDwgc3RkOjpzZXRmaWxsKCcgJykgPDwgc3RkOjpzZXR3KHBhZCkgPDwgc2NhbGFyWzNdCiAgICAgIDw8ICddJzsKICByZXR1cm4gb3NzLnN0cigpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBJdGVyYXRvcj4Kc3RhdGljIGlubGluZSBzdGQ6OnN0cmluZwpqb2luKGNvbnN0IEl0ZXJhdG9yJiBzdGFydCwgY29uc3QgSXRlcmF0b3ImIGVuZCwgY29uc3Qgc3RkOjpzdHJpbmcmIGRlbGltKSB7CiAgcmV0dXJuIHN0ZDo6YWNjdW11bGF0ZShzdGFydCwgZW5kLCBzdGQ6OnN0cmluZygpLCBbJmRlbGltXShjb25zdCBzdGQ6OnN0cmluZyYgYSwgY29uc3Qgc3RkOjpzdHJpbmcmIGIpIC0+IHN0ZDo6c3RyaW5nIHsKICAgIHJldHVybiBhICsgKGEubGVuZ3RoKCkgPiAwID8gZGVsaW0gOiAiIikgKyBiOwogIH0pOwp9CgpleHRlcm4gIkMiIHZvaWQqIGdldF9oZWFwX2Jhc2UoKTsKCnR5cGVkZWYgc3RydWN0IEpTTWF0RGltZW5zaW9ucyB7CiAgdWludDMyX3Qgcm93cywgY29sczsKCiAgb3BlcmF0b3IgY3Y6OlNpemUoKSBjb25zdCB7IHJldHVybiBjdjo6U2l6ZShjb2xzLCByb3dzKTsgfQp9IEpTTWF0RGltZW5zaW9uczsKCnN0YXRpYyBpbmxpbmUgaW50Cm1hdHR5cGVfZGVwdGgoaW50IHR5cGUpIHsKICByZXR1cm4gdHlwZSAmIDB4NzsKfQpzdGF0aWMgaW5saW5lIGludAptYXR0eXBlX2NoYW5uZWxzKGludCB0eXBlKSB7CiAgcmV0dXJuICh0eXBlID4+IDMpICsgMTsKfQpzdGF0aWMgaW5saW5lIGJvb2wKbWF0dHlwZV9mbG9hdGluZyhpbnQgdHlwZSkgewogIHN3aXRjaChtYXR0eXBlX2RlcHRoKHR5cGUpKSB7CiAgICBjYXNlIENWXzMyRjoKICAgIGNhc2UgQ1ZfNjRGOiByZXR1cm4gdHJ1ZTsKICAgIGRlZmF1bHQ6IHJldHVybiBmYWxzZTsKICB9Cn0Kc3RhdGljIGlubGluZSBib29sCm1hdHR5cGVfc2lnbmVkKGludCB0eXBlKSB7CiAgc3dpdGNoKG1hdHR5cGVfZGVwdGgodHlwZSkpIHsKICAgIGNhc2UgQ1ZfOFM6CiAgICBjYXNlIENWXzE2UzoKICAgIGNhc2UgQ1ZfMzJTOiByZXR1cm4gdHJ1ZTsKICAgIGRlZmF1bHQ6IHJldHVybiBmYWxzZTsKICB9Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgSlNNYXREaW1lbnNpb25zCm1hdF9kaW1lbnNpb25zKGNvbnN0IFQmIG1hdCkgewogIEpTTWF0RGltZW5zaW9ucyByZXQ7CiAgcmV0LnJvd3MgPSBtYXQucm93czsKICByZXQuY29scyA9IG1hdC5jb2xzOwogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCoKbWF0X3B0cihjdjo6TWF0JiBtYXQpIHsKICByZXR1cm4gcmVpbnRlcnByZXRfY2FzdDx1aW50OF90Kj4obWF0LnB0cigpKTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgptYXRfcHRyKGN2OjpVTWF0JiBtYXQpIHsKICBjdjo6VU1hdERhdGEqIHU7CgogIGlmKCh1ID0gbWF0LnUpKQogICAgcmV0dXJuIHJlaW50ZXJwcmV0X2Nhc3Q8dWludDhfdCo+KHUtPmRhdGEpOwoKICByZXR1cm4gbnVsbHB0cjsKfQoKc3RhdGljIGlubGluZSBzaXplX3QKbWF0X29mZnNldChjb25zdCBjdjo6TWF0JiBtYXQsIHVpbnQzMl90IHJvdywgdWludDMyX3QgY29sKSB7CiAgY29uc3QgdWNoYXIgKmJhc2UsICpwdHI7CgogIGJhc2UgPSBtYXQucHRyPHVjaGFyPigpOwogIHB0ciA9IG1hdC5wdHI8dWNoYXI+KHJvdywgY29sKTsKCiAgcmV0dXJuIHB0ciAtIGJhc2U7Cn0KCnN0YXRpYyBpbmxpbmUgc2l6ZV90Cm1hdF9vZmZzZXQoY29uc3QgY3Y6OlVNYXQmIG1hdCwgdWludDMyX3Qgcm93LCB1aW50MzJfdCBjb2wpIHsKICByZXR1cm4gKHNpemVfdChtYXQuY29scykgKiByb3cgKyBjb2wpICogbWF0LmVsZW1TaXplKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCYKbWF0X2F0KGN2OjpNYXQmIG1hdCwgdWludDMyX3Qgcm93LCB1aW50MzJfdCBjb2wpIHsKICByZXR1cm4gKm1hdC5wdHI8VD4ocm93LCBjb2wpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQmCm1hdF9hdChjdjo6VU1hdCYgbWF0LCB1aW50MzJfdCByb3csIHVpbnQzMl90IGNvbCkgewogIHNpemVfdCBvZmZzID0gbWF0X29mZnNldChtYXQsIHJvdywgY29sKTsKICByZXR1cm4gKnJlaW50ZXJwcmV0X2Nhc3Q8VCo+KG1hdF9wdHIobWF0KSArIG9mZnMpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIHNpemVfdAptYXRfYnl0ZXNpemUoY29uc3QgVCYgbWF0KSB7CiAgcmV0dXJuIG1hdC5lbGVtU2l6ZSgpICogbWF0LnRvdGFsKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgaW50Cm1hdF9kZXB0aChjb25zdCBUJiBtYXQpIHsKICByZXR1cm4gbWF0dHlwZV9kZXB0aChtYXQudHlwZSgpKTsKfQoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBpbnQKbWF0X2NoYW5uZWxzKGNvbnN0IFQmIG1hdCkgewogIHJldHVybiBtYXR0eXBlX2NoYW5uZWxzKG1hdC50eXBlKCkpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIGJvb2wKbWF0X3NpZ25lZChjb25zdCBUJiBtYXQpIHsKICByZXR1cm4gbWF0dHlwZV9zaWduZWQobWF0LnR5cGUoKSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgYm9vbAptYXRfZmxvYXRpbmcoY29uc3QgVCYgbWF0KSB7CiAgcmV0dXJuIG1hdHR5cGVfZmxvYXRpbmcobWF0LnR5cGUoKSk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQsIGludCBOPgpzdGF0aWMgaW5saW5lIFQqCmJlZ2luKGN2OjpWZWM8VCwgTj4mIHYpIHsKICByZXR1cm4gJnZbMF07Cn0KdGVtcGxhdGU8Y2xhc3MgVCwgaW50IE4+CnN0YXRpYyBpbmxpbmUgVCoKZW5kKGN2OjpWZWM8VCwgTj4mIHYpIHsKICByZXR1cm4gJnZbTl07Cn0KCnRlbXBsYXRlPGNsYXNzIFQsIGludCBOPgpzdGF0aWMgaW5saW5lIFQgY29uc3QqCmJlZ2luKGN2OjpWZWM8VCwgTj4gY29uc3QmIHYpIHsKICByZXR1cm4gJnZbMF07Cn0KdGVtcGxhdGU8Y2xhc3MgVCwgaW50IE4+CnN0YXRpYyBpbmxpbmUgVCBjb25zdCoKZW5kKGN2OjpWZWM8VCwgTj4gY29uc3QmIHYpIHsKICByZXR1cm4gJnZbTl07Cn0KLyoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlIGNvbnN0KgpiZWdpbihjb25zdCBUJiBvYmopIHsKICByZXR1cm4gb2JqLmJlZ2luKCk7Cn0KdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlKgpiZWdpbihUJiBvYmopIHsKICByZXR1cm4gb2JqLmJlZ2luKCk7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgdHlwZW5hbWUgVDo6dmFsdWVfdHlwZSBjb25zdCoKZW5kKGNvbnN0IFQmIG9iaikgewogIHJldHVybiBvYmouZW5kKCk7Cn0KdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSB0eXBlbmFtZSBUOjp2YWx1ZV90eXBlKgplbmQoVCYgb2JqKSB7CiAgcmV0dXJuIG9iai5lbmQoKTsKfQoqLwp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQqCmJlZ2luKHN0ZDo6dmVjdG9yPFQ+JiB2KSB7CiAgcmV0dXJuICZ2WzBdOwp9CnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCoKZW5kKHN0ZDo6dmVjdG9yPFQ+JiB2KSB7CiAgcmV0dXJuICZ2W3Yuc2l6ZSgpXTsKfQp0ZW1wbGF0ZTxjbGFzcyBUPgpzdGF0aWMgaW5saW5lIFQgY29uc3QqCmJlZ2luKHN0ZDo6dmVjdG9yPFQ+IGNvbnN0JiB2KSB7CiAgcmV0dXJuICZ2WzBdOwp9CnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgVCBjb25zdCoKZW5kKHN0ZDo6dmVjdG9yPFQ+IGNvbnN0JiB2KSB7CiAgcmV0dXJuICZ2W3Yuc2l6ZSgpXTsKfQoKc3RhdGljIGlubGluZSB1aW50OF90KgpiZWdpbihjdjo6TWF0JiBtYXQpIHsKICByZXR1cm4gbWF0LnB0cjx1aW50OF90PigpOwp9CnN0YXRpYyBpbmxpbmUgdWludDhfdCoKZW5kKGN2OjpNYXQmIG1hdCkgewogIHJldHVybiBtYXQucHRyPHVpbnQ4X3Q+KCkgKyAobWF0LnRvdGFsKCkgKiBtYXQuZWxlbVNpemUoKSk7Cn0KCnN0YXRpYyBpbmxpbmUgdWludDhfdCBjb25zdCoKYmVnaW4oY3Y6Ok1hdCBjb25zdCYgbWF0KSB7CiAgcmV0dXJuIG1hdC5wdHI8dWludDhfdCBjb25zdD4oKTsKfQpzdGF0aWMgaW5saW5lIHVpbnQ4X3QgY29uc3QqCmVuZChjdjo6TWF0IGNvbnN0JiBtYXQpIHsKICByZXR1cm4gbWF0LnB0cjx1aW50OF90IGNvbnN0PigpICsgKG1hdC50b3RhbCgpICogbWF0LmVsZW1TaXplKCkpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBUPiBjbGFzcyByYW5nZV92aWV3IHsKcHVibGljOgogIC8vcmFuZ2VfdmlldyhyYW5nZV92aWV3PFQ+IGNvbnN0JiByYW5nZSkgOiBwKHJhbmdlLmJlZ2luKCkpLCBuKHJhbmdlLnNpemUoKSkge30KICByYW5nZV92aWV3KFQqIGNvbnN0IGJhc2UsIHNpemVfdCBzaXplKSA6IHAoYmFzZSksIG4oc2l6ZSkge30KCiAgcmFuZ2VfdmlldzxUPiYKICBvcGVyYXRvcj0ocmFuZ2VfdmlldzxUPiBjb25zdCYgcmFuZ2UpIHsKICAgIHAgPSByYW5nZS5iZWdpbigpOwogICAgbiA9IHJhbmdlLnNpemUoKTsKICB9CgogIFQqIGNvbnN0IGJlZ2luKCkgY29uc3Qge3JldHVybiBwOyB9CiAgVCogY29uc3QgZW5kKCkgY29uc3Qge3JldHVybiBwICsgbjsgfQogIHNpemVfdCBzaXplKCkgY29uc3Qge3JldHVybiBuOyB9Cgpwcml2YXRlOgogIFQqICAgcDsKICAgIHNpemVfdCBuOwp9OwoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSByYW5nZV92aWV3PFQ+CmFyZ3VtZW50X3JhbmdlKGludCBhcmdjLCBUIGFyZ3ZbXSkgewogIHJldHVybiByYW5nZV92aWV3PFQ+KGFyZ3YsIGFyZ2MpOwp9CgojaWYgMCAmJiBDWFhfU1RBTkRBUkQgPj0gMjAKCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+CnNpemVkX3JhbmdlKFQgcHRyLCBzaXplX3QgbGVuKSB7CiAgcmV0dXJuIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTxUPihwdHIsIHB0ciArIGxlbik7Cn0KCnRlbXBsYXRlPGNsYXNzIFQ+CnN0YXRpYyBpbmxpbmUgc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQqPgphcmd1bWVudF9yYW5nZShpbnQgYXJnYywgVCogYXJndikgewogIHJldHVybiBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+KGFyZ3YsIGFyZ3YgKyBhcmdjKTsKfQoKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+CnJhbmdlKFQqIGJlZ2luLCBUKiBlbmQpIHsKICByZXR1cm4gc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQqPihiZWdpbiwgZW5kKTsKfQoKdGVtcGxhdGU8Y2xhc3MgQ29udGFpbmVyPgpzdGF0aWMgaW5saW5lIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTx0eXBlbmFtZSBDb250YWluZXI6OnZhbHVlX3R5cGUqPgpyYW5nZShDb250YWluZXImIGMpIHsKICByZXR1cm4gc3RkOjpyYW5nZXM6OnN1YnJhbmdlPHR5cGVuYW1lIENvbnRhaW5lcjo6dmFsdWVfdHlwZSo+KGJlZ2luKGMpLCBlbmQoYykpOwp9Cgp0ZW1wbGF0ZTxjbGFzcyBULCBjbGFzcyBDb250YWluZXI+CnN0YXRpYyBpbmxpbmUgc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+CnJhbmdlKENvbnRhaW5lciYgYykgewogIHJldHVybiBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VD4ocmVpbnRlcnByZXRfY2FzdDxUPihiZWdpbihjKSksIHJlaW50ZXJwcmV0X2Nhc3Q8VD4oZW5kKGMpKSk7Cn0KI2VuZGlmCgojZW5kaWYgLy8gZGVmaW5lZChVVElMX0hQUCkKAAAAAAAAAAB+HgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEaAAAAAAAAYRoAAAAAAAAAAAAAAADwvw"
				],
				[
					641,
					3,
					"join_lines",
					null,
					"CAAAAEIaAAAAAAAAQhoAAAAAAAABAAAACkIaAAAAAAAAQhoAAAAAAAACAAAAICBCGgAAAAAAAEMaAAAAAAAAAAAAAFEaAAAAAAAAURoAAAAAAAABAAAAClEaAAAAAAAAURoAAAAAAAAEAAAAICAgIFoaAAAAAAAAWhoAAAAAAAABAAAACloaAAAAAAAAWhoAAAAAAAACAAAAICBaGgAAAAAAAFsaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIaAAAAAAAAQhoAAAAAAAAAAAAAAABaQA"
				],
				[
					643,
					3,
					"join_lines",
					null,
					"CAAAABMaAAAAAAAAExoAAAAAAAABAAAAChMaAAAAAAAAExoAAAAAAAACAAAAICATGgAAAAAAABQaAAAAAAAAAAAAACEaAAAAAAAAIRoAAAAAAAABAAAACiEaAAAAAAAAIRoAAAAAAAAEAAAAICAgIC4aAAAAAAAALhoAAAAAAAABAAAACi4aAAAAAAAALhoAAAAAAAACAAAAICAuGgAAAAAAAC8aAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMaAAAAAAAAExoAAAAAAAAAAAAAAIBwQA"
				],
				[
					645,
					3,
					"join_lines",
					null,
					"CAAAAOQZAAAAAAAA5BkAAAAAAAABAAAACuQZAAAAAAAA5BkAAAAAAAACAAAAICDkGQAAAAAAAOUZAAAAAAAAAAAAAPQZAAAAAAAA9BkAAAAAAAABAAAACvQZAAAAAAAA9BkAAAAAAAAEAAAAICAgIP0ZAAAAAAAA/RkAAAAAAAABAAAACv0ZAAAAAAAA/RkAAAAAAAACAAAAICD9GQAAAAAAAP4ZAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQZAAAAAAAA5BkAAAAAAAAAAAAAAABzQA"
				],
				[
					648,
					1,
					"paste",
					null,
					"AQAAANkZAAAAAAAA7RkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkZAAAAAAAA2RkAAAAAAAAAAAAAAAByQA"
				],
				[
					651,
					1,
					"paste",
					null,
					"AQAAAF8aAAAAAAAAbhoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8aAAAAAAAAXxoAAAAAAAAAAAAAAADwvw"
				],
				[
					654,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAF8aAAAAAAAAYRoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8aAAAAAAAAXxoAAAAAAAAAAAAAAADwvw"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANoZAAAAAAAA2xkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoZAAAAAAAA2hkAAAAAAAAAAAAAAADwvw"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": " nl"
					},
					"AwAAAHEaAAAAAAAAchoAAAAAAAAAAAAAchoAAAAAAABzGgAAAAAAAAAAAABzGgAAAAAAAHQaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEaAAAAAAAAcRoAAAAAAAAAAAAAAADwvw"
				],
				[
					673,
					2,
					"left_delete",
					null,
					"AgAAAHMaAAAAAAAAcxoAAAAAAAABAAAAbHIaAAAAAAAAchoAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQaAAAAAAAAdBoAAAAAAAAAAAAAAADwvw"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": "on"
					},
					"AgAAAHIaAAAAAAAAcxoAAAAAAAAAAAAAcxoAAAAAAAB0GgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIaAAAAAAAAchoAAAAAAAAAAAAAAADwvw"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHQaAAAAAAAAdRoAAAAAAAAAAAAAdRoAAAAAAAB3GgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQaAAAAAAAAdBoAAAAAAAAAAAAAAADwvw"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANsZAAAAAAAA3BkAAAAAAAAAAAAA3BkAAAAAAADeGQAAAAAAAAAAAAB4GgAAAAAAAHgaAAAAAAAAAgAAACAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsZAAAAAAAA2xkAAAAAAAAAAAAAAAAwQA"
				],
				[
					678,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4ZAAAAAAAA3hkAAAAAAAAAAAAAAADwvw"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAANQZAAAAAAAA1RkAAAAAAAAAAAAA1RkAAAAAAADZGQAAAAAAAAAAAADZGQAAAAAAANoZAAAAAAAAAAAAANoZAAAAAAAA2xkAAAAAAAAAAAAA2xkAAAAAAADcGQAAAAAAAAAAAADcGQAAAAAAAN0ZAAAAAAAAAAAAAN0ZAAAAAAAA3hkAAAAAAAAAAAAA3hkAAAAAAADfGQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQZAAAAAAAA1BkAAAAAAAAAAAAAAADwvw"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": " *this;"
					},
					"BwAAAN8ZAAAAAAAA4BkAAAAAAAAAAAAA4BkAAAAAAADhGQAAAAAAAAAAAADhGQAAAAAAAOIZAAAAAAAAAAAAAOIZAAAAAAAA4xkAAAAAAAAAAAAA4xkAAAAAAADkGQAAAAAAAAAAAADkGQAAAAAAAOUZAAAAAAAAAAAAAOUZAAAAAAAA5hkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8ZAAAAAAAA3xkAAAAAAAAAAAAAAADwvw"
				],
				[
					718,
					2,
					"left_delete",
					null,
					"AgAAACMbAAAAAAAAIxsAAAAAAAAdAAAACiNpZiAwICYmIENYWF9TVEFOREFSRCA+PSAyMAoiGwAAAAAAACIbAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMbAAAAAAAAQBsAAAAAAAAAAAAAAADwvw"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACIbAAAAAAAAIxsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIbAAAAAAAAIhsAAAAAAAAAAAAAAADwvw"
				],
				[
					725,
					1,
					"",
					null,
					"AQAAAEQbAAAAAAAAURsAAAAAAAAYAAAAc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQbAAAAAAAAXBsAAAAAAAAAAAAAAADwvw"
				],
				[
					726,
					1,
					"",
					null,
					"AQAAAHwbAAAAAAAAiRsAAAAAAAAYAAAAc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwbAAAAAAAAlBsAAAAAAAAAAAAAAADwvw"
				],
				[
					727,
					1,
					"",
					null,
					"AQAAALkdAAAAAAAAxh0AAAAAAAAYAAAAc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkdAAAAAAAA0R0AAAAAAAAAAAAAAADwvw"
				],
				[
					728,
					1,
					"",
					null,
					"AQAAAOYdAAAAAAAA8x0AAAAAAAAYAAAAc3RkOjpyYW5nZXM6OnN1YnJhbmdlPFQ+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYdAAAAAAAA/h0AAAAAAAAAAAAAAADwvw"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ0bAAAAAAAAnhsAAAAAAAAAAAAAnhsAAAAAAACeGwAAAAAAAJcAAAAKdGVtcGxhdGU8Y2xhc3MgVD4Kc3RhdGljIGlubGluZSBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+CmFyZ3VtZW50X3JhbmdlKGludCBhcmdjLCBUKiBhcmd2KSB7CiAgcmV0dXJuIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTxUKj4oYXJndiwgYXJndiArIGFyZ2MpOwp9",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0bAAAAAAAANBwAAAAAAAAAAAAAAADwvw"
				],
				[
					736,
					2,
					"left_delete",
					null,
					"AgAAAJ0bAAAAAAAAnRsAAAAAAAABAAAAIJwbAAAAAAAAnBsAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4bAAAAAAAAnhsAAAAAAAAAAAAAAADwvw"
				],
				[
					765,
					1,
					"paste",
					null,
					"AgAAAL4bAAAAAAAAyxsAAAAAAAAAAAAAyxsAAAAAAADLGwAAAAAAABkAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4bAAAAAAAA1xsAAAAAAAAAAAAAAADwvw"
				],
				[
					768,
					1,
					"paste",
					null,
					"AgAAAO8bAAAAAAAA/BsAAAAAAAAAAAAA/BsAAAAAAAD8GwAAAAAAABkAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U8VCo+",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAACBwAAAAAAAAAAAAAAADwvw"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": "begin"
					},
					"BgAAAP0bAAAAAAAA/hsAAAAAAAAAAAAA/hsAAAAAAAD+GwAAAAAAAAUAAABiZWdpbv4bAAAAAAAA/xsAAAAAAAAAAAAA/xsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAAhwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0bAAAAAAAAAhwAAAAAAAAAAAAAAADwvw"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": "-begin"
					},
					"BgAAAAccAAAAAAAACBwAAAAAAAAAAAAACBwAAAAAAAAJHAAAAAAAAAAAAAAJHAAAAAAAAAocAAAAAAAAAAAAAAocAAAAAAAACxwAAAAAAAAAAAAACxwAAAAAAAAMHAAAAAAAAAAAAAAMHAAAAAAAAA0cAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAccAAAAAAAABxwAAAAAAAAAAAAAAADwvw"
				],
				[
					791,
					2,
					"left_delete",
					null,
					"AgAAADwcAAAAAAAAPBwAAAAAAAAUAAAAdGQ6OnJhbmdlczo6c3VicmFuZ2U7HAAAAAAAADscAAAAAAAAAQAAAHM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwcAAAAAAAAUBwAAAAAAAAAAAAAAADwvw"
				],
				[
					792,
					1,
					"paste",
					null,
					"AQAAADscAAAAAAAARRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADscAAAAAAAAOxwAAAAAAAAAAAAAAADwvw"
				],
				[
					797,
					1,
					"left_delete",
					null,
					"AQAAAGQcAAAAAAAAZBwAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUcAAAAAAAAZRwAAAAAAAAAAAAAAADwvw"
				],
				[
					808,
					1,
					"paste",
					null,
					"AgAAAIUcAAAAAAAAjxwAAAAAAAAAAAAAjxwAAAAAAACPHAAAAAAAABUAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUcAAAAAAAAmhwAAAAAAAAAAAAAAADwvw"
				],
				[
					811,
					1,
					"left_delete",
					null,
					"AQAAAK4cAAAAAAAArhwAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8cAAAAAAAArxwAAAAAAAAAAAAAAADwvw"
				],
				[
					817,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAMAcAAAAAAAAwRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAcAAAAAAAAwBwAAAAAAAAAAAAAAADwvw"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": " begin"
					},
					"BgAAAMEcAAAAAAAAwhwAAAAAAAAAAAAAwhwAAAAAAADDHAAAAAAAAAAAAADDHAAAAAAAAMQcAAAAAAAAAAAAAMQcAAAAAAAAxRwAAAAAAAAAAAAAxRwAAAAAAADGHAAAAAAAAAAAAADGHAAAAAAAAMccAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEcAAAAAAAAwRwAAAAAAAAAAAAAAADwvw"
				],
				[
					819,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMccAAAAAAAAyRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMccAAAAAAAAxxwAAAAAAAAAAAAAAADwvw"
				],
				[
					820,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAMgcAAAAAAAAyRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgcAAAAAAAAyBwAAAAAAAAAAAAAAADwvw"
				],
				[
					835,
					1,
					"left_delete",
					null,
					"AQAAAHsdAAAAAAAAex0AAAAAAAAHAAAAI2VuZGlmCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsdAAAAAAAAgh0AAAAAAAAAAAAAAADwvw"
				],
				[
					836,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsdAAAAAAAAex0AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_slice_iterator.cpp",
			"settings":
			{
				"buffer_size": 6447,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_slice_iterator.hpp",
			"settings":
			{
				"buffer_size": 777,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "range_view"
					},
					"CwAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABsAgAAAAAAABUAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2VsAgAAAAAAAG0CAAAAAAAAAAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsCAAAAAAAAgAIAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAH0CAAAAAAAAfQIAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4CAAAAAAAAfgIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_subdiv2d.cpp",
			"settings":
			{
				"buffer_size": 10862,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "js_line_segment_detector.cpp",
			"settings":
			{
				"buffer_size": 6877,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					null,
					"AQAAAPUBAAAAAAAADgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "cv::"
					},
					"BAAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAD4AQAAAAAAAPkBAAAAAAAAAAAAAPkBAAAAAAAA+gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "cv::"
					},
					"BAAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAECAAAAAAAAAAAAAAECAAAAAAAAAgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gEAAAAAAAD+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAABYCAAAAAAAAFgIAAAAAAAAYAAAAY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3Iq",
					"AQAAAAAAAAABAAAAFgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABkCAAAAAAAAGgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AgAAAJICAAAAAAAAswIAAAAAAAAAAAAAswIAAAAAAACzAgAAAAAAABcAAABjdjo6TGluZVNlZ21lbnREZXRlY3Rvcg",
					"AQAAAAAAAAABAAAAkgIAAAAAAACpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAL8BAAAAAAAAvwEAAAAAAAAhAAAALCBKU1JlY3REYXRhPGludD4qIHJlY3QgPSBudWxscHRy",
					"AQAAAAAAAAABAAAAvwEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAABjAAAACiAgaWYocmVjdCkKICAgIG5ldyhzKSBjdjo6TGluZVNlZ21lbnREZXRlY3RvcigqcmVjdCk7CiAgZWxzZQogICAgbmV3KHMpIGN2OjpMaW5lU2VnbWVudERldGVjdG9yKCk7",
					"AQAAAAAAAAABAAAAmgIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste",
					null,
					"AQAAAJwCAAAAAAAAuQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "*s"
					},
					"AgAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " ?="
					},
					"AwAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACgAgAAAAAAAAAAAACgAgAAAAAAAKECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAKACAAAAAAAAoAIAAAAAAAABAAAAPZ8CAAAAAAAAnwIAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAoQIAAAAAAAChAgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					2,
					"left_delete",
					null,
					"AgAAAKACAAAAAAAAoAIAAAAAAAABAAAAIJ8CAAAAAAAAnwIAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAoQIAAAAAAAChAgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL4CAAAAAAAAwAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMACAAAAAAAAwQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAIAAAAAAADAAgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					2,
					"left_delete",
					null,
					"AgAAAPwDAAAAAAAA/AMAAAAAAAAbAAAAIGFyZ2MgPiAwID8gJnJlY3QgOiBudWxscHRy+wMAAAAAAAD7AwAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAA/AMAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAGMDAAAAAAAAYwMAAAAAAABvAAAAICBKU1JlY3REYXRhPGludD4gcmVjdDsKCiAgaWYoYXJnYyA+IDApCiAgICBpZighanNfcmVjdF9yZWFkKGN0eCwgYXJndlswXSwgJnJlY3QpKQogICAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoK",
					"AQAAAAAAAAABAAAAYwMAAAAAAADSAwAAAAAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIcGAAAAAAAAiAYAAAAAAAAAAAAAiAYAAAAAAACIBgAAAAAAAL0SAAAgIC8vIGludCBMaW5lU2VnbWVudERldGVjdG9yOjplZGdlRHN0KGludCBlZGdlLCBQb2ludDJmICpkc3RwdCA9IDApIGNvbnN0CiAgICBjYXNlIDA6IHsKICAgICAgaW50MzJfdCBlZGdlOwogICAgICBKU1BvaW50RGF0YTxmbG9hdD4gZHN0cHQ7CiAgICAgIEpTX1RvSW50MzIoY3R4LCAmZWRnZSwgYXJndlswXSk7CiAgICAgIGlmKGFyZ2MgPiAxKQogICAgICAgIGpzX3BvaW50X3JlYWQoY3R4LCBhcmd2WzFdLCAmZHN0cHQpOwogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHMtPmVkZ2VEc3QoZWRnZSwgYXJnYyA+IDEgPyAmZHN0cHQgOiBudWxscHRyKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgLy8gaW50IExpbmVTZWdtZW50RGV0ZWN0b3I6OmVkZ2VPcmcoaW50IGVkZ2UsIFBvaW50MmYgKm9yZ3B0ID0gMCkgY29uc3QKICAgIGNhc2UgMTogewogICAgICBpbnQzMl90IGVkZ2U7CiAgICAgIEpTUG9pbnREYXRhPGZsb2F0PiBvcmdwdDsKICAgICAgaWYoYXJnYyA+IDEpCiAgICAgICAganNfcG9pbnRfcmVhZChjdHgsIGFyZ3ZbMV0sICZvcmdwdCk7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcy0+ZWRnZU9yZyhlZGdlLCBhcmdjID4gMSA/ICZvcmdwdCA6IG51bGxwdHIpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAvLyBpbnQgTGluZVNlZ21lbnREZXRlY3Rvcjo6ZmluZE5lYXJlc3QoUG9pbnQyZiBwdCwgUG9pbnQyZiAqbmVhcmVzdFB0ID0gMCkKICAgIGNhc2UgMjogewogICAgICBKU1BvaW50RGF0YTxmbG9hdD4gcHQsIG5lYXJlc3RQdDsKICAgICAganNfcG9pbnRfcmVhZChjdHgsIGFyZ3ZbMF0sICZwdCk7CiAgICAgIGlmKGFyZ2MgPiAxKQogICAgICAgIGpzX3BvaW50X3JlYWQoY3R4LCBhcmd2WzFdLCAmbmVhcmVzdFB0KTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBzLT5maW5kTmVhcmVzdChwdCwgYXJnYyA+IDEgPyAmbmVhcmVzdFB0IDogbnVsbHB0cikpOwogICAgICBicmVhazsKICAgIH0KICAgIC8vIGludCBMaW5lU2VnbWVudERldGVjdG9yOjpnZXRFZGdlKGludCBlZGdlLCBpbnQgbmV4dEVkZ2VUeXBlKSBjb25zdAogICAgY2FzZSAzOiB7CiAgICAgIGludDMyX3QgZWRnZSwgbmV4dEVkZ2VUeXBlOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmVkZ2UsIGFyZ3ZbMF0pOwogICAgICBKU19Ub0ludDMyKGN0eCwgJm5leHRFZGdlVHlwZSwgYXJndlsxXSk7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcy0+Z2V0RWRnZShlZGdlLCBuZXh0RWRnZVR5cGUpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAvLyB2b2lkIExpbmVTZWdtZW50RGV0ZWN0b3I6OmdldEVkZ2VMaXN0KHN0ZDo6dmVjdG9yPFZlYzRmPiAmZWRnZUxpc3QpIGNvbnN0CiAgICBjYXNlIDQ6IHsKICAgICAgc3RkOjp2ZWN0b3I8Y3Y6OlZlYzRmPiBlZGdlTGlzdDsKICAgICAganNfYXJyYXlfdG8oY3R4LCBhcmd2WzBdLCBlZGdlTGlzdCk7CiAgICAgIHMtPmdldEVkZ2VMaXN0KGVkZ2VMaXN0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAvLyB2b2lkIExpbmVTZWdtZW50RGV0ZWN0b3I6OmdldExlYWRpbmdFZGdlTGlzdChzdGQ6OnZlY3RvcjxpbnQ+ICZsZWFkaW5nRWRnZUxpc3QpIGNvbnN0CiAgICBjYXNlIDU6IHsKICAgICAgc3RkOjp2ZWN0b3I8aW50PiBsZWFkaW5nRWRnZUxpc3Q7CiAgICAgIGpzX2FycmF5X3RvKGN0eCwgYXJndlswXSwgbGVhZGluZ0VkZ2VMaXN0KTsKICAgICAgcy0+Z2V0TGVhZGluZ0VkZ2VMaXN0KGxlYWRpbmdFZGdlTGlzdCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgLy8gdm9pZCBMaW5lU2VnbWVudERldGVjdG9yOjpnZXRUcmlhbmdsZUxpc3Qoc3RkOjp2ZWN0b3I8VmVjNmY+ICZ0cmlhbmdsZUxpc3QpIGNvbnN0CiAgICBjYXNlIDY6IHsKICAgICAgc3RkOjp2ZWN0b3I8Y3Y6OlZlYzZmPiB0cmlhbmdsZUxpc3Q7CiAgICAgIGpzX2FycmF5X3RvKGN0eCwgYXJndlswXSwgdHJpYW5nbGVMaXN0KTsKICAgICAgcy0+Z2V0VHJpYW5nbGVMaXN0KHRyaWFuZ2xlTGlzdCk7CiAgICAgIGJyZWFrOwogICAgICBicmVhazsKICAgIH0KICAgIC8vIFBvaW50MmYgTGluZVNlZ21lbnREZXRlY3Rvcjo6Z2V0VmVydGV4KGludCB2ZXJ0ZXgsIGludCAqZmlyc3RFZGdlID0gMCkgY29uc3QKICAgIGNhc2UgNzogewogICAgICBpbnQzMl90IHZlcnRleCwgZmlyc3RFZGdlID0gMDsKICAgICAgSlNfVG9JbnQzMihjdHgsICZ2ZXJ0ZXgsIGFyZ3ZbMF0pOwoKICAgICAgcmV0ID0ganNfcG9pbnRfd3JhcChjdHgsIHMtPmdldFZlcnRleCh2ZXJ0ZXgsICZmaXJzdEVkZ2UpKTsKCiAgICAgIGlmKGFyZ2MgPiAxKSB7CiAgICAgICAgSlNWYWx1ZSB2YWwgPSBKU19OZXdJbnQzMihjdHgsIGZpcnN0RWRnZSk7CiAgICAgICAganNfcmVmKGN0eCwgImZpcnN0RWRnZSIsIGFyZ3ZbMV0sIHZhbCk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsKTsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIC8vIHZvaWQgTGluZVNlZ21lbnREZXRlY3Rvcjo6Z2V0Vm9yb25vaUZhY2V0TGlzdChjb25zdCBzdGQ6OnZlY3RvcjxpbnQ+ICZpZHgsCiAgICAvLyBzdGQ6OnZlY3RvcjxzdGQ6OnZlY3RvcjxQb2ludDJmPj4gJmZhY2V0TGlzdCwgc3RkOjp2ZWN0b3I8UG9pbnQyZj4gJmZhY2V0Q2VudGVycykKICAgIGNhc2UgODogewogICAgICBzdGQ6OnZlY3RvcjxpbnQ+IGlkeDsKICAgICAgSlNDb250b3Vyc0RhdGE8ZmxvYXQ+IGZhY2V0TGlzdDsKICAgICAgc3RkOjp2ZWN0b3I8SlNQb2ludERhdGE8ZmxvYXQ+PiBmYWNldENlbnRlcnM7CiAgICAgIGpzX2FycmF5X3RvKGN0eCwgYXJndlswXSwgaWR4KTsKICAgICAganNfYXJyYXlfdG8oY3R4LCBhcmd2WzFdLCBmYWNldExpc3QpOwogICAgICBqc19hcnJheV90byhjdHgsIGFyZ3ZbMl0sIGZhY2V0Q2VudGVycyk7CiAgICAgIHMtPmdldFZvcm9ub2lGYWNldExpc3QoaWR4LCBmYWNldExpc3QsIGZhY2V0Q2VudGVycyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgLy8gdm9pZCBMaW5lU2VnbWVudERldGVjdG9yOjppbml0RGVsYXVuYXkoUmVjdCByZWN0KQogICAgY2FzZSA5OiB7CiAgICAgIEpTUmVjdERhdGE8aW50PiByZWN0OwogICAgICBqc19yZWN0X3JlYWQoY3R4LCBhcmd2WzBdLCAmcmVjdCk7CiAgICAgIHMtPmluaXREZWxhdW5heShyZWN0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAgIC8vIGludCBMaW5lU2VnbWVudERldGVjdG9yOjppbnNlcnQoUG9pbnQyZiBwdCkKICAgICAgLy8gdm9pZCBMaW5lU2VnbWVudERldGVjdG9yOjppbnNlcnQoY29uc3Qgc3RkOjp2ZWN0b3I8UG9pbnQyZj4gJnB0dmVjKQogICAgY2FzZSAxMDogewogICAgICBKU1BvaW50RGF0YTxmbG9hdD4gcHQ7CiAgICAgIGlmKCFqc19wb2ludF9yZWFkKGN0eCwgYXJndlswXSwgJnB0KSkgewogICAgICAgIHN0ZDo6dmVjdG9yPEpTUG9pbnREYXRhPGZsb2F0Pj4gcHR2ZWM7CiAgICAgICAganNfYXJyYXlfdG8oY3R4LCBhcmd2WzBdLCBwdHZlYyk7CiAgICAgICAgcy0+aW5zZXJ0KHB0dmVjKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzLT5pbnNlcnQocHQpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQoKICAgIC8vIGludCBMaW5lU2VnbWVudERldGVjdG9yOjpsb2NhdGUoUG9pbnQyZiBwdCwgaW50ICZlZGdlLCBpbnQgJnZlcnRleCkKICAgIGNhc2UgMTE6IHsKICAgICAgSlNQb2ludERhdGE8ZmxvYXQ+IHB0OwogICAgICBqc19wb2ludF9yZWFkKGN0eCwgYXJndlswXSwgJnB0KTsKICAgICAgaW50MzJfdCBlZGdlID0gMCwgdmVydGV4ID0gMDsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBzLT5sb2NhdGUocHQsIGVkZ2UsIHZlcnRleCkpOwogICAgICBpZihhcmdjID4gMSkgewogICAgICAgIEpTVmFsdWUgdmFsID0gSlNfTmV3SW50MzIoY3R4LCBlZGdlKTsKICAgICAgICBqc19yZWYoY3R4LCAiZWRnZSIsIGFyZ3ZbMV0sIHZhbCk7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgdmFsKTsKICAgICAgfQogICAgICBpZihhcmdjID4gMikgewogICAgICAgIEpTVmFsdWUgdmFsID0gSlNfTmV3SW50MzIoY3R4LCB2ZXJ0ZXgpOwogICAgICAgIGpzX3JlZihjdHgsICJ2ZXJ0ZXgiLCBhcmd2WzFdLCB2YWwpOwogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIHZhbCk7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICAvLyBpbnQgTGluZVNlZ21lbnREZXRlY3Rvcjo6bmV4dEVkZ2UoaW50IGVkZ2UpIGNvbnN0CiAgICBjYXNlIDEyOiB7CiAgICAgIGludDMyX3QgZWRnZTsKICAgICAgSlNfVG9JbnQzMihjdHgsICZlZGdlLCBhcmd2WzBdKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBzLT5uZXh0RWRnZShlZGdlKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgLy8gaW50IExpbmVTZWdtZW50RGV0ZWN0b3I6OnJvdGF0ZUVkZ2UoaW50IGVkZ2UsIGludCByb3RhdGUpIGNvbnN0CiAgICBjYXNlIDEzOiB7CiAgICAgIGludDMyX3QgZWRnZSwgcm90YXRlOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmVkZ2UsIGFyZ3ZbMF0pOwogICAgICBKU19Ub0ludDMyKGN0eCwgJnJvdGF0ZSwgYXJndlsxXSk7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgcy0+cm90YXRlRWRnZShlZGdlLCByb3RhdGUpKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICAvLyBpbnQgTGluZVNlZ21lbnREZXRlY3Rvcjo6c3ltRWRnZShpbnQgZWRnZSkgY29uc3QKICAgIGNhc2UgMTQ6IHsKICAgICAgaW50MzJfdCBlZGdlOwogICAgICBKU19Ub0ludDMyKGN0eCwgJmVkZ2UsIGFyZ3ZbMF0pOwogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHMtPnN5bUVkZ2UoZWRnZSkpOwogICAgICBicmVhazsKICAgIH0",
					"AQAAAAAAAAABAAAAhwYAAAAAAABEGQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHMHAAAAAAAAdAcAAAAAAAAAAAAAdAcAAAAAAAB0BwAAAAAAAIoHAABKU19DRlVOQ19NQUdJQ19ERUYoImVkZ2VEc3QiLCAxLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCAwKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoImVkZ2VPcmciLCAxLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCAxKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoImZpbmROZWFyZXN0IiwgMSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZCwgMiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRFZGdlIiwgMiwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZCwgMyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRFZGdlTGlzdCIsIDEsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QsIDQpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0TGVhZGluZ0VkZ2VMaXN0IiwgMSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZCwgNSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRUcmlhbmdsZUxpc3QiLCAxLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCA2KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldFZlcnRleCIsIDEsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QsIDcpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0Vm9yb25vaUZhY2V0TGlzdCIsIDMsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QsIDgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5pdERlbGF1bmF5IiwgMSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZCwgOSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJpbnNlcnQiLCAxLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCAxMCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJsb2NhdGUiLCAzLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCAxMSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJuZXh0RWRnZSIsIDEsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QsIDEyKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJvdGF0ZUVkZ2UiLCAyLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kLCAxMyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzeW1FZGdlIiwgMSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZCwgMTQpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAcwcAAAAAAAD9DgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAAG4IAAAAAAAAbwgAAAAAAAAAAAAAbwgAAAAAAABwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbggAAAAAAABuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAG8IAAAAAAAAbwgAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAcAgAAAAAAABwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgFAAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfcmVjdC5ocHAiCiNpbmNsdWRlICJqc19wb2ludC5ocHAiCiNpbmNsdWRlICJqc19hbGxvYy5ocHAiCiNpbmNsdWRlICJqc19hcnJheS5ocHAiCgojaW5jbHVkZSA8b3BlbmN2Mi9pbWdwcm9jLmhwcD4KCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCmV4dGVybiAiQyIgewpKU1ZhbHVlIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byA9IEpTX1VOREVGSU5FRCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gSlNfVU5ERUZJTkVEOwpKU0NsYXNzSUQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID0gMDsKfQoKSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSByZXQ7CiAgCmN2OjpQdHI8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I+KiBzOwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpOwogIHMgPSBqc19hbGxvY2F0ZTxjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPiA+KGN0eCk7CgoqcyA9IGN2OjpjcmVhdGVMaW5lU2VnbWVudERldGVjdG9yKCk7CgogIEpTX1NldE9wYXF1ZShyZXQsIHMpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICByZXR1cm4ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldyhjdHgpOwp9Cgpjdjo6TGluZVNlZ21lbnREZXRlY3RvcioKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqPihKU19HZXRPcGFxdWUyKGN0eCwgdmFsLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpKTsKfQoKdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqIHMgPSBzdGF0aWNfY2FzdDxjdjo6TGluZVNlZ21lbnREZXRlY3Rvcio+KEpTX0dldE9wYXF1ZSh2YWwsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCkpOwoKICBzLT5+TGluZVNlZ21lbnREZXRlY3RvcigpOwogIGpzX2RlYWxsb2NhdGUocnQsIHMpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YsIGludCBtYWdpYykgewogIGN2OjpMaW5lU2VnbWVudERldGVjdG9yKiBzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZigocyA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKGN0eCwgdGhpc192YWwpKSA9PSBudWxscHRyKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgIAogIH0KICByZXR1cm4gcmV0Owp9CgpKU0NsYXNzRGVmIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkxpbmVTZWdtZW50RGV0ZWN0b3IiLAogICAgLmZpbmFsaXplciA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3NbXSA9IHsgICAgICAgICAgICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTGluZVNlZ21lbnREZXRlY3RvciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX1BST1BfQ09ORklHVVJBQkxFKSx9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jc1tdID0gewogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlBUTE9DX0VSUk9SIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6OlBUTE9DX0VSUk9SLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQVExPQ19PVVRTSURFX1JFQ1QiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFRMT0NfT1VUU0lERV9SRUNULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQVExPQ19JTlNJREUiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFRMT0NfSU5TSURFLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQVExPQ19WRVJURVgiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFRMT0NfVkVSVEVYLCAwKSwKCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTkVYVF9BUk9VTkRfT1JHIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6Ok5FWFRfQVJPVU5EX09SRywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTkVYVF9BUk9VTkRfRFNUIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6Ok5FWFRfQVJPVU5EX0RTVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiUFJFVl9BUk9VTkRfT1JHIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6OlBSRVZfQVJPVU5EX09SRywgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiUFJFVl9BUk9VTkRfRFNUIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6OlBSRVZfQVJPVU5EX0RTVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiTkVYVF9BUk9VTkRfTEVGVCIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpORVhUX0FST1VORF9MRUZULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJORVhUX0FST1VORF9SSUdIVCIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpORVhUX0FST1VORF9SSUdIVCwgMCksCiAgICBKU19QUk9QX0lOVDMyX0RFRigiUFJFVl9BUk9VTkRfTEVGVCIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpQUkVWX0FST1VORF9MRUZULCAwKX07CgpleHRlcm4gIkMiIGludApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID09IDApIHsKICAgIC8qIGNyZWF0ZSB0aGUgTGluZVNlZ21lbnREZXRlY3RvciBjbGFzcyAqLwogICAgSlNfTmV3Q2xhc3NJRCgmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCAmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKCiAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3MsIGNvdW50b2YoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwoKICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvciwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcywgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3Jfc3RhdGljX2Z1bmNzLCBjb3VudG9mKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3MpKTsKICB9CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7CgogIHJldHVybiAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lU2VnbWVudERldGVjdG9yIik7Cn0KCnZvaWQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcykpCiAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7Cn0KCiNpZiBkZWZpbmVkKEpTX0xJTkVfU0VHTUVOVF9ERVRFQ1RPUl9NT0RVTEUpCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUgVklTSUJMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2xpbmVfc2VnbWVudF9kZXRlY3RvcgojZW5kaWYKCmV4dGVybiAiQyIgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KGN0eCwgbSk7CiAgcmV0dXJuIG07Cn0AAAAAAAAAAH4UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwgAAAAAAABvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMwLAAAAAAAAzQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAsAAAAAAADMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"left_delete",
					null,
					"AQAAABUIAAAAAAAAFQgAAAAAAAC3AwAACiAgICBKU19QUk9QX0lOVDMyX0RFRigiUFRMT0NfRVJST1IiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFRMT0NfRVJST1IsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlBUTE9DX09VVFNJREVfUkVDVCIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpQVExPQ19PVVRTSURFX1JFQ1QsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlBUTE9DX0lOU0lERSIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpQVExPQ19JTlNJREUsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIlBUTE9DX1ZFUlRFWCIsIGN2OjpMaW5lU2VnbWVudERldGVjdG9yOjpQVExPQ19WRVJURVgsIDApLAoKICAgIEpTX1BST1BfSU5UMzJfREVGKCJORVhUX0FST1VORF9PUkciLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6TkVYVF9BUk9VTkRfT1JHLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJORVhUX0FST1VORF9EU1QiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6TkVYVF9BUk9VTkRfRFNULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQUkVWX0FST1VORF9PUkciLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFJFVl9BUk9VTkRfT1JHLCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQUkVWX0FST1VORF9EU1QiLCBjdjo6TGluZVNlZ21lbnREZXRlY3Rvcjo6UFJFVl9BUk9VTkRfRFNULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJORVhUX0FST1VORF9MRUZUIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6Ok5FWFRfQVJPVU5EX0xFRlQsIDApLAogICAgSlNfUFJPUF9JTlQzMl9ERUYoIk5FWFRfQVJPVU5EX1JJR0hUIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6Ok5FWFRfQVJPVU5EX1JJR0hULCAwKSwKICAgIEpTX1BST1BfSU5UMzJfREVGKCJQUkVWX0FST1VORF9MRUZUIiwgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I6OlBSRVZfQVJPVU5EX0xFRlQsIDAp",
					"AQAAAAAAAAABAAAAzAsAAAAAAAAVCAAAAAAAAAAAAAAAwIVA"
				],
				[
					129,
					1,
					"right_delete",
					null,
					"AQAAABUIAAAAAAAAFQgAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAaAAAAAAAAAC8AAAAKI2luY2x1ZGUgImpzX3JlY3QuaHBwIgojaW5jbHVkZSAianNfcG9pbnQuaHBwIg",
					"AQAAAAAAAAABAAAASAAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzAAAAAAAAABgAAAAKI2luY2x1ZGUgImpzX2FycmF5LmhwcCI",
					"AQAAAAAAAAABAAAASgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACCEAAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIiAKI2luY2x1ZGUgImpzX2FsbG9jLmhwcCIgCgojaW5jbHVkZSA8b3BlbmN2Mi9pbWdwcm9jLmhwcD4KCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCmV4dGVybiAiQyIgewpKU1ZhbHVlIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byA9IEpTX1VOREVGSU5FRCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gSlNfVU5ERUZJTkVEOwpKU0NsYXNzSUQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID0gMDsKfQoKSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KEpTQ29udGV4dCogY3R4KSB7CiAgSlNWYWx1ZSByZXQ7CgogIGN2OjpQdHI8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I+KiBzOwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpOwogIHMgPSBqc19hbGxvY2F0ZTxjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPj4oY3R4KTsKCiAgKnMgPSBjdjo6Y3JlYXRlTGluZVNlZ21lbnREZXRlY3RvcigpOwoKICBKU19TZXRPcGFxdWUocmV0LCBzKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgcmV0dXJuIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9uZXcoY3R4KTsKfQoKY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PGN2OjpMaW5lU2VnbWVudERldGVjdG9yKj4oSlNfR2V0T3BhcXVlMihjdHgsIHZhbCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKSk7Cn0KCnZvaWQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIGN2OjpMaW5lU2VnbWVudERldGVjdG9yKiBzID0gc3RhdGljX2Nhc3Q8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqPihKU19HZXRPcGFxdWUodmFsLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpKTsKCiAgcy0+fkxpbmVTZWdtZW50RGV0ZWN0b3IoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMpIHsKICBjdjo6TGluZVNlZ21lbnREZXRlY3RvciogczsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoKHMgPSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YShjdHgsIHRoaXNfdmFsKSkgPT0gbnVsbHB0cikKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpKU0NsYXNzRGVmIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkxpbmVTZWdtZW50RGV0ZWN0b3IiLAogICAgLmZpbmFsaXplciA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3NbXSA9IHt9OwoKZXh0ZXJuICJDIiBpbnQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIExpbmVTZWdtZW50RGV0ZWN0b3IgY2xhc3MgKi8KICAgIEpTX05ld0NsYXNzSUQoJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCwgJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7CgogICAgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudG9mKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvKTsKCiAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MgPQogICAgICAgIEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvciwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcywgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudG9mKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3MpKTsKICB9CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7CgogIHJldHVybiAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lU2VnbWVudERldGVjdG9yIik7Cn0KCnZvaWQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcykpCiAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7Cn0KCiNpZiBkZWZpbmVkKEpTX0xJTkVfU0VHTUVOVF9ERVRFQ1RPUl9NT0RVTEUpCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUgVklTSUJMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2xpbmVfc2VnbWVudF9kZXRlY3RvcgojZW5kaWYKCmV4dGVybiAiQyIgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KGN0eCwgbSk7CiAgcmV0dXJuIG07Cn0AAAAAAAAAAIAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHgBAAAAAAAAeQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"paste",
					null,
					"AQAAAHkBAAAAAAAAOQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"paste",
					null,
					"AQAAADoDAAAAAAAAgQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIEQAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgoKI2luY2x1ZGUgPG9wZW5jdjIvaW1ncHJvYy5ocHA+CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8gPSBKU19VTkRFRklORUQsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IEpTX1VOREVGSU5FRDsKSlNDbGFzc0lEIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCA9IDA7Cn0KCkpTVmFsdWUKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldyhKU0NvbnRleHQqIGN0eCwgIGludCAgIHJlZmluZSA9IExTRF9SRUZJTkVfU1RELApkb3VibGUgIHNjYWxlID0gMC44LApkb3VibGUgIHNpZ21hX3NjYWxlID0gMC42LApkb3VibGUgIHF1YW50ID0gMi4wLApkb3VibGUgIGFuZ190aCA9IDIyLjUsCmRvdWJsZSAgbG9nX2VwcyA9IDAsCmRvdWJsZSAgZGVuc2l0eV90aCA9IDAuNywKaW50ICAgbl9iaW5zID0gMTAyNCApIHsKICBKU1ZhbHVlIHJldDsKCiAgY3Y6OlB0cjxjdjo6TGluZVNlZ21lbnREZXRlY3Rvcj4qIHM7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8sIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCk7CiAgcyA9IGpzX2FsbG9jYXRlPGN2OjpQdHI8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I+PihjdHgpOwoKICAqcyA9IGN2OjpjcmVhdGVMaW5lU2VnbWVudERldGVjdG9yKHJlZmluZSwgc2NhbGUsIHNpZ21hX3NjYWxlLCBxdWFudCwgYW5nX3RoLCBsb2dfZXBzLCBkZW5zaXR5X3RoLCBuX2JpbnMKKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgcyk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIHJldHVybiBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KGN0eCk7Cn0KCmN2OjpMaW5lU2VnbWVudERldGVjdG9yKgpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHZhbCkgewogIHJldHVybiBzdGF0aWNfY2FzdDxjdjo6TGluZVNlZ21lbnREZXRlY3Rvcio+KEpTX0dldE9wYXF1ZTIoY3R4LCB2YWwsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCkpOwp9Cgp2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBjdjo6TGluZVNlZ21lbnREZXRlY3RvciogcyA9IHN0YXRpY19jYXN0PGN2OjpMaW5lU2VnbWVudERldGVjdG9yKj4oSlNfR2V0T3BhcXVlKHZhbCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKSk7CgogIHMtPn5MaW5lU2VnbWVudERldGVjdG9yKCk7CiAganNfZGVhbGxvY2F0ZShydCwgcyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqIHM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKChzID0ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEoY3R4LCB0aGlzX3ZhbCkpID09IG51bGxwdHIpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHt9CiAgcmV0dXJuIHJldDsKfQoKSlNDbGFzc0RlZiBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJMaW5lU2VnbWVudERldGVjdG9yIiwKICAgIC5maW5hbGl6ZXIgPSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvX2Z1bmNzW10gPSB7CiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCBKU19QUk9QX0NPTkZJR1VSQUJMRSksCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3Jfc3RhdGljX2Z1bmNzW10gPSB7fTsKCmV4dGVybiAiQyIgaW50CmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewoKICBpZihqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQgPT0gMCkgewogICAgLyogY3JlYXRlIHRoZSBMaW5lU2VnbWVudERldGVjdG9yIGNsYXNzICovCiAgICBKU19OZXdDbGFzc0lEKCZqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQsICZqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MpOwoKICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvX2Z1bmNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRvZihqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byk7CgogICAgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0KICAgICAgICBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2N0b3IsICJMaW5lU2VnbWVudERldGVjdG9yIiwgMiwgSlNfQ0ZVTkNfY29uc3RydWN0b3IsIDApOwogICAgLyogc2V0IHByb3RvLmNvbnN0cnVjdG9yIGFuZCBjdG9yLnByb3RvdHlwZSAqLwogICAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3Jfc3RhdGljX2Z1bmNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRvZihqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3Jfc3RhdGljX2Z1bmNzKSk7CiAgfQoKICBpZihtKQogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MpOwoKICByZXR1cm4gMDsKfQoKZXh0ZXJuICJDIiBWSVNJQkxFIHZvaWQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTGluZVNlZ21lbnREZXRlY3RvciIpOwp9Cgp2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MpKQogICAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoY3R4LCAwKTsKCiAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBwYXJlbnQsIG5hbWUgPyBuYW1lIDogIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MpOwp9CgojaWYgZGVmaW5lZChKU19MSU5FX1NFR01FTlRfREVURUNUT1JfTU9EVUxFKQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIFZJU0lCTEUganNfaW5pdF9tb2R1bGUKI2Vsc2UKI2RlZmluZSBKU19JTklUX01PRFVMRSBqc19pbml0X21vZHVsZV9saW5lX3NlZ21lbnRfZGV0ZWN0b3IKI2VuZGlmCgpleHRlcm4gIkMiIEpTTW9kdWxlRGVmKgpKU19JTklUX01PRFVMRShKU0NvbnRleHQqIGN0eCwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpIHsKICBKU01vZHVsZURlZiogbTsKICBtID0gSlNfTmV3Q01vZHVsZShjdHgsIG1vZHVsZV9uYW1lLCAmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2V4cG9ydChjdHgsIG0pOwogIHJldHVybiBtOwp9AAAAAAAAAABjEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAAKQBAAAAAAAApQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"left_delete",
					null,
					"AQAAAKQBAAAAAAAApAEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAApQEAAAAAAAClAQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "cv::"
					},
					"BAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"paste",
					null,
					"AQAAAHkBAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AgAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACHAQAAAAAAAAoAAABuZXdfdGFyZ2V0",
					"AQAAAAAAAAABAAAAhgEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAIYBAAAAAAAAhgEAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAhwEAAAAAAACHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "proto,"
					},
					"BgAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAEAAAAAAACMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEEFAAAAAAAAQgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQUAAAAAAABBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"paste",
					null,
					"AQAAAEIFAAAAAAAAXQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXEgAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgoKI2luY2x1ZGUgPG9wZW5jdjIvaW1ncHJvYy5ocHA+CgpleHRlcm4gIkMiIFZJU0lCTEUgaW50IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKik7CgpleHRlcm4gIkMiIHsKSlNWYWx1ZSBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8gPSBKU19VTkRFRklORUQsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IEpTX1VOREVGSU5FRDsKSlNDbGFzc0lEIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCA9IDA7Cn0KCkpTVmFsdWUKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldyhKU0NvbnRleHQqIGN0eCxKU1ZhbHVlQ29uc3QgcHJvdG8sIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludCByZWZpbmUgPSBjdjo6TFNEX1JFRklORV9TVEQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91YmxlIHNjYWxlID0gMC44LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBzaWdtYV9zY2FsZSA9IDAuNiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3VibGUgcXVhbnQgPSAyLjAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91YmxlIGFuZ190aCA9IDIyLjUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91YmxlIGxvZ19lcHMgPSAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBkZW5zaXR5X3RoID0gMC43LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludCBuX2JpbnMgPSAxMDI0KSB7CiAgSlNWYWx1ZSByZXQ7CgogIGN2OjpQdHI8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I+KiBzOwoKICByZXQgPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpOwogIHMgPSBqc19hbGxvY2F0ZTxjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPj4oY3R4KTsKCiAgKnMgPSBjdjo6Y3JlYXRlTGluZVNlZ21lbnREZXRlY3RvcihyZWZpbmUsIHNjYWxlLCBzaWdtYV9zY2FsZSwgcXVhbnQsIGFuZ190aCwgbG9nX2VwcywgZGVuc2l0eV90aCwgbl9iaW5zKTsKCiAgSlNfU2V0T3BhcXVlKHJldCwgcyk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIHJldHVybiBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KGN0eCxsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwp9Cgpjdjo6TGluZVNlZ21lbnREZXRlY3RvcioKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWwpIHsKICByZXR1cm4gc3RhdGljX2Nhc3Q8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqPihKU19HZXRPcGFxdWUyKGN0eCwgdmFsLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpKTsKfQoKdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqIHMgPSBzdGF0aWNfY2FzdDxjdjo6TGluZVNlZ21lbnREZXRlY3Rvcio+KEpTX0dldE9wYXF1ZSh2YWwsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCkpOwoKICBzLT5+TGluZVNlZ21lbnREZXRlY3RvcigpOwogIGpzX2RlYWxsb2NhdGUocnQsIHMpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YsIGludCBtYWdpYykgewogIGN2OjpMaW5lU2VnbWVudERldGVjdG9yKiBzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZigocyA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKGN0eCwgdGhpc192YWwpKSA9PSBudWxscHRyKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7fQogIHJldHVybiByZXQ7Cn0KCkpTQ2xhc3NEZWYganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiTGluZVNlZ21lbnREZXRlY3RvciIsCiAgICAuZmluYWxpemVyID0ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jc1tdID0gewogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJMaW5lU2VnbWVudERldGVjdG9yIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jc1tdID0ge307CgpleHRlcm4gIkMiIGludApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID09IDApIHsKICAgIC8qIGNyZWF0ZSB0aGUgTGluZVNlZ21lbnREZXRlY3RvciBjbGFzcyAqLwogICAgSlNfTmV3Q2xhc3NJRCgmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCAmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKCiAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90bywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50b2YoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwoKICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9CiAgICAgICAgSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIDIsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIC8qIHNldCBwcm90by5jb25zdHJ1Y3RvciBhbmQgY3Rvci5wcm90b3R5cGUgKi8KICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50b2YoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jcykpOwogIH0KCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lU2VnbWVudERldGVjdG9yIiwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiKTsKfQoKdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgcGFyZW50LCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgaWYoSlNfSXNVbmRlZmluZWQobGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKSkKICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KGN0eCwgMCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcGFyZW50LCBuYW1lID8gbmFtZSA6ICJMaW5lU2VnbWVudERldGVjdG9yIiwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKfQoKI2lmIGRlZmluZWQoSlNfTElORV9TRUdNRU5UX0RFVEVDVE9SX01PRFVMRSkKI2RlZmluZSBKU19JTklUX01PRFVMRSBWSVNJQkxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfbGluZV9zZWdtZW50X2RldGVjdG9yCiNlbmRpZgoKZXh0ZXJuICJDIiBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQoY3R4LCBtKTsKICByZXR1cm4gbTsKfQAAAAAAAAAAtRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAADQFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA3BQAAAAAAAAAAAAA3BQAAAAAAADgFAAAAAAAAAAAAADgFAAAAAAAAOgUAAAAAAAAAAAAANQUAAAAAAAA1BQAAAAAAAAIAAAAgIDgFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA7BQAAAAAAAAAAAAA2BQAAAAAAADYFAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"paste",
					null,
					"AQAAADYFAAAAAAAAuAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgUAAAAAAAA2BQAAAAAAAAAAAAAAADBA"
				],
				[
					238,
					1,
					"paste",
					null,
					"AgAAAOcFAAAAAAAA7AUAAAAAAAAAAAAA7AUAAAAAAADsBQAAAAAAABsAAABsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8",
					"AQAAAAAAAAABAAAA5wUAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "proto"
					},
					"BwAAAKoDAAAAAAAAqwMAAAAAAAAAAAAAqwMAAAAAAACrAwAAAAAAABsAAABsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG+fBQAAAAAAAJ8FAAAAAAAAAgAAACAgqwMAAAAAAACsAwAAAAAAAAAAAACsAwAAAAAAAK0DAAAAAAAAAAAAAK0DAAAAAAAArgMAAAAAAAAAAAAArgMAAAAAAACvAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgMAAAAAAADFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "\ni8n"
					},
					"BQAAADAFAAAAAAAAMQUAAAAAAAAAAAAAMQUAAAAAAAAzBQAAAAAAAAAAAAAzBQAAAAAAADQFAAAAAAAAAAAAADQFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAUAAAAAAAAwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					2,
					"left_delete",
					null,
					"AgAAADUFAAAAAAAANQUAAAAAAAABAAAAbjQFAAAAAAAANAUAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAANgUAAAAAAAA2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "nt32_t"
					},
					"BgAAADQFAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAA2BQAAAAAAAAAAAAA2BQAAAAAAADcFAAAAAAAAAAAAADcFAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": " refine;"
					},
					"CAAAADoFAAAAAAAAOwUAAAAAAAAAAAAAOwUAAAAAAAA8BQAAAAAAAAAAAAA8BQAAAAAAAD0FAAAAAAAAAAAAAD0FAAAAAAAAPgUAAAAAAAAAAAAAPgUAAAAAAAA/BQAAAAAAAAAAAAA/BQAAAAAAAEAFAAAAAAAAAAAAAEAFAAAAAAAAQQUAAAAAAAAAAAAAQQUAAAAAAABCBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"left_delete",
					null,
					"AQAAAEEFAAAAAAAAQQUAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "=cv::LSD_"
					},
					"CQAAAEEFAAAAAAAAQgUAAAAAAAAAAAAAQgUAAAAAAABDBQAAAAAAAAAAAABDBQAAAAAAAEQFAAAAAAAAAAAAAEQFAAAAAAAARQUAAAAAAAAAAAAARQUAAAAAAABGBQAAAAAAAAAAAABGBQAAAAAAAEcFAAAAAAAAAAAAAEcFAAAAAAAASAUAAAAAAAAAAAAASAUAAAAAAABJBQAAAAAAAAAAAABJBQAAAAAAAEoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQUAAAAAAABBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert_completion",
					{
						"completion": "LSD_REFINE_STD",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "LSD_REFINE_STD"
					},
					"AgAAAEYFAAAAAAAARgUAAAAAAAAEAAAATFNEX0YFAAAAAAAAVAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgUAAAAAAABKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": ";M"
					},
					"AgAAAFQFAAAAAAAAVQUAAAAAAAAAAAAAVQUAAAAAAABWBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAUAAAAAAABUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAFUFAAAAAAAAVQUAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAVgUAAAAAAABWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "\ns"
					},
					"AwAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAAFgFAAAAAAAAWAUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAWQUAAAAAAABZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "double"
					},
					"BgAAAFgFAAAAAAAAWQUAAAAAAAAAAAAAWQUAAAAAAABaBQAAAAAAAAAAAABaBQAAAAAAAFsFAAAAAAAAAAAAAFsFAAAAAAAAXAUAAAAAAAAAAAAAXAUAAAAAAABdBQAAAAAAAAAAAABdBQAAAAAAAF4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAUAAAAAAABYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " scale=0.8,"
					},
					"CwAAAF4FAAAAAAAAXwUAAAAAAAAAAAAAXwUAAAAAAABgBQAAAAAAAAAAAABgBQAAAAAAAGEFAAAAAAAAAAAAAGEFAAAAAAAAYgUAAAAAAAAAAAAAYgUAAAAAAABjBQAAAAAAAAAAAABjBQAAAAAAAGQFAAAAAAAAAAAAAGQFAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABmBQAAAAAAAAAAAABmBQAAAAAAAGcFAAAAAAAAAAAAAGcFAAAAAAAAaAUAAAAAAAAAAAAAaAUAAAAAAABpBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "sigma_scale=0."
					},
					"DgAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAAbQUAAAAAAABuBQAAAAAAAAAAAABuBQAAAAAAAG8FAAAAAAAAAAAAAG8FAAAAAAAAcAUAAAAAAAAAAAAAcAUAAAAAAABxBQAAAAAAAAAAAABxBQAAAAAAAHIFAAAAAAAAAAAAAHIFAAAAAAAAcwUAAAAAAAAAAAAAcwUAAAAAAAB0BQAAAAAAAAAAAAB0BQAAAAAAAHUFAAAAAAAAAAAAAHUFAAAAAAAAdgUAAAAAAAAAAAAAdgUAAAAAAAB3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQUAAAAAAABpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "6,quamnt"
					},
					"CAAAAHcFAAAAAAAAeAUAAAAAAAAAAAAAeAUAAAAAAAB5BQAAAAAAAAAAAAB5BQAAAAAAAHoFAAAAAAAAAAAAAHoFAAAAAAAAewUAAAAAAAAAAAAAewUAAAAAAAB8BQAAAAAAAAAAAAB8BQAAAAAAAH0FAAAAAAAAAAAAAH0FAAAAAAAAfgUAAAAAAAAAAAAAfgUAAAAAAAB/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwUAAAAAAAB3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					3,
					"left_delete",
					null,
					"AwAAAH4FAAAAAAAAfgUAAAAAAAABAAAAdH0FAAAAAAAAfQUAAAAAAAABAAAAbnwFAAAAAAAAfAUAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "nt=2.0,ang"
					},
					"CgAAAHwFAAAAAAAAfQUAAAAAAAAAAAAAfQUAAAAAAAB+BQAAAAAAAAAAAAB+BQAAAAAAAH8FAAAAAAAAAAAAAH8FAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACBBQAAAAAAAAAAAACBBQAAAAAAAIIFAAAAAAAAAAAAAIIFAAAAAAAAgwUAAAAAAAAAAAAAgwUAAAAAAACEBQAAAAAAAAAAAACEBQAAAAAAAIUFAAAAAAAAAAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAUAAAAAAAB8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "_th=22.5"
					},
					"CAAAAIYFAAAAAAAAhwUAAAAAAAAAAAAAhwUAAAAAAACIBQAAAAAAAAAAAACIBQAAAAAAAIkFAAAAAAAAAAAAAIkFAAAAAAAAigUAAAAAAAAAAAAAigUAAAAAAACLBQAAAAAAAAAAAACLBQAAAAAAAIwFAAAAAAAAAAAAAIwFAAAAAAAAjQUAAAAAAAAAAAAAjQUAAAAAAACOBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": ",log_eps"
					},
					"CAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAACQBQAAAAAAAJEFAAAAAAAAAAAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACTBQAAAAAAAAAAAACTBQAAAAAAAJQFAAAAAAAAAAAAAJQFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACWBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgUAAAAAAACOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "=0,den"
					},
					"BgAAAJYFAAAAAAAAlwUAAAAAAAAAAAAAlwUAAAAAAACYBQAAAAAAAAAAAACYBQAAAAAAAJkFAAAAAAAAAAAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACbBQAAAAAAAAAAAACbBQAAAAAAAJwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert_completion",
					{
						"completion": "density_th",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "density_th"
					},
					"AgAAAJkFAAAAAAAAmQUAAAAAAAADAAAAZGVumQUAAAAAAACjBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAUAAAAAAACcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "=0.7,n"
					},
					"BgAAAKMFAAAAAAAApAUAAAAAAAAAAAAApAUAAAAAAAClBQAAAAAAAAAAAAClBQAAAAAAAKYFAAAAAAAAAAAAAKYFAAAAAAAApwUAAAAAAAAAAAAApwUAAAAAAACoBQAAAAAAAAAAAACoBQAAAAAAAKkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowUAAAAAAACjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"left_delete",
					null,
					"AQAAAKgFAAAAAAAAqAUAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAqQUAAAAAAACpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "n_"
					},
					"AgAAAKgFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAUAAAAAAACoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					3,
					"left_delete",
					null,
					"AwAAAKkFAAAAAAAAqQUAAAAAAAABAAAAX6gFAAAAAAAAqAUAAAAAAAABAAAAbqcFAAAAAAAApwUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAqgUAAAAAAACqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKcFAAAAAAAAqAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwUAAAAAAACnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAFQFAAAAAAAAVQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAUAAAAAAABUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"left_delete",
					null,
					"AQAAAFQFAAAAAAAAVAUAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFQFAAAAAAAAVQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAUAAAAAAABUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABXBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"left_delete",
					null,
					"AQAAAFYFAAAAAAAAVgUAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAVwUAAAAAAABXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "n_bins=1024"
					},
					"CwAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAAYAUAAAAAAABhBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgUAAAAAAABWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAArBgAAAAAAAAAAAAAnBgAAAAAAACcGAAAAAAAABAAAACAgICAnBgAAAAAAACkGAAAAAAAAAAAAACkGAAAAAAAAKgYAAAAAAAAAAAAAKgYAAAAAAAAsBgAAAAAAAAAAAAAnBgAAAAAAACcGAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "of"
					},
					"AgAAACoGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAAsBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgYAAAAAAAAqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					2,
					"left_delete",
					null,
					"AgAAACsGAAAAAAAAKwYAAAAAAAABAAAAZioGAAAAAAAAKgYAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACoGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAAsBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgYAAAAAAAAqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACwGAAAAAAAALgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAYAAAAAAAAsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "argc"
					},
					"BAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAADAGAAAAAAAAMQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAADMGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA1BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwYAAAAAAAAzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					3,
					"left_delete",
					null,
					"AwAAADUGAAAAAAAANQYAAAAAAAABAAAAKTQGAAAAAAAANAYAAAAAAAABAAAAMDMGAAAAAAAAMwYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAADMGAAAAAAAANAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwYAAAAAAAAzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " 1)"
					},
					"AwAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcGAAAAAAAAOAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwYAAAAAAAA3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADgGAAAAAAAAOgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAYAAAAAAAA4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADkGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD0GAAAAAAAAAAAAAD0GAAAAAAAAPwYAAAAAAAAAAAAAOgYAAAAAAAA6BgAAAAAAAAIAAAAgIDoGAAAAAAAAPgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQYAAAAAAAA5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "S_T"
					},
					"AwAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABABgAAAAAAAAAAAABABgAAAAAAAEEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					3,
					"left_delete",
					null,
					"AwAAAEAGAAAAAAAAQAYAAAAAAAABAAAAVD8GAAAAAAAAPwYAAAAAAAABAAAAXz4GAAAAAAAAPgYAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAQQYAAAAAAABBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "JS_ToInt32"
					},
					"CgAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABABgAAAAAAAAAAAABABgAAAAAAAEEGAAAAAAAAAAAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQgYAAAAAAABDBgAAAAAAAAAAAABDBgAAAAAAAEQGAAAAAAAAAAAAAEQGAAAAAAAARQYAAAAAAAAAAAAARQYAAAAAAABGBgAAAAAAAAAAAABGBgAAAAAAAEcGAAAAAAAAAAAAAEcGAAAAAAAASAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgGAAAAAAAASgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAYAAAAAAABIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAEkGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABLBgAAAAAAAAAAAABLBgAAAAAAAEwGAAAAAAAAAAAAAEwGAAAAAAAATQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " &refine"
					},
					"CAAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABPBgAAAAAAAAAAAABPBgAAAAAAAFAGAAAAAAAAAAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFUGAAAAAAAAVgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAABYBgAAAAAAAFkGAAAAAAAAAAAAAFkGAAAAAAAAWgYAAAAAAAAAAAAAWgYAAAAAAABbBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFsGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAF8GAAAAAAAAYAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					2,
					"left_delete",
					null,
					"AgAAADgGAAAAAAAAOAYAAAAAAAABAAAAezcGAAAAAAAANwYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOQYAAAAAAAA5BgAAAAAAAAAAAAAAAHNA"
				],
				[
					337,
					2,
					"left_delete",
					null,
					"AgAAAGEGAAAAAAAAYQYAAAAAAAABAAAAfV8GAAAAAAAAXwYAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAYgYAAAAAAABiBgAAAAAAAAAAAAAAAF5A"
				],
				[
					340,
					1,
					"cut",
					null,
					"AQAAACgGAAAAAAAAKAYAAAAAAAA3AAAAICBpZihhcmdjID49IDEpCiAgICBKU19Ub0ludDMyKGN0eCwgJnJlZmluZSwgYXJndlswXSk7Cg",
					"AQAAAAAAAAABAAAAKAYAAAAAAABfBgAAAAAAAAAAAAAAAAAA"
				],
				[
					341,
					2,
					"paste",
					null,
					"AgAAACgGAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAACWBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABtBgAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAbAYAAAAAAABtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "Float64"
					},
					"CAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB5BgAAAAAAAAUAAABJbnQzMnkGAAAAAAAAegYAAAAAAAAAAAAAegYAAAAAAAB7BgAAAAAAAAAAAAB7BgAAAAAAAHwGAAAAAAAAAAAAAHwGAAAAAAAAfQYAAAAAAAAAAAAAfQYAAAAAAAB+BgAAAAAAAAAAAAB+BgAAAAAAAH8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAYAAAAAAAB9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					6,
					"left_delete",
					null,
					"BgAAAIsGAAAAAAAAiwYAAAAAAAABAAAAZYoGAAAAAAAAigYAAAAAAAABAAAAbokGAAAAAAAAiQYAAAAAAAABAAAAaYgGAAAAAAAAiAYAAAAAAAABAAAAZocGAAAAAAAAhwYAAAAAAAABAAAAZYYGAAAAAAAAhgYAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAjAYAAAAAAACMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "scale"
					},
					"BQAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAACIBgAAAAAAAIkGAAAAAAAAAAAAAIkGAAAAAAAAigYAAAAAAAAAAAAAigYAAAAAAACLBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"left_delete",
					null,
					"AQAAAJIGAAAAAAAAkgYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAkwYAAAAAAACTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJIGAAAAAAAAkwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgYAAAAAAACSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"cut",
					null,
					"AQAAAF8GAAAAAAAAXwYAAAAAAAA4AAAAICBpZihhcmdjID49IDIpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmc2NhbGUsIGFyZ3ZbMV0pOwo",
					"AQAAAAAAAAABAAAAXwYAAAAAAACXBgAAAAAAAAAAAAAAAAAA"
				],
				[
					362,
					2,
					"paste",
					null,
					"AgAAAF8GAAAAAAAAlwYAAAAAAAAAAAAAlwYAAAAAAADPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAKQGAAAAAAAApQYAAAAAAAAAAAAApQYAAAAAAAClBgAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAApAYAAAAAAAClBgAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "suig"
					},
					"BQAAAL4GAAAAAAAAvwYAAAAAAAAAAAAAvwYAAAAAAAC/BgAAAAAAAAUAAABzY2FsZb8GAAAAAAAAwAYAAAAAAAAAAAAAwAYAAAAAAADBBgAAAAAAAAAAAADBBgAAAAAAAMIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgYAAAAAAADDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					3,
					"left_delete",
					null,
					"AwAAAMEGAAAAAAAAwQYAAAAAAAABAAAAZ8AGAAAAAAAAwAYAAAAAAAABAAAAab8GAAAAAAAAvwYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAwgYAAAAAAADCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "ui"
					},
					"AgAAAL8GAAAAAAAAwAYAAAAAAAAAAAAAwAYAAAAAAADBBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwYAAAAAAAC/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					2,
					"left_delete",
					null,
					"AgAAAMAGAAAAAAAAwAYAAAAAAAABAAAAab8GAAAAAAAAvwYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAwQYAAAAAAADBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "ig"
					},
					"AgAAAL8GAAAAAAAAwAYAAAAAAAAAAAAAwAYAAAAAAADBBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwYAAAAAAAC/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert_completion",
					{
						"completion": "sigma_scale",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sigma_scale"
					},
					"AgAAAL4GAAAAAAAAvgYAAAAAAAADAAAAc2lnvgYAAAAAAADJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQYAAAAAAADBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"left_delete",
					null,
					"AQAAANAGAAAAAAAA0AYAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA0QYAAAAAAADRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANAGAAAAAAAA0QYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AYAAAAAAADQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"cut",
					null,
					"AQAAAJcGAAAAAAAAlwYAAAAAAAA+AAAAICBpZihhcmdjID49IDMpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmc2lnbWFfc2NhbGUsIGFyZ3ZbMl0pOwo",
					"AQAAAAAAAAABAAAAlwYAAAAAAADVBgAAAAAAAAAAAAAAAAAA"
				],
				[
					385,
					2,
					"paste",
					null,
					"AgAAAJcGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAAATBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"left_delete",
					null,
					"AQAAAOIGAAAAAAAA4gYAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAA4wYAAAAAAADjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "quz"
					},
					"BAAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA/QYAAAAAAAD9BgAAAAAAAAsAAABzaWdtYV9zY2FsZf0GAAAAAAAA/gYAAAAAAAAAAAAA/gYAAAAAAAD/BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AYAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"left_delete",
					null,
					"AQAAAP4GAAAAAAAA/gYAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAA/wYAAAAAAAD/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "ant"
					},
					"AwAAAP4GAAAAAAAA/wYAAAAAAAAAAAAA/wYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gYAAAAAAAD+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"left_delete",
					null,
					"AQAAAAgHAAAAAAAACAcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAACQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAgHAAAAAAAACQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAcAAAAAAAAIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"cut",
					null,
					"AQAAANUGAAAAAAAA1QYAAAAAAAA4AAAAICBpZihhcmdjID49IDQpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmcXVhbnQsIGFyZ3ZbM10pOwo",
					"AQAAAAAAAAABAAAA1QYAAAAAAAANBwAAAAAAAAAAAAAAAAAA"
				],
				[
					405,
					2,
					"paste",
					null,
					"AgAAANUGAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAABFBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QYAAAAAAADVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"left_delete",
					null,
					"AQAAABoHAAAAAAAAGgcAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAGwcAAAAAAAAbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAABoHAAAAAAAAGwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": "ang"
					},
					"BAAAADQHAAAAAAAANQcAAAAAAAAAAAAANQcAAAAAAAA1BwAAAAAAAAUAAABxdWFudDUHAAAAAAAANgcAAAAAAAAAAAAANgcAAAAAAAA3BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAcAAAAAAAA5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert_completion",
					{
						"completion": "ang_th",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ang_th"
					},
					"AgAAADQHAAAAAAAANAcAAAAAAAADAAAAYW5nNAcAAAAAAAA6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwcAAAAAAAA3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"left_delete",
					null,
					"AQAAAEEHAAAAAAAAQQcAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAQgcAAAAAAABCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAEEHAAAAAAAAQgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQcAAAAAAABBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"cut",
					null,
					"AQAAAA0HAAAAAAAADQcAAAAAAAA5AAAAICBpZihhcmdjID49IDUpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmYW5nX3RoLCBhcmd2WzRdKTsK",
					"AQAAAAAAAAABAAAADQcAAAAAAABGBwAAAAAAAAAAAAAAAAAA"
				],
				[
					424,
					2,
					"paste",
					null,
					"AgAAAA0HAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAAB/BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQcAAAAAAAANBwAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"left_delete",
					null,
					"AQAAAFMHAAAAAAAAUwcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAVAcAAAAAAABUBwAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAFMHAAAAAAAAVAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					6,
					"left_delete",
					null,
					"BgAAAHIHAAAAAAAAcgcAAAAAAAABAAAAaHEHAAAAAAAAcQcAAAAAAAABAAAAdHAHAAAAAAAAcAcAAAAAAAABAAAAX28HAAAAAAAAbwcAAAAAAAABAAAAZ24HAAAAAAAAbgcAAAAAAAABAAAAbm0HAAAAAAAAbQcAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAcwcAAAAAAABzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "log_eps"
					},
					"BwAAAG0HAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABvBwAAAAAAAAAAAABvBwAAAAAAAHAHAAAAAAAAAAAAAHAHAAAAAAAAcQcAAAAAAAAAAAAAcQcAAAAAAAByBwAAAAAAAAAAAAByBwAAAAAAAHMHAAAAAAAAAAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"left_delete",
					null,
					"AQAAAHsHAAAAAAAAewcAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAfAcAAAAAAAB8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAHsHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewcAAAAAAAB7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"cut",
					null,
					"AQAAAEYHAAAAAAAARgcAAAAAAAA6AAAAICBpZihhcmdjID49IDYpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmbG9nX2VwcywgYXJndls1XSk7Cg",
					"AQAAAAAAAAABAAAARgcAAAAAAACABwAAAAAAAAAAAAAAAAAA"
				],
				[
					442,
					2,
					"paste",
					null,
					"AgAAAEYHAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAAC6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgcAAAAAAABGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"left_delete",
					null,
					"AQAAAI0HAAAAAAAAjQcAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAjgcAAAAAAACOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAI0HAAAAAAAAjgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQcAAAAAAACNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					7,
					"left_delete",
					null,
					"BwAAAK0HAAAAAAAArQcAAAAAAAABAAAAc6wHAAAAAAAArAcAAAAAAAABAAAAcKsHAAAAAAAAqwcAAAAAAAABAAAAZaoHAAAAAAAAqgcAAAAAAAABAAAAX6kHAAAAAAAAqQcAAAAAAAABAAAAZ6gHAAAAAAAAqAcAAAAAAAABAAAAb6cHAAAAAAAApwcAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAArgcAAAAAAACuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": "dens"
					},
					"BAAAAKcHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACpBwAAAAAAAAAAAACpBwAAAAAAAKoHAAAAAAAAAAAAAKoHAAAAAAAAqwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert_completion",
					{
						"completion": "density_th",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "density_th"
					},
					"AgAAAKcHAAAAAAAApwcAAAAAAAAEAAAAZGVuc6cHAAAAAAAAsQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"left_delete",
					null,
					"AQAAALgHAAAAAAAAuAcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAALgHAAAAAAAAuQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAcAAAAAAAC4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"cut",
					null,
					"AQAAAIAHAAAAAAAAgAcAAAAAAAA9AAAAICBpZihhcmdjID49IDcpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmZGVuc2l0eV90aCwgYXJndls2XSk7Cg",
					"AQAAAAAAAAABAAAAgAcAAAAAAAC9BwAAAAAAAAAAAAAAAAAA"
				],
				[
					462,
					2,
					"paste",
					null,
					"AgAAAIAHAAAAAAAAvQcAAAAAAAAAAAAAvQcAAAAAAAD6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAcAAAAAAACABwAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"left_delete",
					null,
					"AQAAAMoHAAAAAAAAygcAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAywcAAAAAAADLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAMoHAAAAAAAAywcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygcAAAAAAADKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					7,
					"left_delete",
					null,
					"BwAAANwHAAAAAAAA3AcAAAAAAAABAAAANNsHAAAAAAAA2wcAAAAAAAABAAAANtoHAAAAAAAA2gcAAAAAAAABAAAAdNkHAAAAAAAA2QcAAAAAAAABAAAAYdgHAAAAAAAA2AcAAAAAAAABAAAAb9cHAAAAAAAA1wcAAAAAAAABAAAAbNYHAAAAAAAA1gcAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA3QcAAAAAAADdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "Int"
					},
					"AwAAANYHAAAAAAAA1wcAAAAAAAAAAAAA1wcAAAAAAADYBwAAAAAAAAAAAADYBwAAAAAAANkHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gcAAAAAAADWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert_completion",
					{
						"completion": "JS_ToInt32",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_ToInt32"
					},
					"AgAAANEHAAAAAAAA0QcAAAAAAAAIAAAASlNfVG9JbnTRBwAAAAAAANsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QcAAAAAAADZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANsHAAAAAAAA3AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wcAAAAAAADbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					7,
					"left_delete",
					null,
					"BwAAANwHAAAAAAAA3AcAAAAAAAABAAAAKNsHAAAAAAAA2wcAAAAAAAABAAAAMdoHAAAAAAAA2gcAAAAAAAABAAAAMtkHAAAAAAAA2QcAAAAAAAABAAAAM9gHAAAAAAAA2AcAAAAAAAABAAAAdNcHAAAAAAAA1wcAAAAAAAABAAAAbtYHAAAAAAAA1gcAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAA3QcAAAAAAADdBwAAAAAAAAAAAAAAAGBA"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "UI"
					},
					"AgAAANYHAAAAAAAA1wcAAAAAAAAAAAAA1wcAAAAAAADYBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gcAAAAAAADWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					2,
					"left_delete",
					null,
					"AgAAANcHAAAAAAAA1wcAAAAAAAABAAAASdYHAAAAAAAA1gcAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAA2AcAAAAAAADYBwAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "Int32("
					},
					"BgAAANYHAAAAAAAA1wcAAAAAAAAAAAAA1wcAAAAAAADYBwAAAAAAAAAAAADYBwAAAAAAANkHAAAAAAAAAAAAANkHAAAAAAAA2gcAAAAAAAAAAAAA2gcAAAAAAADbBwAAAAAAAAAAAADbBwAAAAAAANwHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gcAAAAAAADWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"left_delete",
					null,
					"AQAAAPMHAAAAAAAA8wcAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wcAAAAAAADzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					10,
					"left_delete",
					null,
					"CgAAAOsHAAAAAAAA6wcAAAAAAAABAAAAaOoHAAAAAAAA6gcAAAAAAAABAAAAdOkHAAAAAAAA6QcAAAAAAAABAAAAX+gHAAAAAAAA6AcAAAAAAAABAAAAeecHAAAAAAAA5wcAAAAAAAABAAAAdOYHAAAAAAAA5gcAAAAAAAABAAAAaeUHAAAAAAAA5QcAAAAAAAABAAAAc+QHAAAAAAAA5AcAAAAAAAABAAAAbuMHAAAAAAAA4wcAAAAAAAABAAAAZeIHAAAAAAAA4gcAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": "n_"
					},
					"AgAAAOIHAAAAAAAA4wcAAAAAAAAAAAAA4wcAAAAAAADkBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gcAAAAAAADiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert_completion",
					{
						"completion": "n_bins",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "n_bins"
					},
					"AgAAAOIHAAAAAAAA4gcAAAAAAAACAAAAbl/iBwAAAAAAAOgHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AcAAAAAAADkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					2,
					"left_delete",
					null,
					"AgAAAPUHAAAAAAAA9QcAAAAAAAABAAAACvQHAAAAAAAA9AcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA9gcAAAAAAAD2BwAAAAAAAAAAAAAAAGtA"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACUIAAAAAAAAJggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQgAAAAAAAAlCAAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACYIAAAAAAAAJwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJggAAAAAAAAmCAAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"paste",
					null,
					"AQAAACcIAAAAAAAAbQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwgAAAAAAAAnCAAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "\n\ntypedef"
					},
					"CQAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"paste",
					null,
					"AQAAAFsAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": " JSLineSegm"
					},
					"CwAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "entS"
					},
					"BAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIkAAAAAAAAAAAAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"left_delete",
					null,
					"AQAAAIkAAAAAAAAAiQAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAigAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "Decte"
					},
					"BQAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					3,
					"left_delete",
					null,
					"AwAAAI0AAAAAAAAAjQAAAAAAAAABAAAAZYwAAAAAAAAAjAAAAAAAAAABAAAAdIsAAAAAAAAAiwAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAjgAAAAAAAACOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "tector;"
					},
					"BwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"paste",
					null,
					"AgAAAKADAAAAAAAAtQMAAAAAAAAAAAAAtQMAAAAAAAC1AwAAAAAAACEAAAAgY3Y6OlB0cjxjdjo6TGluZVNlZ21lbnREZXRlY3Rvcj4",
					"AQAAAAAAAAABAAAAoAMAAAAAAADBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"left_delete",
					null,
					"AQAAAJ0DAAAAAAAAnQMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAngMAAAAAAACeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"paste",
					null,
					"AgAAABsEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAwBAAAAAAAACAAAABjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPg",
					"AQAAAAAAAAABAAAAGwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"paste",
					null,
					"AgAAAAwJAAAAAAAAIQkAAAAAAAAAAAAAIQkAAAAAAAAhCQAAAAAAABcAAABjdjo6TGluZVNlZ21lbnREZXRlY3Rvcg",
					"AQAAAAAAAAABAAAADAkAAAAAAAAjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"paste",
					null,
					"AgAAANUJAAAAAAAA6gkAAAAAAAAAAAAA6gkAAAAAAADqCQAAAAAAABcAAABjdjo6TGluZVNlZ21lbnREZXRlY3Rvcg",
					"AQAAAAAAAAABAAAA1QkAAAAAAADsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"paste",
					null,
					"AgAAAKwJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADBCQAAAAAAABcAAABjdjo6TGluZVNlZ21lbnREZXRlY3Rvcg",
					"AQAAAAAAAAABAAAArAkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABbAAAAAAAAAAkAAAAgY3Y6OlB0cjw",
					"AQAAAAAAAAABAAAAYwAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAABzAAAAAAAAAAIAAAA+IA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "cv::Ptr"
					},
					"BwAAALADAAAAAAAAsQMAAAAAAAAAAAAAsQMAAAAAAACyAwAAAAAAAAAAAACyAwAAAAAAALMDAAAAAAAAAAAAALMDAAAAAAAAtAMAAAAAAAAAAAAAtAMAAAAAAAC1AwAAAAAAAAAAAAC1AwAAAAAAALYDAAAAAAAAAAAAALYDAAAAAAAAtwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAMAAAAAAACwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": "<cv::L"
					},
					"BgAAALcDAAAAAAAAuAMAAAAAAAAAAAAAuAMAAAAAAAC5AwAAAAAAAAAAAAC5AwAAAAAAALoDAAAAAAAAAAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwMAAAAAAAC3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQMAAAAAAAC9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert_completion",
					{
						"completion": "LineSegmentDetector",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "LineSegmentDetector"
					},
					"AgAAALwDAAAAAAAAvAMAAAAAAAADAAAATGluvAMAAAAAAADPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwMAAAAAAAC/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwMAAAAAAADPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": " ptr;"
					},
					"BQAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAADSAwAAAAAAANMDAAAAAAAAAAAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AMAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUDAAAAAAAA1gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"paste",
					null,
					"AgAAAFgEAAAAAAAAWwQAAAAAAAAAAAAAWwQAAAAAAABbBAAAAAAAAAMAAAAqcyA",
					"AQAAAAAAAAABAAAAWwQAAAAAAABYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": "ptr.get"
					},
					"CAAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADaBAAAAAAAAAEAAABz2gQAAAAAAADbBAAAAAAAAAAAAADbBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAADeBAAAAAAAAN8EAAAAAAAAAAAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAEAAAAAAAA4gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"left_delete",
					null,
					"AQAAAHIAAAAAAAAAcgAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvFQAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgoKI2luY2x1ZGUgPG9wZW5jdjIvaW1ncHJvYy5ocHA+Cgp0eXBlZGVmIGN2OjpMaW5lU2VnbWVudERldGVjdG9yIEpTTGluZVNlZ21lbnREZXRlY3RvcjsKCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCmV4dGVybiAiQyIgewpKU1ZhbHVlIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byA9IEpTX1VOREVGSU5FRCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gSlNfVU5ERUZJTkVEOwpKU0NsYXNzSUQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID0gMDsKfQoKSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KEpTQ29udGV4dCogY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTVmFsdWVDb25zdCBwcm90bywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgcmVmaW5lID0gY3Y6OkxTRF9SRUZJTkVfU1RELAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBzY2FsZSA9IDAuOCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3VibGUgc2lnbWFfc2NhbGUgPSAwLjYsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91YmxlIHF1YW50ID0gMi4wLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBhbmdfdGggPSAyMi41LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBsb2dfZXBzID0gMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3VibGUgZGVuc2l0eV90aCA9IDAuNywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgbl9iaW5zID0gMTAyNCkgewogIEpTVmFsdWUgcmV0OwogSlNMaW5lU2VnbWVudERldGVjdG9yKiBzOwpjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPiBwdHI7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKTsKICBzID0ganNfYWxsb2NhdGU8SlNMaW5lU2VnbWVudERldGVjdG9yPihjdHgpOwoKICBwdHI9IGN2OjpjcmVhdGVMaW5lU2VnbWVudERldGVjdG9yKHJlZmluZSwgc2NhbGUsIHNpZ21hX3NjYWxlLCBxdWFudCwgYW5nX3RoLCBsb2dfZXBzLCBkZW5zaXR5X3RoLCBuX2JpbnMpOwoKICBKU19TZXRPcGFxdWUocmV0LCBwdHIuZ2V0KCkpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKCiAgSlNWYWx1ZSBwcm90bzsKICBpbnQzMl90IHJlZmluZT1jdjo6TFNEX1JFRklORV9TVEQsIG5fYmlucz0xMDI0OwogIGRvdWJsZSBzY2FsZT0wLjgsc2lnbWFfc2NhbGU9MC42LHF1YW50PTIuMCxhbmdfdGg9MjIuNSxsb2dfZXBzPTAsZGVuc2l0eV90aD0wLjc7CgogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYoYXJnYyA+PSAxKQogICAgSlNfVG9JbnQzMihjdHgsICZyZWZpbmUsIGFyZ3ZbMF0pOwogIGlmKGFyZ2MgPj0gMikKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZzY2FsZSwgYXJndlsxXSk7CiAgaWYoYXJnYyA+PSAzKQogICAgSlNfVG9GbG9hdDY0KGN0eCwgJnNpZ21hX3NjYWxlLCBhcmd2WzJdKTsKICBpZihhcmdjID49IDQpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmcXVhbnQsIGFyZ3ZbM10pOwogIGlmKGFyZ2MgPj0gNSkKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZhbmdfdGgsIGFyZ3ZbNF0pOwogIGlmKGFyZ2MgPj0gNikKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZsb2dfZXBzLCBhcmd2WzVdKTsKICBpZihhcmdjID49IDcpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmZGVuc2l0eV90aCwgYXJndls2XSk7CiAgaWYoYXJnYyA+PSA4KQogICAgSlNfVG9JbnQzMihjdHgsICZuX2JpbnMsIGFyZ3ZbN10pOwoKICByZXR1cm4ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX25ldyhjdHgsIHByb3RvLCByZWZpbmUsIHNjYWxlLCBzaWdtYV9zY2FsZSwgcXVhbnQsIGFuZ190aCwgbG9nX2VwcywgZGVuc2l0eV90aCwgbl9iaW5zKTsKfQoKY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTTGluZVNlZ21lbnREZXRlY3Rvcio+KEpTX0dldE9wYXF1ZTIoY3R4LCB2YWwsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCkpOwp9Cgp2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBKU0xpbmVTZWdtZW50RGV0ZWN0b3IqIHMgPSBzdGF0aWNfY2FzdDxKU0xpbmVTZWdtZW50RGV0ZWN0b3IqPihKU19HZXRPcGFxdWUodmFsLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpKTsKCiAgcy0+fkxpbmVTZWdtZW50RGV0ZWN0b3IoKTsKICBqc19kZWFsbG9jYXRlKHJ0LCBzKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2LCBpbnQgbWFnaWMpIHsKICBjdjo6TGluZVNlZ21lbnREZXRlY3RvciogczsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoKHMgPSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YShjdHgsIHRoaXNfdmFsKSkgPT0gbnVsbHB0cikKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykge30KICByZXR1cm4gcmV0Owp9CgpKU0NsYXNzRGVmIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIkxpbmVTZWdtZW50RGV0ZWN0b3IiLAogICAgLmZpbmFsaXplciA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIsCn07Cgpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3NbXSA9IHt9OwoKZXh0ZXJuICJDIiBpbnQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CgogIGlmKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIExpbmVTZWdtZW50RGV0ZWN0b3IgY2xhc3MgKi8KICAgIEpTX05ld0NsYXNzSUQoJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCk7CiAgICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCwgJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7CgogICAgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CiAgICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG9fZnVuY3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudG9mKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jcykpOwogICAgSlNfU2V0Q2xhc3NQcm90byhjdHgsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCwgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvKTsKCiAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3MgPQogICAgICAgIEpTX05ld0NGdW5jdGlvbjIoY3R4LCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY3RvciwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiLCAyLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcywgbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvKTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudG9mKGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9zdGF0aWNfZnVuY3MpKTsKICB9CgogIGlmKG0pCiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7CgogIHJldHVybiAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lU2VnbWVudERldGVjdG9yIik7Cn0KCnZvaWQKanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlIHBhcmVudCwgY29uc3QgY2hhciogbmFtZSkgewogIGlmKEpTX0lzVW5kZWZpbmVkKGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcykpCiAgICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiTGluZVNlZ21lbnREZXRlY3RvciIsIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyk7Cn0KCiNpZiBkZWZpbmVkKEpTX0xJTkVfU0VHTUVOVF9ERVRFQ1RPUl9NT0RVTEUpCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUgVklTSUJMRSBqc19pbml0X21vZHVsZQojZWxzZQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlX2xpbmVfc2VnbWVudF9kZXRlY3RvcgojZW5kaWYKCmV4dGVybiAiQyIgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdCk7CiAgaWYoIW0pCiAgICByZXR1cm4gTlVMTDsKICBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZXhwb3J0KGN0eCwgbSk7CiAgcmV0dXJuIG07Cn0AAAAAAAAAAAgWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": "cv::Ptr"
					},
					"BwAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					775,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"insert",
					{
						"characters": "*s"
					},
					"AgAAANEEAAAAAAAA0gQAAAAAAAAAAAAA0gQAAAAAAADTBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QQAAAAAAADRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					787,
					1,
					"insert",
					{
						"characters": " ptr;"
					},
					"BQAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADXBAAAAAAAAAAAAADXBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QQAAAAAAADVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADwBAAAAAAAAAkAAABwdHIuZ2V0KCk",
					"AQAAAAAAAAABAAAA7wQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"paste",
					null,
					"AgAAAOQIAAAAAAAA+QgAAAAAAAAAAAAA+QgAAAAAAAD5CAAAAAAAABcAAABjdjo6TGluZVNlZ21lbnREZXRlY3Rvcg",
					"AQAAAAAAAAABAAAA+wgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"insert",
					{
						"characters": "cv::Lin"
					},
					"BwAAAGgKAAAAAAAAaQoAAAAAAAAAAAAAaQoAAAAAAABqCgAAAAAAAAAAAABqCgAAAAAAAGsKAAAAAAAAAAAAAGsKAAAAAAAAbAoAAAAAAAAAAAAAbAoAAAAAAABtCgAAAAAAAAAAAABtCgAAAAAAAG4KAAAAAAAAAAAAAG4KAAAAAAAAbwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAoAAAAAAABoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert_completion",
					{
						"completion": "LineSegmentDetector",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "LineSegmentDetector"
					},
					"AgAAAGwKAAAAAAAAbAoAAAAAAAADAAAATGlubAoAAAAAAAB/CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwoAAAAAAABvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": "*lsd"
					},
					"BAAAAH8KAAAAAAAAgAoAAAAAAAAAAAAAgAoAAAAAAACBCgAAAAAAAAAAAACBCgAAAAAAAIIKAAAAAAAAAAAAAIIKAAAAAAAAgwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwoAAAAAAAB/CgAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIMKAAAAAAAAhAoAAAAAAAAAAAAAhAoAAAAAAACFCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwoAAAAAAACDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": " s.ge"
					},
					"BQAAAIUKAAAAAAAAhgoAAAAAAAAAAAAAhgoAAAAAAACHCgAAAAAAAAAAAACHCgAAAAAAAIgKAAAAAAAAAAAAAIgKAAAAAAAAiQoAAAAAAAAAAAAAiQoAAAAAAACKCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQoAAAAAAACFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					828,
					3,
					"left_delete",
					null,
					"AwAAAIkKAAAAAAAAiQoAAAAAAAABAAAAZYgKAAAAAAAAiAoAAAAAAAABAAAAZ4cKAAAAAAAAhwoAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAigoAAAAAAACKCgAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": "->get"
					},
					"BQAAAIcKAAAAAAAAiAoAAAAAAAAAAAAAiAoAAAAAAACJCgAAAAAAAAAAAACJCgAAAAAAAIoKAAAAAAAAAAAAAIoKAAAAAAAAiwoAAAAAAAAAAAAAiwoAAAAAAACMCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwoAAAAAAACHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIwKAAAAAAAAjgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAoAAAAAAACMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					832,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAI4KAAAAAAAAjwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgoAAAAAAACOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8KAAAAAAAAkAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"left_delete",
					null,
					"AQAAAJMKAAAAAAAAkwoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAlAoAAAAAAACUCgAAAAAAAAAAAAAAAPC/"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": "lsd"
					},
					"AwAAAJMKAAAAAAAAlAoAAAAAAAAAAAAAlAoAAAAAAACVCgAAAAAAAAAAAACVCgAAAAAAAJYKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwoAAAAAAACTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8KAAAAAAAAsAoAAAAAAAAAAAAAsAoAAAAAAACyCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwoAAAAAAACvCgAAAAAAAP///////+9/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": "JS"
					},
					"BAAAAFELAAAAAAAAUgsAAAAAAAAAAAAAUgsAAAAAAABSCwAAAAAAAAQAAABjdjo6sAoAAAAAAACwCgAAAAAAAAIAAAAgIFALAAAAAAAAUQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQsAAAAAAABRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA5FgAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfYWxsb2MuaHBwIgoKI2luY2x1ZGUgPG9wZW5jdjIvaW1ncHJvYy5ocHA+Cgp0eXBlZGVmIGN2OjpQdHI8Y3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3I+IEpTTGluZVNlZ21lbnREZXRlY3RvcjsKCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKCmV4dGVybiAiQyIgewpKU1ZhbHVlIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90byA9IEpTX1VOREVGSU5FRCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gSlNfVU5ERUZJTkVEOwpKU0NsYXNzSUQganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID0gMDsKfQoKSlNWYWx1ZQpqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KEpTQ29udGV4dCogY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTVmFsdWVDb25zdCBwcm90bywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgcmVmaW5lID0gY3Y6OkxTRF9SRUZJTkVfU1RELAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBzY2FsZSA9IDAuOCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3VibGUgc2lnbWFfc2NhbGUgPSAwLjYsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91YmxlIHF1YW50ID0gMi4wLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBhbmdfdGggPSAyMi41LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBsb2dfZXBzID0gMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3VibGUgZGVuc2l0eV90aCA9IDAuNywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgbl9iaW5zID0gMTAyNCkgewogIEpTVmFsdWUgcmV0OwogIEpTTGluZVNlZ21lbnREZXRlY3RvciogczsKICBjdjo6UHRyPGN2OjpMaW5lU2VnbWVudERldGVjdG9yPiBwdHI7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBwcm90bywganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKTsKICBzID0ganNfYWxsb2NhdGU8SlNMaW5lU2VnbWVudERldGVjdG9yPihjdHgpOwoKICBwdHIgPSBjdjo6Y3JlYXRlTGluZVNlZ21lbnREZXRlY3RvcihyZWZpbmUsIHNjYWxlLCBzaWdtYV9zY2FsZSwgcXVhbnQsIGFuZ190aCwgbG9nX2VwcywgZGVuc2l0eV90aCwgbl9iaW5zKTsKKnMgPSBwdHI7CiAgSlNfU2V0T3BhcXVlKHJldCwgcyk7CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewoKICBKU1ZhbHVlIHByb3RvOwogIGludDMyX3QgcmVmaW5lID0gY3Y6OkxTRF9SRUZJTkVfU1RELCBuX2JpbnMgPSAxMDI0OwogIGRvdWJsZSBzY2FsZSA9IDAuOCwgc2lnbWFfc2NhbGUgPSAwLjYsIHF1YW50ID0gMi4wLCBhbmdfdGggPSAyMi41LCBsb2dfZXBzID0gMCwgZGVuc2l0eV90aCA9IDAuNzsKCiAgcHJvdG8gPSBKU19HZXRQcm9wZXJ0eVN0cihjdHgsIG5ld190YXJnZXQsICJwcm90b3R5cGUiKTsKICBpZihKU19Jc0V4Y2VwdGlvbihwcm90bykpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihhcmdjID49IDEpCiAgICBKU19Ub0ludDMyKGN0eCwgJnJlZmluZSwgYXJndlswXSk7CiAgaWYoYXJnYyA+PSAyKQogICAgSlNfVG9GbG9hdDY0KGN0eCwgJnNjYWxlLCBhcmd2WzFdKTsKICBpZihhcmdjID49IDMpCiAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmc2lnbWFfc2NhbGUsIGFyZ3ZbMl0pOwogIGlmKGFyZ2MgPj0gNCkKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZxdWFudCwgYXJndlszXSk7CiAgaWYoYXJnYyA+PSA1KQogICAgSlNfVG9GbG9hdDY0KGN0eCwgJmFuZ190aCwgYXJndls0XSk7CiAgaWYoYXJnYyA+PSA2KQogICAgSlNfVG9GbG9hdDY0KGN0eCwgJmxvZ19lcHMsIGFyZ3ZbNV0pOwogIGlmKGFyZ2MgPj0gNykKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZkZW5zaXR5X3RoLCBhcmd2WzZdKTsKICBpZihhcmdjID49IDgpCiAgICBKU19Ub0ludDMyKGN0eCwgJm5fYmlucywgYXJndls3XSk7CgogIHJldHVybiBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfbmV3KGN0eCwgcHJvdG8sIHJlZmluZSwgc2NhbGUsIHNpZ21hX3NjYWxlLCBxdWFudCwgYW5nX3RoLCBsb2dfZXBzLCBkZW5zaXR5X3RoLCBuX2JpbnMpOwp9CgpKU0xpbmVTZWdtZW50RGV0ZWN0b3IqCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTTGluZVNlZ21lbnREZXRlY3Rvcio+KEpTX0dldE9wYXF1ZTIoY3R4LCB2YWwsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzc19pZCkpOwp9Cgp2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBKU0xpbmVTZWdtZW50RGV0ZWN0b3IqIHMgPSBzdGF0aWNfY2FzdDxKU0xpbmVTZWdtZW50RGV0ZWN0b3IqPihKU19HZXRPcGFxdWUodmFsLCBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY2xhc3NfaWQpKTsKY3Y6OkxpbmVTZWdtZW50RGV0ZWN0b3IqbHNkID0gcy0+Z2V0KCk7CgogIGxzZC0+fkxpbmVTZWdtZW50RGV0ZWN0b3IoKTsKCiAganNfZGVhbGxvY2F0ZShydCwgcyk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9tZXRob2QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgSlNMaW5lU2VnbWVudERldGVjdG9yKiBzOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBpZigocyA9IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kYXRhKGN0eCwgdGhpc192YWwpKSA9PSBudWxscHRyKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7fQogIHJldHVybiByZXQ7Cn0KCkpTQ2xhc3NEZWYganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiTGluZVNlZ21lbnREZXRlY3RvciIsCiAgICAuZmluYWxpemVyID0ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2ZpbmFsaXplciwKfTsKCmNvbnN0IEpTQ0Z1bmN0aW9uTGlzdEVudHJ5IGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jc1tdID0gewogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJMaW5lU2VnbWVudERldGVjdG9yIiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jc1tdID0ge307CgpleHRlcm4gIkMiIGludApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkID09IDApIHsKICAgIC8qIGNyZWF0ZSB0aGUgTGluZVNlZ21lbnREZXRlY3RvciBjbGFzcyAqLwogICAgSlNfTmV3Q2xhc3NJRCgmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkKTsKICAgIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCAmanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKCiAgICBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8gPSBKU19OZXdPYmplY3QoY3R4KTsKICAgIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90bywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9wcm90b19mdW5jcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50b2YoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX3Byb3RvX2Z1bmNzKSk7CiAgICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzX2lkLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwoKICAgIGxpbmVfc2VnbWVudF9kZXRlY3Rvcl9jbGFzcyA9CiAgICAgICAgSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jdG9yLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIDIsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICAgIC8qIHNldCBwcm90by5jb25zdHJ1Y3RvciBhbmQgY3Rvci5wcm90b3R5cGUgKi8KICAgIEpTX1NldENvbnN0cnVjdG9yKGN0eCwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzLCBsaW5lX3NlZ21lbnRfZGV0ZWN0b3JfcHJvdG8pOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50b2YoanNfbGluZV9zZWdtZW50X2RldGVjdG9yX3N0YXRpY19mdW5jcykpOwogIH0KCiAgaWYobSkKICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJMaW5lU2VnbWVudERldGVjdG9yIiwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQoSlNDb250ZXh0KiBjdHgsIEpTTW9kdWxlRGVmKiBtKSB7CiAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkxpbmVTZWdtZW50RGV0ZWN0b3IiKTsKfQoKdm9pZApqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWUgcGFyZW50LCBjb25zdCBjaGFyKiBuYW1lKSB7CiAgaWYoSlNfSXNVbmRlZmluZWQobGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKSkKICAgIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KGN0eCwgMCk7CgogIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcGFyZW50LCBuYW1lID8gbmFtZSA6ICJMaW5lU2VnbWVudERldGVjdG9yIiwgbGluZV9zZWdtZW50X2RldGVjdG9yX2NsYXNzKTsKfQoKI2lmIGRlZmluZWQoSlNfTElORV9TRUdNRU5UX0RFVEVDVE9SX01PRFVMRSkKI2RlZmluZSBKU19JTklUX01PRFVMRSBWSVNJQkxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfbGluZV9zZWdtZW50X2RldGVjdG9yCiNlbmRpZgoKZXh0ZXJuICJDIiBKU01vZHVsZURlZioKSlNfSU5JVF9NT0RVTEUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGNoYXIqIG1vZHVsZV9uYW1lKSB7CiAgSlNNb2R1bGVEZWYqIG07CiAgbSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwgJmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9pbml0KTsKICBpZighbSkKICAgIHJldHVybiBOVUxMOwogIGpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9leHBvcnQoY3R4LCBtKTsKICByZXR1cm4gbTsKfQAAAAAAAAAAPhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQsAAAAAAABRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"cut",
					null,
					"AQAAAOUMAAAAAAAA5QwAAAAAAABdAAAAICAgIEpTX1BST1BfU1RSSU5HX0RFRigiW1N5bWJvbC50b1N0cmluZ1RhZ10iLCAiTGluZVNlZ21lbnREZXRlY3RvciIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwK",
					"AQAAAAAAAAABAAAA5QwAAAAAAABCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					2,
					"paste",
					null,
					"AgAAAOUMAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAACfDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QwAAAAAAADlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": "JS_:"
					},
					"BQAAAOkMAAAAAAAA6gwAAAAAAAAAAAAA6gwAAAAAAADqDAAAAAAAABIAAABKU19QUk9QX1NUUklOR19ERUbqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QwAAAAAAAD7DAAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"left_delete",
					null,
					"AQAAAOwMAAAAAAAA7AwAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA7QwAAAAAAADtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": "PROP_"
					},
					"BQAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"insert",
					{
						"characters": "CFU"
					},
					"AwAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAADzDAAAAAAAAPQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QwAAAAAAADxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					870,
					8,
					"left_delete",
					null,
					"CAAAAPMMAAAAAAAA8wwAAAAAAAABAAAAVfIMAAAAAAAA8gwAAAAAAAABAAAARvEMAAAAAAAA8QwAAAAAAAABAAAAQ/AMAAAAAAAA8AwAAAAAAAABAAAAX+8MAAAAAAAA7wwAAAAAAAABAAAAUO4MAAAAAAAA7gwAAAAAAAABAAAAT+0MAAAAAAAA7QwAAAAAAAABAAAAUuwMAAAAAAAA7AwAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAA9AwAAAAAAAD0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					1,
					"insert",
					{
						"characters": "CFUNC_"
					},
					"BgAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAADxDAAAAAAAAPIMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": "DEF"
					},
					"AwAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA8wwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPUMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gwAAAAAAADyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAAPYMAAAAAAAA9gwAAAAAAAAWAAAAIltTeW1ib2wudG9TdHJpbmdUYWddIvYMAAAAAAAADg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gwAAAAAAAAMDQAAAAAAAAAAAAAAAPC/"
				],
				[
					878,
					1,
					"insert",
					{
						"characters": "compareSegments"
					},
					"EAAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD4DAAAAAAAABYAAAAiW1N5bWJvbC50b1N0cmluZ1RhZ10i+AwAAAAAAAD5DAAAAAAAAAAAAAD5DAAAAAAAAPoMAAAAAAAAAAAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAP0MAAAAAAAAAAAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAAFDQAAAAAAAAYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wwAAAAAAAANDQAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAgNAAAAAAAACQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACA0AAAAAAAAIDQAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAoNAAAAAAAACw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACg0AAAAAAAAKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					883,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsNAAAAAAAADA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACw0AAAAAAAALDQAAAAAAAAAAAAAAAPC/"
				],
				[
					886,
					1,
					"insert",
					{
						"characters": "js_"
					},
					"BAAAAAwNAAAAAAAADQ0AAAAAAAAAAAAADQ0AAAAAAAANDQAAAAAAACsAAAAiTGluZVNlZ21lbnREZXRlY3RvciIsIEpTX1BST1BfQ09ORklHVVJBQkxFDQ0AAAAAAAAODQAAAAAAAAAAAAAODQAAAAAAAA8NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADA0AAAAAAAA3DQAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert_completion",
					{
						"completion": "js_line_segment_detector_proto_funcs",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "js_line_segment_detector_proto_funcs"
					},
					"AgAAAAwNAAAAAAAADA0AAAAAAAADAAAAanNfDA0AAAAAAAAwDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADw0AAAAAAAAPDQAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					11,
					"left_delete",
					null,
					"CwAAAC8NAAAAAAAALw0AAAAAAAABAAAAcy4NAAAAAAAALg0AAAAAAAABAAAAYy0NAAAAAAAALQ0AAAAAAAABAAAAbiwNAAAAAAAALA0AAAAAAAABAAAAdSsNAAAAAAAAKw0AAAAAAAABAAAAZioNAAAAAAAAKg0AAAAAAAABAAAAXykNAAAAAAAAKQ0AAAAAAAABAAAAbygNAAAAAAAAKA0AAAAAAAABAAAAdCcNAAAAAAAAJw0AAAAAAAABAAAAbyYNAAAAAAAAJg0AAAAAAAABAAAAciUNAAAAAAAAJQ0AAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAMA0AAAAAAAAwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert",
					{
						"characters": "compare_segments"
					},
					"EAAAACUNAAAAAAAAJg0AAAAAAAAAAAAAJg0AAAAAAAAnDQAAAAAAAAAAAAAnDQAAAAAAACgNAAAAAAAAAAAAACgNAAAAAAAAKQ0AAAAAAAAAAAAAKQ0AAAAAAAAqDQAAAAAAAAAAAAAqDQAAAAAAACsNAAAAAAAAAAAAACsNAAAAAAAALA0AAAAAAAAAAAAALA0AAAAAAAAtDQAAAAAAAAAAAAAtDQAAAAAAAC4NAAAAAAAAAAAAAC4NAAAAAAAALw0AAAAAAAAAAAAALw0AAAAAAAAwDQAAAAAAAAAAAAAwDQAAAAAAADENAAAAAAAAAAAAADENAAAAAAAAMg0AAAAAAAAAAAAAMg0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADQNAAAAAAAAAAAAADQNAAAAAAAANQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQ0AAAAAAAAlDQAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"paste",
					null,
					"AQAAANAKAAAAAAAAUQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AoAAAAAAADQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					7,
					"left_delete",
					null,
					"BwAAAEkLAAAAAAAASQsAAAAAAAAFAAAAbWFnaWNICwAAAAAAAEgLAAAAAAAAAQAAACBHCwAAAAAAAEcLAAAAAAAAAQAAAHRGCwAAAAAAAEYLAAAAAAAAAQAAAG5FCwAAAAAAAEULAAAAAAAAAQAAAGlECwAAAAAAAEQLAAAAAAAAAQAAACBDCwAAAAAAAEMLAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAASQsAAAAAAABOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAEYLAAAAAAAARwsAAAAAAAAAAAAARwsAAAAAAABJCwAAAAAAAAAAAABJCwAAAAAAAEoLAAAAAAAAAAAAAEcLAAAAAAAARwsAAAAAAAACAAAAICBHCwAAAAAAAEcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgsAAAAAAABGCwAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEgLAAAAAAAASQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAsAAAAAAABICwAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": "cp"
					},
					"AwAAAPkKAAAAAAAA+goAAAAAAAAAAAAA+goAAAAAAAD6CgAAAAAAAAYAAABtZXRob2T6CgAAAAAAAPsKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QoAAAAAAAD/CgAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"left_delete",
					null,
					"AQAAAPoKAAAAAAAA+goAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA+woAAAAAAAD7CgAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": "omp"
					},
					"AwAAAPoKAAAAAAAA+woAAAAAAAAAAAAA+woAAAAAAAD8CgAAAAAAAAAAAAD8CgAAAAAAAP0KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+goAAAAAAAD6CgAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert_completion",
					{
						"completion": "js_line_segment_detector_compare_segments",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "js_line_segment_detector_compare_segments"
					},
					"AgAAAOAKAAAAAAAA4AoAAAAAAAAdAAAAanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbXDgCgAAAAAAAAkLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QoAAAAAAAD9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					919,
					1,
					"paste",
					null,
					"AQAAAFELAAAAAAAACgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQsAAAAAAABRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOkLAAAAAAAA6gsAAAAAAAAAAAAA6gsAAAAAAADqCwAAAAAAABMAAAAKICBzd2l0Y2gobWFnaWMpIHt9",
					"AQAAAAAAAAABAAAA6QsAAAAAAAD8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					1,
					"cut",
					null,
					"AQAAAA8OAAAAAAAADw4AAAAAAABTAAAAICAgIEpTX0NGVU5DX0RFRigiY29tcGFyZVNlZ21lbnRzIiwzICwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2NvbXBhcmVfc2VnbWVudHMpLAo",
					"AQAAAAAAAAABAAAADw4AAAAAAABiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					2,
					"paste",
					null,
					"AgAAAA8OAAAAAAAAYg4AAAAAAAAAAAAAYg4AAAAAAAC1DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADw4AAAAAAAAPDgAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "detect"
					},
					"BwAAAHQOAAAAAAAAdQ4AAAAAAAAAAAAAdQ4AAAAAAAB1DgAAAAAAAA8AAABjb21wYXJlU2VnbWVudHN1DgAAAAAAAHYOAAAAAAAAAAAAAHYOAAAAAAAAdw4AAAAAAAAAAAAAdw4AAAAAAAB4DgAAAAAAAAAAAAB4DgAAAAAAAHkOAAAAAAAAAAAAAHkOAAAAAAAAeg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAACDDgAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAHwOAAAAAAAAfQ4AAAAAAAAAAAAAfQ4AAAAAAAB9DgAAAAAAAAEAAAAz",
					"AQAAAAAAAAABAAAAfA4AAAAAAAB9DgAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": "detect"
					},
					"BwAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACaDgAAAAAAABAAAABjb21wYXJlX3NlZ21lbnRzmg4AAAAAAACbDgAAAAAAAAAAAACbDgAAAAAAAJwOAAAAAAAAAAAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAAnQ4AAAAAAACeDgAAAAAAAAAAAACeDgAAAAAAAJ8OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQ4AAAAAAACpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"cut",
					null,
					"AQAAANAKAAAAAAAA0AoAAAAAAAAqAQAACnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9jb21wYXJlX3NlZ21lbnRzKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBKU0xpbmVTZWdtZW50RGV0ZWN0b3IqIHM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKChzID0ganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RhdGEoY3R4LCB0aGlzX3ZhbCkpID09IG51bGxwdHIpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwogCiAgcmV0dXJuIHJldDt9Cg",
					"AQAAAAAAAAABAAAA0AoAAAAAAAD6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					944,
					2,
					"paste",
					null,
					"AgAAANAKAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAAkDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AoAAAAAAADQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": "detect"
					},
					"BwAAACMMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAkDAAAAAAAABAAAABjb21wYXJlX3NlZ21lbnRzJAwAAAAAAAAlDAAAAAAAAAAAAAAlDAAAAAAAACYMAAAAAAAAAAAAACYMAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAoDAAAAAAAAAAAAAAoDAAAAAAAACkMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwwAAAAAAAAzDAAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"cut",
					null,
					"AQAAAIIPAAAAAAAAgg8AAAAAAABAAAAAICAgIEpTX0NGVU5DX0RFRigiZGV0ZWN0IiwyICwganNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RldGVjdCksCg",
					"AQAAAAAAAAABAAAAgg8AAAAAAADCDwAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					2,
					"paste",
					null,
					"AgAAAIIPAAAAAAAAwg8AAAAAAAAAAAAAwg8AAAAAAAACEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgg8AAAAAAACCDwAAAAAAAAAAAAAAAPC/"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": "drawSeg"
					},
					"CAAAANQPAAAAAAAA1Q8AAAAAAAAAAAAA1Q8AAAAAAADVDwAAAAAAAAYAAABkZXRlY3TVDwAAAAAAANYPAAAAAAAAAAAAANYPAAAAAAAA1w8AAAAAAAAAAAAA1w8AAAAAAADYDwAAAAAAAAAAAADYDwAAAAAAANkPAAAAAAAAAAAAANkPAAAAAAAA2g8AAAAAAAAAAAAA2g8AAAAAAADbDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1A8AAAAAAADaDwAAAAAAAAAAAAAAAPC/"
				],
				[
					959,
					1,
					"insert",
					{
						"characters": "ments"
					},
					"BQAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAADdDwAAAAAAAN4PAAAAAAAAAAAAAN4PAAAAAAAA3w8AAAAAAAAAAAAA3w8AAAAAAADgDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2w8AAAAAAADbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"insert",
					{
						"characters": "draw_segments"
					},
					"DgAAAP8PAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAYAAABkZXRlY3QAEAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAAMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/w8AAAAAAAAFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"cut",
					null,
					"AQAAAPoLAAAAAAAA+gsAAAAAAAAfAQAACnN0YXRpYyBKU1ZhbHVlCmpzX2xpbmVfc2VnbWVudF9kZXRlY3Rvcl9kZXRlY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIEpTTGluZVNlZ21lbnREZXRlY3RvciogczsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoKHMgPSBqc19saW5lX3NlZ21lbnRfZGV0ZWN0b3JfZGF0YShjdHgsIHRoaXNfdmFsKSkgPT0gbnVsbHB0cikKICAgIHJldHVybiBKU19FWENFUFRJT047CiAKICByZXR1cm4gcmV0O30",
					"AQAAAAAAAAABAAAA+gsAAAAAAAAZDQAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					2,
					"paste",
					null,
					"AgAAAPoLAAAAAAAAGQ0AAAAAAAAAAAAAGQ0AAAAAAAA4DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gsAAAAAAAD6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert",
					{
						"characters": "raw"
					},
					"BAAAAEMNAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABEDQAAAAAAAAUAAABldGVjdEQNAAAAAAAARQ0AAAAAAAAAAAAARQ0AAAAAAABGDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQw0AAAAAAABIDQAAAAAAAAAAAAAAAPC/"
				],
				[
					970,
					1,
					"insert_completion",
					{
						"completion": "js_line_segment_detector_draw_segments",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "js_line_segment_detector_draw_segments"
					},
					"AgAAACkNAAAAAAAAKQ0AAAAAAAAdAAAAanNfbGluZV9zZWdtZW50X2RldGVjdG9yX2RyYXcpDQAAAAAAAE8NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARg0AAAAAAABGDQAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATw0AAAAAAABPDQAAAAAAAAAAAAAAAPC/"
				],
				[
					990,
					1,
					"cut",
					null,
					"AQAAABoAAAAAAAAAGgAAAAAAAAAYAAAAI2luY2x1ZGUgImpzX2FsbG9jLmhwcCIK",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					2,
					"paste",
					null,
					"AgAAABoAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAABKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAUAAABhbGxvY0AAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"insert",
					{
						"characters": "\nJSRect"
					},
					"CAAAAKELAAAAAAAAogsAAAAAAAAAAAAAogsAAAAAAACkCwAAAAAAAAAAAACkCwAAAAAAAKULAAAAAAAAAAAAAKULAAAAAAAApgsAAAAAAAAAAAAApgsAAAAAAACnCwAAAAAAAAAAAACnCwAAAAAAAKgLAAAAAAAAAAAAAKgLAAAAAAAAqQsAAAAAAAAAAAAAqQsAAAAAAACqCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQsAAAAAAAChCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1012,
					1,
					"insert",
					{
						"characters": "Data"
					},
					"BAAAAKoLAAAAAAAAqwsAAAAAAAAAAAAAqwsAAAAAAACsCwAAAAAAAAAAAACsCwAAAAAAAK0LAAAAAAAAAAAAAK0LAAAAAAAArgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgsAAAAAAACqCwAAAAAAAAAAAAAAAG1A"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": " rect"
					},
					"BQAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACwCwAAAAAAAAAAAACwCwAAAAAAALELAAAAAAAAAAAAALELAAAAAAAAsgsAAAAAAAAAAAAAsgsAAAAAAACzCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1016,
					1,
					"insert",
					{
						"characters": "SSizeData"
					},
					"CgAAAKULAAAAAAAApgsAAAAAAAAAAAAApgsAAAAAAACmCwAAAAAAAA4AAABTUmVjdERhdGEgcmVjdKYLAAAAAAAApwsAAAAAAAAAAAAApwsAAAAAAACoCwAAAAAAAAAAAACoCwAAAAAAAKkLAAAAAAAAAAAAAKkLAAAAAAAAqgsAAAAAAAAAAAAAqgsAAAAAAACrCwAAAAAAAAAAAACrCwAAAAAAAKwLAAAAAAAAAAAAAKwLAAAAAAAArQsAAAAAAAAAAAAArQsAAAAAAACuCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswsAAAAAAAClCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": " size;"
					},
					"BgAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACwCwAAAAAAAAAAAACwCwAAAAAAALELAAAAAAAAAAAAALELAAAAAAAAsgsAAAAAAAAAAAAAsgsAAAAAAACzCwAAAAAAAAAAAACzCwAAAAAAALQLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABMMAAAAAAAAFAwAAAAAAAAAAAAAFAwAAAAAAAAVDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwwAAAAAAAATDAAAAAAAAAAAAAAAAGJA"
				],
				[
					1021,
					1,
					"insert",
					{
						"characters": "js_size_reawd"
					},
					"DQAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAB0MAAAAAAAAHgwAAAAAAAAAAAAAHgwAAAAAAAAfDAAAAAAAAAAAAAAfDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAIQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAAAAA"
				],
				[
					1022,
					2,
					"left_delete",
					null,
					"AgAAACAMAAAAAAAAIAwAAAAAAAABAAAAZB8MAAAAAAAAHwwAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAIQwAAAAAAAAhDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAB8MAAAAAAAAIAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwwAAAAAAAAfDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACAMAAAAAAAAIgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAwAAAAAAAAgDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAACEMAAAAAAAAIgwAAAAAAAAAAAAAIgwAAAAAAAAjDAAAAAAAAAAAAAAjDAAAAAAAACQMAAAAAAAAAAAAACQMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQwAAAAAAAAhDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1026,
					1,
					"insert",
					{
						"characters": " argv"
					},
					"BQAAACUMAAAAAAAAJgwAAAAAAAAAAAAAJgwAAAAAAAAnDAAAAAAAAAAAAAAnDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAAKQwAAAAAAAAAAAAAKQwAAAAAAAAqDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQwAAAAAAAAlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACoMAAAAAAAALAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgwAAAAAAAAqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1028,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACsMAAAAAAAALAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwwAAAAAAAArDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC0MAAAAAAAALgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQwAAAAAAAAtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " &size"
					},
					"BgAAAC4MAAAAAAAALwwAAAAAAAAAAAAALwwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADEMAAAAAAAAAAAAADEMAAAAAAAAMgwAAAAAAAAAAAAAMgwAAAAAAAAzDAAAAAAAAAAAAAAzDAAAAAAAADQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgwAAAAAAAAuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADUMAAAAAAAANgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQwAAAAAAAA1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADYMAAAAAAAANwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgwAAAAAAAA2DAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "jsbindings.hpp",
			"settings":
			{
				"buffer_size": 19659,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					51,
					1,
					"paste",
					null,
					"AgAAAL8gAAAAAAAAySAAAAAAAAAAAAAAySAAAAAAAADJIAAAAAAAABUAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8gAAAAAAAA1CAAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAANEgAAAAAAAA0SAAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIgAAAAAAAA0iAAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"paste",
					null,
					"AgAAAGYhAAAAAAAAcCEAAAAAAAAAAAAAcCEAAAAAAABwIQAAAAAAABUAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYhAAAAAAAAeyEAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAHghAAAAAAAAeCEAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkhAAAAAAAAeSEAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAH4hAAAAAAAAfiEAAAAAAAAGAAAAIHB0ciAr",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4hAAAAAAAAhCEAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAAAjAAAAAAAAACMAAAAAAAAeAAAAcmVpbnRlcnByZXRfY2FzdDxUPihieXRlX3B0ciAr",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAjAAAAAAAAHiMAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAAUjAAAAAAAABSMAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYjAAAAAAAABiMAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"paste",
					null,
					"AgAAAMgiAAAAAAAA0iIAAAAAAAAAAAAA0iIAAAAAAADSIgAAAAAAABUAAABzdGQ6OnJhbmdlczo6c3VicmFuZ2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgiAAAAAAAA3SIAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"paste",
					null,
					"AgAAAKghAAAAAAAAsiEAAAAAAAAAAAAAsiEAAAAAAACyIQAAAAAAABYAAAAgc3RkOjpyYW5nZXM6OnN1YnJhbmdl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKghAAAAAAAAviEAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKghAAAAAAAAqSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKghAAAAAAAAqCEAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJogAAAAAAAAmyAAAAAAAAAAAAAAmyAAAAAAAACbIAAAAAAAABcAAAAjaWYgQ1hYX1NUQU5EQVJEID49IDIwCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJogAAAAAAAAsSAAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAN4iAAAAAAAA3yIAAAAAAAAAAAAA3yIAAAAAAADfIgAAAAAAAAcAAAAjZW5kaWYK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4iAAAAAAAA5SIAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8iAAAAAAAA3yIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_typed_array.hpp",
			"settings":
			{
				"buffer_size": 14294,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					110,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGAXAAAAAAAAYRcAAAAAAAAAAAAAYRcAAAAAAABjFwAAAAAAAAAAAABjFwAAAAAAAGQXAAAAAAAAAAAAAGQXAAAAAAAAZhcAAAAAAAAAAAAAYRcAAAAAAABhFwAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAXAAAAAAAAYBcAAAAAAAAAAAAAAABoQA"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "TYPED"
					},
					"BgAAAGEXAAAAAAAAYhcAAAAAAAAAAAAAYxcAAAAAAABjFwAAAAAAAAIAAAAgIGIXAAAAAAAAYxcAAAAAAAAAAAAAYxcAAAAAAABkFwAAAAAAAAAAAABkFwAAAAAAAGUXAAAAAAAAAAAAAGUXAAAAAAAAZhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEXAAAAAAAAYRcAAAAAAAAAAAAAAAAwQA"
				],
				[
					113,
					4,
					"left_delete",
					null,
					"BAAAAGUXAAAAAAAAZRcAAAAAAAABAAAARGQXAAAAAAAAZBcAAAAAAAABAAAARWMXAAAAAAAAYxcAAAAAAAABAAAAUGIXAAAAAAAAYhcAAAAAAAABAAAAWQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYXAAAAAAAAZhcAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "ypedArrayProps"
					},
					"DgAAAGIXAAAAAAAAYxcAAAAAAAAAAAAAYxcAAAAAAABkFwAAAAAAAAAAAABkFwAAAAAAAGUXAAAAAAAAAAAAAGUXAAAAAAAAZhcAAAAAAAAAAAAAZhcAAAAAAABnFwAAAAAAAAAAAABnFwAAAAAAAGgXAAAAAAAAAAAAAGgXAAAAAAAAaRcAAAAAAAAAAAAAaRcAAAAAAABqFwAAAAAAAAAAAABqFwAAAAAAAGsXAAAAAAAAAAAAAGsXAAAAAAAAbBcAAAAAAAAAAAAAbBcAAAAAAABtFwAAAAAAAAAAAABtFwAAAAAAAG4XAAAAAAAAAAAAAG4XAAAAAAAAbxcAAAAAAAAAAAAAbxcAAAAAAABwFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIXAAAAAAAAYhcAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHAXAAAAAAAAchcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAXAAAAAAAAcBcAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "size_t"
					},
					"BgAAAHEXAAAAAAAAchcAAAAAAAAAAAAAchcAAAAAAABzFwAAAAAAAAAAAABzFwAAAAAAAHQXAAAAAAAAAAAAAHQXAAAAAAAAdRcAAAAAAAAAAAAAdRcAAAAAAAB2FwAAAAAAAAAAAAB2FwAAAAAAAHcXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEXAAAAAAAAcRcAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " bte"
					},
					"BAAAAHcXAAAAAAAAeBcAAAAAAAAAAAAAeBcAAAAAAAB5FwAAAAAAAAAAAAB5FwAAAAAAAHoXAAAAAAAAAAAAAHoXAAAAAAAAexcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcXAAAAAAAAdxcAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					3,
					"left_delete",
					null,
					"AwAAAHoXAAAAAAAAehcAAAAAAAABAAAAZXkXAAAAAAAAeRcAAAAAAAABAAAAdHgXAAAAAAAAeBcAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsXAAAAAAAAexcAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "offset,"
					},
					"BwAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAB6FwAAAAAAAHsXAAAAAAAAAAAAAHsXAAAAAAAAfBcAAAAAAAAAAAAAfBcAAAAAAAB9FwAAAAAAAAAAAAB9FwAAAAAAAH4XAAAAAAAAAAAAAH4XAAAAAAAAfxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgXAAAAAAAAeBcAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " size_t"
					},
					"BwAAAH8XAAAAAAAAgBcAAAAAAAAAAAAAgBcAAAAAAACBFwAAAAAAAAAAAACBFwAAAAAAAIIXAAAAAAAAAAAAAIIXAAAAAAAAgxcAAAAAAAAAAAAAgxcAAAAAAACEFwAAAAAAAAAAAACEFwAAAAAAAIUXAAAAAAAAAAAAAIUXAAAAAAAAhhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8XAAAAAAAAfxcAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " byte"
					},
					"BQAAAIYXAAAAAAAAhxcAAAAAAAAAAAAAhxcAAAAAAACIFwAAAAAAAAAAAACIFwAAAAAAAIkXAAAAAAAAAAAAAIkXAAAAAAAAihcAAAAAAAAAAAAAihcAAAAAAACLFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYXAAAAAAAAhhcAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					4,
					"left_delete",
					null,
					"BAAAAIoXAAAAAAAAihcAAAAAAAABAAAAZYkXAAAAAAAAiRcAAAAAAAABAAAAdIgXAAAAAAAAiBcAAAAAAAABAAAAeYcXAAAAAAAAhxcAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsXAAAAAAAAixcAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "length,"
					},
					"BwAAAIcXAAAAAAAAiBcAAAAAAAAAAAAAiBcAAAAAAACJFwAAAAAAAAAAAACJFwAAAAAAAIoXAAAAAAAAAAAAAIoXAAAAAAAAixcAAAAAAAAAAAAAixcAAAAAAACMFwAAAAAAAAAAAACMFwAAAAAAAI0XAAAAAAAAAAAAAI0XAAAAAAAAjhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcXAAAAAAAAhxcAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " size_t"
					},
					"BwAAAI4XAAAAAAAAjxcAAAAAAAAAAAAAjxcAAAAAAACQFwAAAAAAAAAAAACQFwAAAAAAAJEXAAAAAAAAAAAAAJEXAAAAAAAAkhcAAAAAAAAAAAAAkhcAAAAAAACTFwAAAAAAAAAAAACTFwAAAAAAAJQXAAAAAAAAAAAAAJQXAAAAAAAAlRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4XAAAAAAAAjhcAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUXAAAAAAAAlhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUXAAAAAAAAlRcAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "bytes"
					},
					"BQAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAACYFwAAAAAAAJkXAAAAAAAAAAAAAJkXAAAAAAAAmhcAAAAAAAAAAAAAmhcAAAAAAACbFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYXAAAAAAAAlhcAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					5,
					"left_delete",
					null,
					"BQAAAJoXAAAAAAAAmhcAAAAAAAABAAAAc5kXAAAAAAAAmRcAAAAAAAABAAAAZZgXAAAAAAAAmBcAAAAAAAABAAAAdJcXAAAAAAAAlxcAAAAAAAABAAAAeZYXAAAAAAAAlhcAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsXAAAAAAAAmxcAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "elem_size"
					},
					"CQAAAJYXAAAAAAAAlxcAAAAAAAAAAAAAlxcAAAAAAACYFwAAAAAAAAAAAACYFwAAAAAAAJkXAAAAAAAAAAAAAJkXAAAAAAAAmhcAAAAAAAAAAAAAmhcAAAAAAACbFwAAAAAAAAAAAACbFwAAAAAAAJwXAAAAAAAAAAAAAJwXAAAAAAAAnRcAAAAAAAAAAAAAnRcAAAAAAACeFwAAAAAAAAAAAACeFwAAAAAAAJ8XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYXAAAAAAAAlhcAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAKAXAAAAAAAAoRcAAAAAAAAAAAAAoRcAAAAAAACiFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAXAAAAAAAAoBcAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " byte_offset"
					},
					"DAAAAKIXAAAAAAAAoxcAAAAAAAAAAAAAoxcAAAAAAACkFwAAAAAAAAAAAACkFwAAAAAAAKUXAAAAAAAAAAAAAKUXAAAAAAAAphcAAAAAAAAAAAAAphcAAAAAAACnFwAAAAAAAAAAAACnFwAAAAAAAKgXAAAAAAAAAAAAAKgXAAAAAAAAqRcAAAAAAAAAAAAAqRcAAAAAAACqFwAAAAAAAAAAAACqFwAAAAAAAKsXAAAAAAAAAAAAAKsXAAAAAAAArBcAAAAAAAAAAAAArBcAAAAAAACtFwAAAAAAAAAAAACtFwAAAAAAAK4XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIXAAAAAAAAohcAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK4XAAAAAAAAsBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4XAAAAAAAArhcAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "offset,"
					},
					"BwAAAK8XAAAAAAAAsBcAAAAAAAAAAAAAsBcAAAAAAACxFwAAAAAAAAAAAACxFwAAAAAAALIXAAAAAAAAAAAAALIXAAAAAAAAsxcAAAAAAAAAAAAAsxcAAAAAAAC0FwAAAAAAAAAAAAC0FwAAAAAAALUXAAAAAAAAAAAAALUXAAAAAAAAthcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8XAAAAAAAArxcAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " byte_lengt"
					},
					"CwAAALYXAAAAAAAAtxcAAAAAAAAAAAAAtxcAAAAAAAC4FwAAAAAAAAAAAAC4FwAAAAAAALkXAAAAAAAAAAAAALkXAAAAAAAAuhcAAAAAAAAAAAAAuhcAAAAAAAC7FwAAAAAAAAAAAAC7FwAAAAAAALwXAAAAAAAAAAAAALwXAAAAAAAAvRcAAAAAAAAAAAAAvRcAAAAAAAC+FwAAAAAAAAAAAAC+FwAAAAAAAL8XAAAAAAAAAAAAAL8XAAAAAAAAwBcAAAAAAAAAAAAAwBcAAAAAAADBFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYXAAAAAAAAthcAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAMEXAAAAAAAAwhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEXAAAAAAAAwRcAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMIXAAAAAAAAxBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIXAAAAAAAAwhcAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALUXAAAAAAAAthcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUXAAAAAAAAtRcAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					2,
					"left_delete",
					null,
					"AgAAAMUXAAAAAAAAxRcAAAAAAAABAAAAKcQXAAAAAAAAxBcAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYXAAAAAAAAxhcAAAAAAAD////////vfw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "length),"
					},
					"CAAAAMQXAAAAAAAAxRcAAAAAAAAAAAAAxRcAAAAAAADGFwAAAAAAAAAAAADGFwAAAAAAAMcXAAAAAAAAAAAAAMcXAAAAAAAAyBcAAAAAAAAAAAAAyBcAAAAAAADJFwAAAAAAAAAAAADJFwAAAAAAAMoXAAAAAAAAAAAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQXAAAAAAAAxBcAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " ele"
					},
					"BAAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAADOFwAAAAAAAM8XAAAAAAAAAAAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwXAAAAAAAAzBcAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					4,
					"left_delete",
					null,
					"BAAAAM8XAAAAAAAAzxcAAAAAAAABAAAAZc4XAAAAAAAAzhcAAAAAAAABAAAAbM0XAAAAAAAAzRcAAAAAAAABAAAAZcwXAAAAAAAAzBcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAXAAAAAAAA0BcAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " bytes_"
					},
					"BwAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAADOFwAAAAAAAM8XAAAAAAAAAAAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADRFwAAAAAAAAAAAADRFwAAAAAAANIXAAAAAAAAAAAAANIXAAAAAAAA0xcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwXAAAAAAAAzBcAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					1,
					"insert_completion",
					{
						"completion": "bytes_per_element",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bytes_per_element"
					},
					"AgAAAM0XAAAAAAAAzRcAAAAAAAAGAAAAYnl0ZXNfzRcAAAAAAADeFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMXAAAAAAAA0xcAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4XAAAAAAAA4BcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4XAAAAAAAA3hcAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "elem_size"
					},
					"CQAAAN8XAAAAAAAA4BcAAAAAAAAAAAAA4BcAAAAAAADhFwAAAAAAAAAAAADhFwAAAAAAAOIXAAAAAAAAAAAAAOIXAAAAAAAA4xcAAAAAAAAAAAAA4xcAAAAAAADkFwAAAAAAAAAAAADkFwAAAAAAAOUXAAAAAAAAAAAAAOUXAAAAAAAA5hcAAAAAAAAAAAAA5hcAAAAAAADnFwAAAAAAAAAAAADnFwAAAAAAAOgXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8XAAAAAAAA3xcAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkXAAAAAAAA6hcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkXAAAAAAAA6RcAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOoXAAAAAAAA7BcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoXAAAAAAAA6hcAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGEXAAAAAAAAYxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEXAAAAAAAAYRcAAAAAAAAAAAAAAAAAAA"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "explict"
					},
					"BwAAAGMXAAAAAAAAZBcAAAAAAAAAAAAAZBcAAAAAAABlFwAAAAAAAAAAAABlFwAAAAAAAGYXAAAAAAAAAAAAAGYXAAAAAAAAZxcAAAAAAAAAAAAAZxcAAAAAAABoFwAAAAAAAAAAAABoFwAAAAAAAGkXAAAAAAAAAAAAAGkXAAAAAAAAahcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMXAAAAAAAAYxcAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAGkXAAAAAAAAaRcAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoXAAAAAAAAahcAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AgAAAGkXAAAAAAAAahcAAAAAAAAAAAAAahcAAAAAAABrFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkXAAAAAAAAaRcAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGsXAAAAAAAAbBcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsXAAAAAAAAaxcAAAAAAAAAAAAAAADwvw"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkXAAAAAAAAqhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkXAAAAAAAAqRcAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"left_delete",
					null,
					"AQAAAKkXAAAAAAAAqRcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoXAAAAAAAAqhcAAAAAAAAAAAAAAADwvw"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKoXAAAAAAAAqxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoXAAAAAAAAqhcAAAAAAAAAAAAAAADwvw"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAKsXAAAAAAAArBcAAAAAAAAAAAAArBcAAAAAAACtFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsXAAAAAAAAqxcAAAAAAAAAAAAAAADwvw"
				],
				[
					261,
					1,
					"left_delete",
					null,
					"AQAAAKwXAAAAAAAArBcAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0XAAAAAAAArRcAAAAAAAAAAAAAAADwvw"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "Array"
					},
					"BQAAAKwXAAAAAAAArRcAAAAAAAAAAAAArRcAAAAAAACuFwAAAAAAAAAAAACuFwAAAAAAAK8XAAAAAAAAAAAAAK8XAAAAAAAAsBcAAAAAAAAAAAAAsBcAAAAAAACxFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwXAAAAAAAArBcAAAAAAAAAAAAAAADwvw"
				],
				[
					263,
					1,
					"insert_completion",
					{
						"completion": "ArrayBufferProps",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ArrayBufferProps"
					},
					"AgAAAKwXAAAAAAAArBcAAAAAAAAFAAAAQXJyYXmsFwAAAAAAALwXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEXAAAAAAAAsRcAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": " const&"
					},
					"BwAAALwXAAAAAAAAvRcAAAAAAAAAAAAAvRcAAAAAAAC+FwAAAAAAAAAAAAC+FwAAAAAAAL8XAAAAAAAAAAAAAL8XAAAAAAAAwBcAAAAAAAAAAAAAwBcAAAAAAADBFwAAAAAAAAAAAADBFwAAAAAAAMIXAAAAAAAAAAAAAMIXAAAAAAAAwxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwXAAAAAAAAvBcAAAAAAAAAAAAAAADwvw"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " props"
					},
					"BgAAAMMXAAAAAAAAxBcAAAAAAAAAAAAAxBcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAMYXAAAAAAAAxxcAAAAAAAAAAAAAxxcAAAAAAADIFwAAAAAAAAAAAADIFwAAAAAAAMkXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMXAAAAAAAAwxcAAAAAAAAAAAAAAADwvw"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABMYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMYAAAAAAAAExgAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " buffer"
					},
					"BwAAABQYAAAAAAAAFRgAAAAAAAAAAAAAFRgAAAAAAAAWGAAAAAAAAAAAAAAWGAAAAAAAABcYAAAAAAAAAAAAABcYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAZGAAAAAAAAAAAAAAZGAAAAAAAABoYAAAAAAAAAAAAABoYAAAAAAAAGxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABsYAAAAAAAAHRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsYAAAAAAAAGxgAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "props"
					},
					"BQAAABwYAAAAAAAAHRgAAAAAAAAAAAAAHRgAAAAAAAAeGAAAAAAAAAAAAAAeGAAAAAAAAB8YAAAAAAAAAAAAAB8YAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAhGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAADwvw"
				],
				[
					292,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIYAAAAAAAAIhgAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_mat.cpp",
			"settings":
			{
				"buffer_size": 44596,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJV+AAAAAAAAln4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJV+AAAAAAAAlX4AAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"paste",
					null,
					"AQAAAJZ+AAAAAAAAon4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJZ+AAAAAAAAln4AAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKJ+AAAAAAAApH4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKJ+AAAAAAAAon4AAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "*m"
					},
					"AgAAAKN+AAAAAAAApH4AAAAAAAAAAAAApH4AAAAAAAClfgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKN+AAAAAAAAo34AAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAKZ+AAAAAAAApn4AAAAAAAANAAAAIHJhbmdlLnNpemUoKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKZ+AAAAAAAAs34AAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					2,
					"left_delete",
					null,
					"AgAAABp9AAAAAAAAGn0AAAAAAAA/AAAAICAgIHN0ZDo6cmFuZ2VzOjpzdWJyYW5nZTx1aW50OF90Kj4gcmFuZ2UoYmVnaW4oKm0pLCBlbmQoKm0pKTsKGX0AAAAAAAAZfQAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABp9AAAAAAAAWX0AAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGqBAAAAAAAAb4EAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 4060,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"",
					null,
					"AQAAAHcOAAAAAAAAhQ4AAAAAAAAKAAAAcWpzLW9wZW5jdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcOAAAAAAAAgQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"",
					null,
					"AQAAALkOAAAAAAAAxw4AAAAAAAAKAAAAcWpzLW9wZW5jdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkOAAAAAAAAww4AAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"",
					null,
					"AQAAAFYPAAAAAAAAZA8AAAAAAAAKAAAAcWpzLW9wZW5jdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYPAAAAAAAAYA8AAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"",
					null,
					"AQAAAMMPAAAAAAAA0Q8AAAAAAAAKAAAAcWpzLW9wZW5jdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMPAAAAAAAAzQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"",
					null,
					"AQAAAAQQAAAAAAAAEhAAAAAAAAAKAAAAcWpzLW9wZW5jdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQQAAAAAAAADhAAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtEAAAY21ha2VfbWluaW11bV9yZXF1aXJlZChWRVJTSU9OIDMuMCkKcHJvamVjdChxanMtb3BlbmN2KQoKc2V0KERJU0FCTEVfV0VSUk9SIFRSVUUgQ0FDSEUgQk9PTCAiRGlzYWJsZSAtV2Vycm9yIGZsYWciIEZPUkNFKQoKc2V0KENNQUtFX0JVSUxEX1RZUEUgIkRlYnVnIiBDQUNIRSBTVFJJTkcgImJ1aWxkIHR5cGUiKQoKc2V0X3Byb3BlcnR5KENBQ0hFIENNQUtFX0JVSUxEX1RZUEUgUFJPUEVSVFkgU1RSSU5HUyBEZWJ1ZyBSZWxlYXNlIE1pblNpemVSZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVsV2l0aERlYkluZm8pCgpzZXQocXVpY2tqc19zb3VyY2VzX3Jvb3QgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L3F1aWNranMpCgppZihOT1QgQ01BS0VfQlVJTERfVFlQRSBPUiBDTUFLRV9CVUlMRF9UWVBFIFNUUkVRVUFMICIiKQogIHNldChDTUFLRV9CVUlMRF9UWVBFICJEZWJ1ZyIpCmVuZGlmKE5PVCBDTUFLRV9CVUlMRF9UWVBFIE9SIENNQUtFX0JVSUxEX1RZUEUgU1RSRVFVQUwgIiIpCgppZihXSU4zMikKICBzZXQoTElCV1MyXzMyIHdzMl8zMikKZWxzZShXSU4zMikKCmVuZGlmKFdJTjMyKQoKaW5jbHVkZShGaW5kVGhyZWFkcykKaW5jbHVkZShGaW5kUGtnQ29uZmlnKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9GdW5jdGlvbnMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0NoZWNrRmxhZ3MuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0ZpbmRRdWlja0pTLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9KU0JpbmRpbmdzLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9PcGVuQ1YuY21ha2UpCgppZihFTkFCTEVfQ0NBQ0hFKQogIGluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0NDYWNoZS5jbWFrZSkKICBlbmFibGVfY2NhY2hlKCkKZW5kaWYoRU5BQkxFX0NDQUNIRSkKCmNoZWNrX3NpemUoImxvbmciIFNJWkVPRl9MT05HKQpjaGVja19zaXplKCJsb25nIGxvbmciIFNJWkVPRl9MT05HX0xPTkcpCmNoZWNrX3NpemUoInNpemVfdCIgU0laRU9GX1NJWkVfVCkKCmlmKE5PVCBQT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFKQogIHNldChQT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFIE9OKQplbmRpZihOT1QgUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERSkKb3B0aW9uKEJVSUxEX1NIQVJFRF9MSUJTICJCdWlsZCBzaGFyZWQgbGlicmFyaWVzIiBPTikKCm1lc3NhZ2UoIlRocmVhZCBsaWJyYXJ5OiAke0NNQUtFX1RIUkVBRF9MSUJTX0lOSVR9IikKaWYoQ01BS0VfVEhSRUFEX0xJQlNfSU5JVCkKICBzZXQoTElCUFRIUkVBRCAke0NNQUtFX1RIUkVBRF9MSUJTX0lOSVR9KQplbmRpZihDTUFLRV9USFJFQURfTElCU19JTklUKQoKY2hlY2tfbGlicmFyeV9leGlzdHMobSBhdGFuMiAvdXNyL2xpYiBIQVZFX0xJQk0pCmlmKEhBVkVfTElCTSkKICBzZXQoTElCTSBtKQogICMgbWVzc2FnZSgiRm91bmQgbWF0aCBsaWJyYXJ5OiAke0xJQk19IikKZW5kaWYoSEFWRV9MSUJNKQoKY2hlY2tfbGlicmFyeV9leGlzdHMoZGwgZGxvcGVuIC91c3IvbGliIEhBVkVfTElCREwpCmlmKEhBVkVfTElCREwpCiAgc2V0KExJQkRMIGRsKQogICMgbWVzc2FnZSgiRm91bmQgZGxmY24gbGlicmFyeTogJHtMSUJETH0iKQplbmRpZihIQVZFX0xJQkRMKQoKY2hlY2tfbGlicmFyeV9leGlzdHMoanNvbi1jcHAgWk40WUFNTDZkZXRhaWw5bm9kZV9kYXRhOXJlc2V0X21hcEV2IC91c3IKICAgICAgICAgICAgICAgICAgICAgSlNPTl9DUFApCgpmaW5kX3F1aWNranMoKQpmaW5kX29wZW5jdigpCgpzZXQoQ01BS0VfSU5TVEFMTF9SUEFUSCAiJHtPUEVOQ1ZfTElCX0RJUn0iCiAgICBDQUNIRSBQQVRIICJCdWlsZCB3aXRoIGluc3RhbGwgcnBhdGgiIEZPUkNFKQoKaW5jbHVkZV9kaXJlY3Rvcmllcygke09QRU5DVl9JTkNMVURFX0RJUlN9ICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfSkKCmNoZWNrX2N4eF9zdGFuZGFyZF9mbGFnKCkKCnN0cmluZyhSRUdFWCBSRVBMQUNFICIgLVdhbGwiICIiIENNQUtFX0NfRkxBR1MgIiR7Q01BS0VfQ19GTEFHU30iKQpzdHJpbmcoUkVHRVggUkVQTEFDRSAiIC1XYWxsIiAiIiBDTUFLRV9DWFhfRkxBR1MgIiR7Q01BS0VfQ1hYX0ZMQUdTfSIpCgpjaGVja19ub3dhcm5fZmxhZygtV25vLXVudXNlZC12YWx1ZSkKY2hlY2tfbm93YXJuX2ZsYWcoLVduby11bnVzZWQtdmFyaWFibGUpCgppZigiJHtDTUFLRV9DWFhfQ09NUElMRVJfSUR9IiBNQVRDSEVTICIuKkNsYW5nLioiKQogIGNoZWNrX25vd2Fybl9mbGFnKC1Xbm8tZGVwcmVjYXRlZC1hbm9uLWVudW0tZW51bS1jb252ZXJzaW9uKQogIGNoZWNrX25vd2Fybl9mbGFnKC1Xbm8tZXh0ZXJuLWMtY29tcGF0KQogIGNoZWNrX25vd2Fybl9mbGFnKC1Xbm8taW1wbGljaXQtaW50LWZsb2F0LWNvbnZlcnNpb24pCiAgY2hlY2tfbm93YXJuX2ZsYWcoLVduby1kZXByZWNhdGVkLWVudW0tZW51bS1jb252ZXJzaW9uKQplbmRpZigiJHtDTUFLRV9DWFhfQ09NUElMRVJfSUR9IiBNQVRDSEVTICIuKkNsYW5nLioiKQoKIyBkdW1wKENNQUtFX0NfRkxBR1MgQ01BS0VfQ1hYX0ZMQUdTKSBkdW1wKENNQUtFX0NYWF9GTEFHU19ERUJVRykKCmNoZWNrX3BpY19mbGFnKFFVSUNLSlNfTU9EVUxFX0NGTEFHUykKCnNldChERUJVR19PVVRQVVQgVFJVRSBDQUNIRSBCT09MICJEZWJ1ZyBvdXRwdXQiIEZPUkNFKQpzZXQoREVCVUdfTUFUIEZBTFNFIENBQ0hFIEJPT0wgIkRlYnVnIGN2OjpNYXQiIEZPUkNFKQoKY2hlY2tfb3B0X25vbmVfZmxhZygpCgpjaGVja19kZWJ1Z19nZGJfZmxhZygpCgpjaGVja19jX2NvbXBpbGVyX2ZsYWcoIi1mbHRvIiBIQVNfRl9MVE9fRkxBRykKCmlmKEhBU19GX0xUT19GTEFHKQogIG9wdGlvbihFTkFCTEVfTFRPICJFbmFibGUgbGluay10aW1lIG9wdGltaXphdGlvbiIgT0ZGKQplbmRpZihIQVNfRl9MVE9fRkxBRykKCmlmKEVOQUJMRV9MVE8pCiAgc2V0KENNQUtFX0NfRkxBR1MgIiR7Q01BS0VfQ19GTEFHU30gLWZsdG8iKQogIHNldChDTUFLRV9FWEVfTElOS0VSX0ZMQUdTICIke0NNQUtFX0VYRV9MSU5LRVJfRkxBR1N9IC1mbHRvIikKZW5kaWYoRU5BQkxFX0xUTykKCmxpbmtfZGlyZWN0b3JpZXMoQkVGT1JFICR7cXVpY2tqc19CSU5BUllfRElSfSkKCmxpbmtfZGlyZWN0b3JpZXMoIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfS9xdWlja2pzIikKCnNldChRVUlDS0pTX0xJQlJBUlkgcXVpY2tqcykKbGlua19kaXJlY3Rvcmllcygke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn0vcXVpY2tqcykKCm9wdGlvbihRVUlDS0pTX01PRFVMRVMgIkJ1aWxkIC5zbyBtb2R1bGVzIGZvciBxdWlja2pzIiBPTikKCm9wdGlvbihCVUlMRF9RVUlDS0pTICJCdWlsZCBRdWlja0pTIiBPTikKCmZpbGUoR0xPQiBPUEVOQ1ZfU09VUkNFUyAqLmhwcCAqLmNwcCkKIyBkdW1wKE9QRU5DVl9TT1VSQ0VTKQoKZHVtcChRVUlDS0pTX01PRFVMRV9DRkxBR1MgRl9QSUMpCgpsaXN0KEZJTFRFUiBPUEVOQ1ZfU09VUkNFUyBFWENMVURFIFJFR0VYICJpbml0X21vZHVsZVxcLmNwcCIpCmxpc3QoRklMVEVSIE9QRU5DVl9TT1VSQ0VTIEVYQ0xVREUgUkVHRVggImpzXFwuW2hjXXBwIikKCmFkZF9saWJyYXJ5KHF1aWNranMtb3BlbmN2IFNUQVRJQyAke09QRU5DVl9TT1VSQ0VTfSkKc2V0X3RhcmdldF9wcm9wZXJ0aWVzKAogIHF1aWNranMtb3BlbmN2IFBST1BFUlRJRVMgUFJFRklYICIiIE9VVFBVVF9OQU1FIG9wZW5jdgogICAgICAgICAgICAgICAgICAgICAgICBDT01QSUxFX0ZMQUdTICIke1FVSUNLSlNfTU9EVUxFX0NGTEFHU30gJHtGX1BJQ30iKQp0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyhxdWlja2pzLW9wZW5jdgogICAgICAgICAgICAgICAgICAgICAgICAgICBQUklWQVRFIENPTkZJR19QUkVGSVg9IiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9IikKCgppbnN0YWxsKFRBUkdFVFMgcXVpY2tqcy1vcGVuY3YgREVTVElOQVRJT04gbGliL3F1aWNranMpCnNldChqc2JpbmRpbmdzX0xJQlJBUklFUyBxdWlja2pzLW9wZW5jdikKCiMgbWFrZV9zdGF0aWNfbW9kdWxlKG9wZW5jdiBpbml0X21vZHVsZS5jcHApCm1ha2Vfc2hhcmVkX21vZHVsZShvcGVuY3YgaW5pdF9tb2R1bGUuY3BwKQoAAAAAAAAAAPAPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0QAAAAAAAAbRAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"",
					null,
					"AQAAADEOAAAAAAAAPQ4AAAAAAAAOAAAAcXVpY2tqcy1vcGVuY3Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAPw4AAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"",
					null,
					"AQAAAG4OAAAAAAAAeg4AAAAAAAAOAAAAcXVpY2tqcy1vcGVuY3Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4OAAAAAAAAfA4AAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"",
					null,
					"AQAAAPEOAAAAAAAA/Q4AAAAAAAAOAAAAcXVpY2tqcy1vcGVuY3Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEOAAAAAAAA/w4AAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"",
					null,
					"AQAAAEAPAAAAAAAATA8AAAAAAAAOAAAAcXVpY2tqcy1vcGVuY3Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAPAAAAAAAATg8AAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"",
					null,
					"AQAAAH8PAAAAAAAAiw8AAAAAAAAOAAAAcXVpY2tqcy1vcGVuY3Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8PAAAAAAAAjQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"",
					null,
					"AQAAADEOAAAAAAAAOw4AAAAAAAAMAAAAcWpzLW9wZW5jdi1h",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAPQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"",
					null,
					"AQAAAGwOAAAAAAAAdg4AAAAAAAAMAAAAcWpzLW9wZW5jdi1h",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwOAAAAAAAAeA4AAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"",
					null,
					"AQAAAO0OAAAAAAAA9w4AAAAAAAAMAAAAcWpzLW9wZW5jdi1h",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0OAAAAAAAA+Q4AAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"",
					null,
					"AQAAADoPAAAAAAAARA8AAAAAAAAMAAAAcWpzLW9wZW5jdi1h",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoPAAAAAAAARg8AAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"",
					null,
					"AQAAAHcPAAAAAAAAgQ8AAAAAAAAMAAAAcWpzLW9wZW5jdi1h",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcPAAAAAAAAgw8AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "cmake/JSBindings.cmake",
			"settings":
			{
				"buffer_size": 5704,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					52,
					1,
					"paste",
					null,
					"AQAAAEkNAAAAAAAAgQ0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkNAAAAAAAASQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " \""
					},
					"AwAAAFMNAAAAAAAAVA0AAAAAAAAAAAAAVA0AAAAAAABUDQAAAAAAAAgAAABTVEFUVVMgIlQNAAAAAAAAVQ0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMNAAAAAAAAWw0AAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"paste",
					null,
					"AgAAAFUNAAAAAAAAZQ0AAAAAAAAAAAAAZQ0AAAAAAABlDQAAAAAAACMAAABDb25maWd1cmVkIG1vZHVsZXM6ICR7TU9EVUxFX05BTUVTfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUNAAAAAAAAeA0AAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAMUDAAAAAAAA5QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUDAAAAAAAAxQMAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"paste",
					null,
					"AgAAANIDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADkAwAAAAAAABAAAABtYWtlX2pzX2JpbmRpbmdz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIDAAAAAAAA4gMAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " ${FNAM"
					},
					"BwAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAADmAwAAAAAAAOcDAAAAAAAAAAAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAADpAwAAAAAAAOoDAAAAAAAAAAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "E})"
					},
					"AwAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA7AMAAAAAAADtAwAAAAAAAAAAAADtAwAAAAAAAO4DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsDAAAAAAAA6wMAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAOQDAAAAAAAA5AMAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUDAAAAAAAA5QMAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"cut",
					null,
					"AQAAAMUDAAAAAAAAxQMAAAAAAAAtAAAAICAgbWVzc2FnZSggIm1ha2Vfc2hhcmVkX21vZHVsZSgke0ZOQU1FfSkiKQog",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUDAAAAAAAA8gMAAAAAAAAAAAAAAAAgQA"
				],
				[
					94,
					1,
					"paste",
					null,
					"AQAAAMUDAAAAAAAA8gMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUDAAAAAAAAxQMAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"paste",
					null,
					"AQAAALkJAAAAAAAA5gkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkJAAAAAAAAuQkAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"paste",
					null,
					"AgAAAMYJAAAAAAAA2AkAAAAAAAAAAAAA2AkAAAAAAADYCQAAAAAAABIAAABtYWtlX3NoYXJlZF9tb2R1bGU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYJAAAAAAAA2AkAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACBFgAAaWYoV0lOMzIgT1IgTUlOR1cpCiAgc2V0KFFVSUNLSlNfTElCUkFSWV9ESVIgIiR7cXVpY2tqc19CSU5BUllfRElSfSIpCiAgc2V0KFFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUyAicXVpY2tqcyIpCmVuZGlmKFdJTjMyIE9SIE1JTkdXKQoKc2V0KFFVSUNLSlNfTU9EVUxFX0NGTEFHUyAiLWZ2aXNpYmlsaXR5PWhpZGRlbiIpCgpmdW5jdGlvbihjb25maWdfc2hhcmVkX21vZHVsZSBUQVJHRVRfTkFNRSkKICBpZihRVUlDS0pTX0xJQlJBUllfRElSKQogICAgdGFyZ2V0X2xpbmtfZGlyZWN0b3JpZXMoJHtUQVJHRVRfTkFNRX0gUFJJVkFURSAiJHtRVUlDS0pTX0xJQlJBUllfRElSfSIpCiAgZW5kaWYoUVVJQ0tKU19MSUJSQVJZX0RJUikKICBpZihRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVMpCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtRVUlDS0pTX01PRFVMRV9ERVBFTkRFTkNJRVN9KQogIGVuZGlmKFFVSUNLSlNfTU9EVUxFX0RFUEVOREVOQ0lFUykKICBpZihRVUlDS0pTX01PRFVMRV9DRkxBR1MpCiAgICB0YXJnZXRfY29tcGlsZV9vcHRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgIiR7UVVJQ0tKU19NT0RVTEVfQ0ZMQUdTfSIpCiAgZW5kaWYoUVVJQ0tKU19NT0RVTEVfQ0ZMQUdTKQplbmRmdW5jdGlvbihjb25maWdfc2hhcmVkX21vZHVsZSBUQVJHRVRfTkFNRSkKCnNldChKU19CSU5ESU5HU19DT01NT04gY29sb3IuaHBwIGdlb21ldHJ5LmhwcCBqcy5ocHAganNfYWxsb2MuaHBwIGpzX2FycmF5LmhwcCBqc19jb250b3VyLmhwcCBqc19saW5lLmhwcCBqc19wb2ludC5ocHAganNfcmVjdC5ocHAganNfc2l6ZS5ocHAganNfdHlwZWRfYXJyYXkuaHBwIGpzYmluZGluZ3MuaHBwIHBzaW1wbC5ocHAgdXRpbC5ocHApCnNldChqc19saW5lX1NPVVJDRVMgbGluZS5jcHAgbGluZS5ocHApCgpmdW5jdGlvbihtYWtlX3NoYXJlZF9tb2R1bGUgRk5BTUUpCiAgICBtZXNzYWdlKCAibWFrZV9zaGFyZWRfbW9kdWxlKCR7Rk5BTUV9KSIpCiBzdHJpbmcoUkVHRVggUkVQTEFDRSAiXyIgIi0iIE5BTUUgIiR7Rk5BTUV9IikKICBzdHJpbmcoVE9VUFBFUiAiJHtGTkFNRX0iIFVOQU1FKQoKICBzZXQoVEFSR0VUX05BTUUgcXVpY2tqcy0ke05BTUV9KQoKICBpZihBUkdOKQogICAgc2V0KFNPVVJDRVMgJHtBUkdOfSkKICBlbHNlKEFSR04pCiAgICBzZXQoU09VUkNFUyBqc18ke0ZOQU1FfS5jcHAgJHtqc18ke0ZOQU1FfV9TT1VSQ0VTfSBqc2JpbmRpbmdzLmNwcCB1dGlsLmNwcCBqcy5ocHAganMuY3BwICR7SlNfQklORElOR1NfQ09NTU9OfSkKICBlbmRpZihBUkdOKQoKICBhZGRfbGlicmFyeSgke1RBUkdFVF9OQU1FfSBTSEFSRUQgJHtTT1VSQ0VTfSkKCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKCR7VEFSR0VUX05BTUV9ICR7anNiaW5kaW5nc19MSUJSQVJJRVN9ICR7T3BlbkNWX0xJQlN9KQogIHNldF90YXJnZXRfcHJvcGVydGllcygke1RBUkdFVF9OQU1FfSBQUk9QRVJUSUVTIFBSRUZJWCAiIiAjIEJVSUxEX1JQQVRIICIke09QRU5DVl9MSUJSQVJZX0RJUlN9OiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSUEFUSCAiJHtPUEVOQ1ZfTElCUkFSWV9ESVJTfToke0NNQUtFX0lOU1RBTExfUFJFRklYfS9saWI6JHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0vbGliL3F1aWNranMiIE9VVFBVVF9OQU1FICIke05BTUV9IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT01QSUxFX0ZMQUdTICIke1FVSUNLSlNfTU9EVUxFX0NGTEFHU30iIEJVSUxEX1JQQVRIICIke0NNQUtFX0NVUlJFTlRfQklOQVJZX0RJUn06JHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9OiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfS9xdWlja2pzOiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfS9xdWlja2pzIikKICB0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucygke1RBUkdFVF9OQU1FfSBQUklWQVRFIEpTXyR7VU5BTUV9X01PRFVMRSBDT05GSUdfUFJFRklYPSIke0NNQUtFX0lOU1RBTExfUFJFRklYfSIpCiAgaW5zdGFsbChUQVJHRVRTICR7VEFSR0VUX05BTUV9IERFU1RJTkFUSU9OIGxpYi9xdWlja2pzIFBFUk1JU1NJT05TIE9XTkVSX1JFQUQgT1dORVJfV1JJVEUgT1dORVJfRVhFQ1VURSBHUk9VUF9SRUFEIEdST1VQX0VYRUNVVEUgV09STERfUkVBRCBXT1JMRF9FWEVDVVRFKQoKICBjb25maWdfc2hhcmVkX21vZHVsZSgke1RBUkdFVF9OQU1FfSkKCiAgaWYoT3BlbkNWX0ZPVU5EKQogICAgdGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZXMoJHtUQVJHRVRfTkFNRX0gUFVCTElDICR7T3BlbkNWX0lOQ0xVREVfRElSU30pCiAgICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtPcGVuQ1ZfTElCU30pCiAgZW5kaWYoKQplbmRmdW5jdGlvbigpCgpmdW5jdGlvbihtYWtlX3N0YXRpY19tb2R1bGUgRk5BTUUpCiAgICBtZXNzYWdlKCAibWFrZV9zdGF0aWNfbW9kdWxlKCR7Rk5BTUV9KSIpCiAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIl8iICItIiBOQU1FICIke0ZOQU1FfSIpCiAgc3RyaW5nKFRPVVBQRVIgIiR7Rk5BTUV9IiBVTkFNRSkKCiAgc2V0KFRBUkdFVF9OQU1FIHF1aWNranMtJHtOQU1FfS1zdGF0aWMpCgogIGlmKEFSR04pCiAgICBzZXQoU09VUkNFUyAke0FSR059KQogIGVsc2UoQVJHTikKICAgIHNldChTT1VSQ0VTIGpzXyR7Rk5BTUV9LmNwcCAke2pzXyR7Rk5BTUV9X1NPVVJDRVN9IGpzYmluZGluZ3MuY3BwIHV0aWwuY3BwIGpzLmhwcCBqcy5jcHAgJHtKU19CSU5ESU5HU19DT01NT059KQogIGVuZGlmKEFSR04pCgogIGFkZF9saWJyYXJ5KCR7VEFSR0VUX05BTUV9IFNUQVRJQyAke1NPVVJDRVN9KQoKICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtqc2JpbmRpbmdzX0xJQlJBUklFU30gJHtPcGVuQ1ZfTElCU30pCiAgc2V0X3RhcmdldF9wcm9wZXJ0aWVzKCR7VEFSR0VUX05BTUV9IFBST1BFUlRJRVMgUFJFRklYICIiIE9VVFBVVF9OQU1FICIke05BTUV9IiBDT01QSUxFX0ZMQUdTICIke1FVSUNLSlNfTU9EVUxFX0NGTEFHU30iKQogIHRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgQ09ORklHX1BSRUZJWD0iJHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0iKQogIGluc3RhbGwoVEFSR0VUUyAke1RBUkdFVF9OQU1FfSBERVNUSU5BVElPTiBsaWIvcXVpY2tqcykKCiAgY29uZmlnX3NoYXJlZF9tb2R1bGUoJHtUQVJHRVRfTkFNRX0pCgogIGlmKE9wZW5DVl9GT1VORCkKICAgIHRhcmdldF9pbmNsdWRlX2RpcmVjdG9yaWVzKCR7VEFSR0VUX05BTUV9IFBVQkxJQyAke09wZW5DVl9JTkNMVURFX0RJUlN9KQogICAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKCR7VEFSR0VUX05BTUV9ICR7T3BlbkNWX0xJQlN9KQogIGVuZGlmKCkKZW5kZnVuY3Rpb24oKQoKZnVuY3Rpb24obWFrZV9qc19iaW5kaW5ncykKICAgbWVzc2FnZSggIm1ha2VfanNfYmluZGluZ3MiKQogZmlsZShHTE9CIEpTX0JJTkRJTkdTX1NPVVJDRVMgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2pzXyouY3BwKQoKICBmb3JlYWNoKE1PRCAke0pTX0JJTkRJTkdTX1NPVVJDRVN9KQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIlxcLmNwcCIgIiIgTU9EICIke01PRH0iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi4qL2pzXyIgIiIgTU9EICIke01PRH0iKQogICAgbGlzdChBUFBFTkQgSlNfQklORElOR1NfTU9EVUxFUyAke01PRH0pCiAgZW5kZm9yZWFjaChNT0QgJHtKU19CSU5ESU5HU19TT1VSQ0VTfSkKCiAgZm9yZWFjaChKU19NT0RVTEUgJHtKU19CSU5ESU5HU19NT0RVTEVTfSkKICAgIG1ha2Vfc2hhcmVkX21vZHVsZSgke0pTX01PRFVMRX0pCiAgZW5kZm9yZWFjaCgpCgogIHN0cmluZyhSRVBMQUNFICI7IiAiICIgTU9EVUxFX05BTUVTICIke0pTX0JJTkRJTkdTX01PRFVMRVN9IikKICBtZXNzYWdlKFNUQVRVUyAiQ29uZmlndXJlZCBtb2R1bGVzOiAke01PRFVMRV9OQU1FU30iKQoKICBhZGRfZGVwZW5kZW5jaWVzKHF1aWNranMtcmVjdCBxdWlja2pzLXBvaW50IHF1aWNranMtc2l6ZSkKICAjIGFkZF9kZXBlbmRlbmNpZXMocXVpY2tqcy1jb250b3VyIHF1aWNranMtbWF0IHF1aWNranMtcmVjdCBxdWlja2pzLXBvaW50KQoKICBhZGRfZGVwZW5kZW5jaWVzKHF1aWNranMtY29udG91ciBxdWlja2pzLW1hdCkKCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtbWF0IHF1aWNranMtc2l6ZSkKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1wb2ludC1pdGVyYXRvciBxdWlja2pzLWxpbmUgcXVpY2tqcy1wb2ludCkKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1jb250b3VyIHF1aWNranMtcG9pbnQtaXRlcmF0b3IgcXVpY2tqcy1tYXQpCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtbGluZSBxdWlja2pzLXBvaW50KQogIHRhcmdldF9saW5rX2xpYnJhcmllcyhxdWlja2pzLXJlY3QgcXVpY2tqcy1zaXplIHF1aWNranMtcG9pbnQpCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtdmlkZW8tY2FwdHVyZSBxdWlja2pzLW1hdCkKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1jdiBxdWlja2pzLW1hdCBxdWlja2pzLWNvbnRvdXIgcXVpY2tqcy1yZWN0IHF1aWNranMtbGluZSkKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1kcmF3IHF1aWNranMtbWF0IHF1aWNranMtY29udG91ciBxdWlja2pzLXNpemUpCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtY2xhaGUgcXVpY2tqcy1tYXQgcXVpY2tqcy1zaXplKQogIHRhcmdldF9saW5rX2xpYnJhcmllcyhxdWlja2pzLXVtYXQgcXVpY2tqcy1tYXQpCiAgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtc3ViZGl2MmQgcXVpY2tqcy1jb250b3VyKQoKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1jdiBwbmcpCgogICMgYWRkX2RlcGVuZGVuY2llcyhxdWlja2pzLXBvaW50LWl0ZXJhdG9yIHF1aWNranMtY29udG91ciBxdWlja2pzLW1hdCkKCiAgZmlsZShHTE9CIEpTX0JJTkRJTkdTX1NPVVJDRVMgY29sb3IuY3BwIGRhdGEuY3BwIGdlb21ldHJ5LmNwcCBqc2JpbmRpbmdzLmNwcCBqc18qLmNwcCBqcy5jcHAgbGluZS5jcHAgbWF0cml4LmNwcCBwb2x5Z29uLmNwcCAqLmggKi5ocHApCgogICMgTWFpbgogIGFkZF9saWJyYXJ5KHF1aWNranMtb3BlbmN2IE1PRFVMRSAke0pTX0JJTkRJTkdTX1NPVVJDRVN9KQogIGNvbmZpZ19zaGFyZWRfbW9kdWxlKHF1aWNranMtb3BlbmN2KQoKICBzZXRfdGFyZ2V0X3Byb3BlcnRpZXMocXVpY2tqcy1vcGVuY3YgUFJPUEVSVElFUyAjIENPTVBJTEVfRkxBR1MgIi1mdmlzaWJpbGl0eT1oaWRkZW4iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUlBBVEggIiR7T1BFTkNWX0xJQlJBUllfRElSU306JHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0vbGliOiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9L2xpYi9xdWlja2pzIiBPVVRQVVRfTkFNRSAib3BlbmN2IiBQUkVGSVggIiIpCiAgdGFyZ2V0X2NvbXBpbGVfZGVmaW5pdGlvbnMocXVpY2tqcy1vcGVuY3YgUFJJVkFURSAtRENPTkZJR19QUkVGSVg9XCIke0NNQUtFX0lOU1RBTExfUFJFRklYfVwiKQoKICB0YXJnZXRfbGlua19saWJyYXJpZXMocXVpY2tqcy1vcGVuY3YgJHtPcGVuQ1ZfTElCU30pCiAgIyBsaW5rCmVuZGZ1bmN0aW9uKG1ha2VfanNfYmluZGluZ3MpCgAAAAAAAAAASBYAAAAAAAAAAAAAAAAAAAAAAABIFgAAAAAAAAAAAAAAAAAAAAAAAEgWAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgJAAAAAAAA2AkAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "Searching 115 files for \"std::ranges\" (regex, case sensitive)\n\n/home/roman/Projects/qjs-opencv/js_array.hpp:\n  621      JS_GetOwnPropertyNames(ctx, &names, &plen, obj, JS_GPN_ENUM_ONLY);\n  622  \n  623:     for(auto name : std::ranges::subrange<JSPropertyEnum>(names, names + plen)) {\n  624        JSValue value = JS_GetProperty(ctx, obj, name.atom);\n  625        T prop;\n\n/home/roman/Projects/qjs-opencv/util.hpp:\n  315  \n  316  template<class T>\n  317: static inline std::ranges::subrange<T>\n  318  sized_range(T ptr, size_t len) {\n  319:   return std::ranges::subrange<T>(ptr, ptr + len);\n  320  }\n  321  \n  322  template<class T>\n  323: static inline std::ranges::subrange<T*>\n  324  argument_range(int argc, T* argv) {\n  325:   return std::ranges::subrange<T*>(argv, argv + argc);\n  326  }\n  327  \n  328  template<class T>\n  329: static inline std::ranges::subrange<T*>\n  330  range(T* begin, T* end) {\n  331:   return std::ranges::subrange<T*>(begin, end);\n  332  }\n  333  \n  334  template<class Container>\n  335: static inline std::ranges::subrange<typename Container::value_type*>\n  336  range(Container& c) {\n  337:   return std::ranges::subrange<typename Container::value_type*>(begin(c), end(c));\n  338  }\n  339  \n  340  template<class T, class Container>\n  341: static inline std::ranges::subrange<T>\n  342  range(Container& c) {\n  343:   return std::ranges::subrange<T>(reinterpret_cast<T>(begin(c)), reinterpret_cast<T>(end(c)));\n  344  }\n  345  #endif\n\n/home/roman/Projects/qjs-opencv/js_slice_iterator.hpp:\n   21  struct JSSliceIteratorData {\n   22    uint8_t* ptr;\n   23:   std::ranges::subrange<uint8_t*> range;\n   24    int num_elems;\n   25    size_t increment;\n\n/home/roman/Projects/qjs-opencv/jsbindings.hpp:\n  266  \n  267  #if CXX_STANDARD >= 20\n  268: static inline std::ranges::subrange<uint8_t*>\n  269  js_arraybuffer_range(JSContext* ctx, JSValueConst buffer) {\n  270    size_t size;\n  271    uint8_t* ptr;\n  272    ptr = JS_GetArrayBuffer(ctx, &size, buffer);\n  273:   return std::ranges::subrange<uint8_t*>(ptr, ptr + size);\n  274  }\n  275  \n  276  template<class T>\n  277: static inline std::ranges::subrange<T>\n  278  js_arraybuffer_range(JSContext* ctx, JSValueConst buffer) {\n  279    typedef typename std::remove_pointer<T>::type value_type;\n  ...\n  282    byte_ptr = JS_GetArrayBuffer(ctx, &size, buffer);\n  283    size = round_to(size, sizeof(value_type));\n  284:   return std::ranges::subrange<T>(reinterpret_cast<T>(byte_ptr), reinterpret_cast<T>(byte_ptr + size));\n  285  }\n  286  #endif\n\n16 matches across 4 files\n\n\nSearching 115 files for \"ArrayBufferProps\" (regex, case sensitive)\n\n/home/roman/Projects/qjs-opencv/js_typed_array.hpp:\n  206  \n  207    size_t byte_offset, byte_length, bytes_per_element;\n  208:   ArrayBufferProps buffer;\n  209  \n  210    template<class T>\n\n/home/roman/Projects/qjs-opencv/jsbindings.hpp:\n  419  }\n  420  \n  421: struct ArrayBufferProps {\n  422    uint8_t* ptr;\n  423    size_t len;\n  424  \n  425:   ArrayBufferProps(uint8_t* _ptr, size_t _len) : ptr(_ptr), len(_len) {}\n  426  };\n  427  \n  ...\n  437  }\n  438  \n  439: static inline ArrayBufferProps\n  440  js_arraybuffer_props(JSContext* ctx, JSValueConst obj) {\n  441    uint8_t* ptr;\n  442    size_t len;\n  443    ptr = JS_GetArrayBuffer(ctx, &len, obj);\n  444:   return ArrayBufferProps(ptr, len);\n  445  }\n  446  \n\n5 matches across 2 files\n\n\nSearching 115 files for \"ArrayBufferProps\" (regex, case sensitive)\n\n/home/roman/Projects/qjs-opencv/js_typed_array.hpp:\n  206  \n  207    size_t byte_offset, byte_length, bytes_per_element;\n  208:   ArrayBufferProps buffer;\n  209  \n  210    template<class T>\n\n/home/roman/Projects/qjs-opencv/jsbindings.hpp:\n  419  }\n  420  \n  421: struct ArrayBufferProps {\n  422    uint8_t* ptr;\n  423    size_t len;\n  424  \n  425:   ArrayBufferProps(uint8_t* _ptr, size_t _len) : ptr(_ptr), len(_len) {}\n  426  };\n  427  \n  ...\n  437  }\n  438  \n  439: static inline ArrayBufferProps\n  440  js_arraybuffer_props(JSContext* ctx, JSValueConst obj) {\n  441    uint8_t* ptr;\n  442    size_t len;\n  443    ptr = JS_GetArrayBuffer(ctx, &len, obj);\n  444:   return ArrayBufferProps(ptr, len);\n  445  }\n  446  \n\n5 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 4182,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "js_array.hpp",
			"settings":
			{
				"buffer_size": 17576,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					39,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJxCAAAAAAAAnEIAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					2,
					"right_delete",
					null,
					"AgAAADBCAAAAAAAAMEIAAAAAAAAUAAAAc3RkOjpyYW5nZXM6OnN1YnJhbmcwQgAAAAAAADBCAAAAAAAAAQAAAGU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADBCAAAAAAAAREIAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "range_view"
					},
					"CgAAADBCAAAAAAAAMUIAAAAAAAAAAAAAMUIAAAAAAAAyQgAAAAAAAAAAAAAyQgAAAAAAADNCAAAAAAAAAAAAADNCAAAAAAAANEIAAAAAAAAAAAAANEIAAAAAAAA1QgAAAAAAAAAAAAA1QgAAAAAAADZCAAAAAAAAAAAAADZCAAAAAAAAN0IAAAAAAAAAAAAAN0IAAAAAAAA4QgAAAAAAAAAAAAA4QgAAAAAAADlCAAAAAAAAAAAAADlCAAAAAAAAOkIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADBCAAAAAAAAMEIAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					4,
					"right_delete",
					null,
					"BAAAAFJCAAAAAAAAUkIAAAAAAAAFAAAAbmFtZXNSQgAAAAAAAFJCAAAAAAAAAQAAACBSQgAAAAAAAFJCAAAAAAAAAQAAACtSQgAAAAAAAFJCAAAAAAAAAQAAACA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFJCAAAAAAAAV0IAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_line.cpp",
			"settings":
			{
				"buffer_size": 14369,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					3,
					"right_delete",
					null,
					"AwAAANoEAAAAAAAA2gQAAAAAAAAGAAAAcmFuZ2Vz2gQAAAAAAADaBAAAAAAAAAEAAAA62gQAAAAAAADaBAAAAAAAAAEAAAA6",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoEAAAAAAAA4AQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "args,."
					},
					"BwAAAOEEAAAAAAAA4gQAAAAAAAAAAAAA4gQAAAAAAADiBAAAAAAAAAQAAABhcmdz4gQAAAAAAADjBAAAAAAAAAAAAADjBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADmBAAAAAAAAAAAAADmBAAAAAAAAOcEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEEAAAAAAAA5QQAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcEAAAAAAAA5wQAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					3,
					"left_delete",
					null,
					"AwAAAOgEAAAAAAAA6AQAAAAAAAABAAAAYecEAAAAAAAA5wQAAAAAAAABAAAAIOYEAAAAAAAA5gQAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkEAAAAAAAA6QQAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " args"
					},
					"BQAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYEAAAAAAAA5gQAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					7,
					"left_delete",
					null,
					"BwAAAOoEAAAAAAAA6gQAAAAAAAABAAAAc+kEAAAAAAAA6QQAAAAAAAABAAAAZ+gEAAAAAAAA6AQAAAAAAAABAAAAcucEAAAAAAAA5wQAAAAAAAABAAAAYeYEAAAAAAAA5gQAAAAAAAABAAAAIOUEAAAAAAAA5QQAAAAAAAABAAAALOQEAAAAAAAA5AQAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsEAAAAAAAA6wQAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "v,"
					},
					"AgAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADmBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " argv+std::"
					},
					"CwAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAADrBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYEAAAAAAAA5gQAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "min(4,argc)"
					},
					"CwAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAD2BAAAAAAAAPcEAAAAAAAAAAAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEEAAAAAAAA8QQAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"cut",
					null,
					"AQAAADoEAAAAAAAAOgQAAAAAAAA3AAAAICBhdXRvIGFyZ3MgPSBhcmd1bWVudF9yYW5nZShzdGQ6Om1pbig0LCBhcmdjKSwgYXJndik7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAcQQAAAAAAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_contour.cpp",
			"settings":
			{
				"buffer_size": 32405,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					248,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANpqAAAAAAAA2moAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "point_proto,"
					},
					"DAAAAEYXAAAAAAAARxcAAAAAAAAAAAAARxcAAAAAAABIFwAAAAAAAAAAAABIFwAAAAAAAEkXAAAAAAAAAAAAAEkXAAAAAAAAShcAAAAAAAAAAAAAShcAAAAAAABLFwAAAAAAAAAAAABLFwAAAAAAAEwXAAAAAAAAAAAAAEwXAAAAAAAATRcAAAAAAAAAAAAATRcAAAAAAABOFwAAAAAAAAAAAABOFwAAAAAAAE8XAAAAAAAAAAAAAE8XAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABRFwAAAAAAAAAAAABRFwAAAAAAAFIXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhcAAAAAAABGFwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFIXAAAAAAAAUxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhcAAAAAAABSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " point_pr"
					},
					"CQAAAHosAAAAAAAAeywAAAAAAAAAAAAAeywAAAAAAAB8LAAAAAAAAAAAAAB8LAAAAAAAAH0sAAAAAAAAAAAAAH0sAAAAAAAAfiwAAAAAAAAAAAAAfiwAAAAAAAB/LAAAAAAAAAAAAAB/LAAAAAAAAIAsAAAAAAAAAAAAAIAsAAAAAAAAgSwAAAAAAAAAAAAAgSwAAAAAAACCLAAAAAAAAAAAAACCLAAAAAAAAIMsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeiwAAAAAAAB6LAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "oto,"
					},
					"BAAAAIMsAAAAAAAAhCwAAAAAAAAAAAAAhCwAAAAAAACFLAAAAAAAAAAAAACFLAAAAAAAAIYsAAAAAAAAAAAAAIYsAAAAAAAAhywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgywAAAAAAACDLAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "point_proto,"
					},
					"DAAAAKA6AAAAAAAAoToAAAAAAAAAAAAAoToAAAAAAACiOgAAAAAAAAAAAACiOgAAAAAAAKM6AAAAAAAAAAAAAKM6AAAAAAAApDoAAAAAAAAAAAAApDoAAAAAAAClOgAAAAAAAAAAAAClOgAAAAAAAKY6AAAAAAAAAAAAAKY6AAAAAAAApzoAAAAAAAAAAAAApzoAAAAAAACoOgAAAAAAAAAAAACoOgAAAAAAAKk6AAAAAAAAAAAAAKk6AAAAAAAAqjoAAAAAAAAAAAAAqjoAAAAAAACrOgAAAAAAAAAAAACrOgAAAAAAAKw6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoDoAAAAAAACgOgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "point_proto,"
					},
					"DAAAAB1NAAAAAAAAHk0AAAAAAAAAAAAAHk0AAAAAAAAfTQAAAAAAAAAAAAAfTQAAAAAAACBNAAAAAAAAAAAAACBNAAAAAAAAIU0AAAAAAAAAAAAAIU0AAAAAAAAiTQAAAAAAAAAAAAAiTQAAAAAAACNNAAAAAAAAAAAAACNNAAAAAAAAJE0AAAAAAAAAAAAAJE0AAAAAAAAlTQAAAAAAAAAAAAAlTQAAAAAAACZNAAAAAAAAAAAAACZNAAAAAAAAJ00AAAAAAAAAAAAAJ00AAAAAAAAoTQAAAAAAAAAAAAAoTQAAAAAAAClNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHU0AAAAAAAAdTQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "point_proto,"
					},
					"DAAAABpSAAAAAAAAG1IAAAAAAAAAAAAAG1IAAAAAAAAcUgAAAAAAAAAAAAAcUgAAAAAAAB1SAAAAAAAAAAAAAB1SAAAAAAAAHlIAAAAAAAAAAAAAHlIAAAAAAAAfUgAAAAAAAAAAAAAfUgAAAAAAACBSAAAAAAAAAAAAACBSAAAAAAAAIVIAAAAAAAAAAAAAIVIAAAAAAAAiUgAAAAAAAAAAAAAiUgAAAAAAACNSAAAAAAAAAAAAACNSAAAAAAAAJFIAAAAAAAAAAAAAJFIAAAAAAAAlUgAAAAAAAAAAAAAlUgAAAAAAACZSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGlIAAAAAAAAaUgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACZSAAAAAAAAJ1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJlIAAAAAAAAmUgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAJ1IAAAAAAAAnUgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "js_contour.hpp",
			"settings":
			{
				"buffer_size": 2117,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					2,
					"left_delete",
					null,
					"AgAAAOUAAAAAAAAA5QAAAAAAAABCAAAAZXh0ZXJuICJDIiBWSVNJQkxFIGludCBqc19jb250b3VyX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsK5AAAAAAAAADkAAAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAAAAAAAAACcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAC8AAAAAAAAASQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "js_point_iterator.hpp",
			"settings":
			{
				"buffer_size": 770,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJoBAAAAAAAAmwEAAAAAAAAAAAAAmwEAAAAAAACbAQAAAAAAABwAAABjb25zdCBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoBAAAAAAAAtgEAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACwAQAAAAAAAAgAAAA+JiByYW5nZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8BAAAAAAAAtwEAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "fg"
					},
					"AgAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALABAAAAAAAAsAEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAALEBAAAAAAAAsQEAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIBAAAAAAAAsgEAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "irst,"
					},
					"BQAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEBAAAAAAAAsQEAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALYBAAAAAAAAtwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYBAAAAAAAAtgEAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAALcBAAAAAAAA0QEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcBAAAAAAAAtwEAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "last"
					},
					"BQAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADNAQAAAAAAAAUAAABmaXJzdM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "::iut"
					},
					"BQAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAALIBAAAAAAAAsgEAAAAAAAABAAAAdLEBAAAAAAAAsQEAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMBAAAAAAAAswEAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "terator"
					},
					"BwAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAC2AQAAAAAAALcBAAAAAAAAAAAAALcBAAAAAAAAuAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEBAAAAAAAAsQEAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgBAAAAAAAAuQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgBAAAAAAAAuAEAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"right_delete",
					null,
					"AQAAALkBAAAAAAAAuQEAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkBAAAAAAAAuQEAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAALgBAAAAAAAAuAEAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkBAAAAAAAAuQEAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"paste",
					null,
					"AgAAANMBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADdAQAAAAAAAAEAAAAq",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQBAAAAAAAA0wEAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACvAQAAAAAAAAoAAAA6Oml0ZXJhdG9y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAAuAEAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"paste",
					null,
					"AgAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADLAQAAAAAAAAoAAAA6Oml0ZXJhdG9y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAA1AEAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAVAwAAI2lmbmRlZiBKU19QT0lOVF9JVEVSQVRPUl9IUFAKI2RlZmluZSBKU19QT0lOVF9JVEVSQVRPUl9IUFAKCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPHJhbmdlcz4KCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfcG9pbnRfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CmVudW0gSlNQb2ludEl0ZXJhdG9yTWFnaWMgeyBORVhUX1BPSU5UID0gMCwgTkVYVF9MSU5FIH07CgpleHRlcm4gSlNWYWx1ZSBwb2ludF9pdGVyYXRvcl9wcm90bywgcG9pbnRfaXRlcmF0b3JfY2xhc3M7CmV4dGVybiBKU0NsYXNzSUQganNfcG9pbnRfaXRlcmF0b3JfY2xhc3NfaWQ7CgpWSVNJQkxFIEpTVmFsdWUganNfcG9pbnRfaXRlcmF0b3JfbmV3KEpTQ29udGV4dCogY3R4LCAgSlNQb2ludERhdGE8ZG91YmxlPiogZmlyc3QsIEpTUG9pbnREYXRhPGRvdWJsZT4qIGxhc3QsIGludCBtYWdpYyk7CgppbnQganNfcG9pbnRfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiogbSk7CgpKU01vZHVsZURlZioganNfaW5pdF9tb2R1bGVfcG9pbnRfaXRlcmF0b3IoSlNDb250ZXh0KiwgY29uc3QgY2hhciogbW9kdWxlX25hbWUpOwp9CgpzdHJ1Y3QgSlNQb2ludEl0ZXJhdG9yRGF0YSA6IHB1YmxpYyBzdGQ6OnBhaXI8SlNQb2ludERhdGE8ZG91YmxlPiosIEpTUG9pbnREYXRhPGRvdWJsZT4qPiB7CiAgSlNQb2ludEl0ZXJhdG9yTWFnaWMgbWFnaWM7Cn07CgojZW5kaWYgLyogZGVmaW5lZChKU19QT0lOVF9JVEVSQVRPUl9IUFApICovAAAAAAAAAAAUAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAwAAI2lmbmRlZiBKU19QT0lOVF9JVEVSQVRPUl9IUFAKI2RlZmluZSBKU19QT0lOVF9JVEVSQVRPUl9IUFAKCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKI2luY2x1ZGUgPHJhbmdlcz4KCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfcG9pbnRfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CmVudW0gSlNQb2ludEl0ZXJhdG9yTWFnaWMgeyBORVhUX1BPSU5UID0gMCwgTkVYVF9MSU5FIH07CgpleHRlcm4gSlNWYWx1ZSBwb2ludF9pdGVyYXRvcl9wcm90bywgcG9pbnRfaXRlcmF0b3JfY2xhc3M7CmV4dGVybiBKU0NsYXNzSUQganNfcG9pbnRfaXRlcmF0b3JfY2xhc3NfaWQ7CgpWSVNJQkxFIEpTVmFsdWUganNfcG9pbnRfaXRlcmF0b3JfbmV3KEpTQ29udGV4dCogY3R4LCBKU1BvaW50RGF0YTxkb3VibGU+KiBmaXJzdCwgSlNQb2ludERhdGE8ZG91YmxlPiogbGFzdCwgaW50IG1hZ2ljKTsKCmludCBqc19wb2ludF9pdGVyYXRvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKCkpTTW9kdWxlRGVmKiBqc19pbml0X21vZHVsZV9wb2ludF9pdGVyYXRvcihKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7Cn0KCnN0cnVjdCBKU1BvaW50SXRlcmF0b3JEYXRhIDogcHVibGljIHN0ZDo6cGFpcjxKU1BvaW50RGF0YTxkb3VibGU+KiwgSlNQb2ludERhdGE8ZG91YmxlPio+IHsKICBKU1BvaW50SXRlcmF0b3JNYWdpYyBtYWdpYzsKfTsKCiNlbmRpZiAvKiBkZWZpbmVkKEpTX1BPSU5UX0lURVJBVE9SX0hQUCkgKi8AAAAAAAAAAAIDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAACAwAAI2lmbmRlZiBKU19QT0lOVF9JVEVSQVRPUl9IUFAKI2RlZmluZSBKU19QT0lOVF9JVEVSQVRPUl9IUFAKCiNpbmNsdWRlICJqc2JpbmRpbmdzLmhwcCIKCmV4dGVybiAiQyIgVklTSUJMRSBpbnQganNfcG9pbnRfaXRlcmF0b3JfaW5pdChKU0NvbnRleHQqLCBKU01vZHVsZURlZiopOwoKZXh0ZXJuICJDIiB7CmVudW0gSlNQb2ludEl0ZXJhdG9yTWFnaWMgeyBORVhUX1BPSU5UID0gMCwgTkVYVF9MSU5FIH07CgpleHRlcm4gSlNWYWx1ZSBwb2ludF9pdGVyYXRvcl9wcm90bywgcG9pbnRfaXRlcmF0b3JfY2xhc3M7CmV4dGVybiBKU0NsYXNzSUQganNfcG9pbnRfaXRlcmF0b3JfY2xhc3NfaWQ7CgpWSVNJQkxFIEpTVmFsdWUganNfcG9pbnRfaXRlcmF0b3JfbmV3KEpTQ29udGV4dCogY3R4LCBKU1BvaW50RGF0YTxkb3VibGU+KiBmaXJzdCwgSlNQb2ludERhdGE8ZG91YmxlPiogbGFzdCwgaW50IG1hZ2ljKTsKCmludCBqc19wb2ludF9pdGVyYXRvcl9pbml0KEpTQ29udGV4dCosIEpTTW9kdWxlRGVmKiBtKTsKCkpTTW9kdWxlRGVmKiBqc19pbml0X21vZHVsZV9wb2ludF9pdGVyYXRvcihKU0NvbnRleHQqLCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSk7Cn0KCnN0cnVjdCBKU1BvaW50SXRlcmF0b3JEYXRhIDogcHVibGljIHN0ZDo6cGFpcjxKU1BvaW50RGF0YTxkb3VibGU+KiwgSlNQb2ludERhdGE8ZG91YmxlPio+IHsKICBKU1BvaW50SXRlcmF0b3JNYWdpYyBtYWdpYzsKfTsKCiNlbmRpZiAvKiBkZWZpbmVkKEpTX1BPSU5UX0lURVJBVE9SX0hQUCkgKi8AAAAAAAAAAAIDAAAAAAAAAAAAAAAAAAAAAAAAAgMAAAAAAAAAAAAAAAAAAAAAAAACAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_point_iterator.cpp",
			"settings":
			{
				"buffer_size": 6009,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAKcBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADdAQAAAAAAADkAAABjb25zdCBzdGQ6OnJhbmdlczo6c3VicmFuZ2U8SlNQb2ludERhdGE8ZG91YmxlPio+JiByYW5nZSw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcBAAAAAAAA4AEAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "first"
					},
					"BgAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC7AwAAAAAAAA0AAAByYW5nZS5iZWdpbigpuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoDAAAAAAAAxwMAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "last"
					},
					"BQAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADRAwAAAAAAAAsAAAByYW5nZS5lbmQoKdEDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAADTAwAAAAAAANQDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANADAAAAAAAA2wMAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQDAAAAAAAA1AMAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQDAAAAAAAA1AMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "js_rect.cpp",
			"settings":
			{
				"buffer_size": 18864,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					79,
					1,
					"paste",
					null,
					"AgAAAF8qAAAAAAAAbSoAAAAAAAAAAAAAbSoAAAAAAABtKgAAAAAAAA4AAABhcmd1bWVudF9yYW5nZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8qAAAAAAAAbSoAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEqAAAAAAAAwSoAAAAAAAAAAAAAAAB1QA"
				],
				[
					96,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAJSQAAI2luY2x1ZGUgImpzYmluZGluZ3MuaHBwIgojaW5jbHVkZSAianNfcmVjdC5ocHAiCiNpbmNsdWRlICJqc19zaXplLmhwcCIKI2luY2x1ZGUgImpzX3BvaW50LmhwcCIKI2luY2x1ZGUgImpzX2FsbG9jLmhwcCIKI2luY2x1ZGUgImpzX2FycmF5LmhwcCIKI2luY2x1ZGUgImpzX3R5cGVkX2FycmF5LmhwcCIKI2luY2x1ZGUgInV0aWwuaHBwIgoKZXh0ZXJuICJDIiB7CkpTVmFsdWUgcmVjdF9wcm90byA9IEpTX1VOREVGSU5FRCwgcmVjdF9jbGFzcyA9IEpTX1VOREVGSU5FRDsKSlNDbGFzc0lEIGpzX3JlY3RfY2xhc3NfaWQgPSAwOwp9CgpleHRlcm4gIkMiIFZJU0lCTEUgSlNWYWx1ZQpqc19yZWN0X25ldyhKU0NvbnRleHQqIGN0eCwgZG91YmxlIHgsIGRvdWJsZSB5LCBkb3VibGUgdywgZG91YmxlIGgpIHsKICBKU1ZhbHVlIHJldDsKICBKU1JlY3REYXRhPGRvdWJsZT4qIHM7CgogIGlmKEpTX0lzVW5kZWZpbmVkKHJlY3RfcHJvdG8pKQogICAganNfcmVjdF9pbml0KGN0eCwgTlVMTCk7CgogIHJldCA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCByZWN0X3Byb3RvLCBqc19yZWN0X2NsYXNzX2lkKTsKCiAgcyA9IGpzX2FsbG9jYXRlPEpTUmVjdERhdGE8ZG91YmxlPj4oY3R4KTsKCiAgbmV3KHMpIEpTUmVjdERhdGE8ZG91YmxlPigpOwogIHMtPnggPSB4IDw9IERCTF9FUFNJTE9OID8gMCA6IHg7CiAgcy0+eSA9IHkgPD0gREJMX0VQU0lMT04gPyAwIDogeTsKICBzLT53aWR0aCA9IHcgPD0gREJMX0VQU0lMT04gPyAwIDogdzsKICBzLT5oZWlnaHQgPSBoIDw9IERCTF9FUFNJTE9OID8gMCA6IGg7CgogIEpTX1NldE9wYXF1ZShyZXQsIHMpOwogIHJldHVybiByZXQ7Cn0KClZJU0lCTEUgSlNWYWx1ZQpqc19yZWN0X3dyYXAoSlNDb250ZXh0KiBjdHgsIGNvbnN0IEpTUmVjdERhdGE8ZG91YmxlPiYgcmVjdCkgewogIHJldHVybiBqc19yZWN0X25ldyhjdHgsIHJlY3QueCwgcmVjdC55LCByZWN0LndpZHRoLCByZWN0LmhlaWdodCk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3RfY3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QqIGFyZ3YpIHsKICBkb3VibGUgeCA9IDAsIHkgPSAwLCB3ID0gMCwgaCA9IDA7CiAgSlNSZWN0RGF0YTxkb3VibGU+IHJlY3QgPSB7MCwgMCwgMCwgMH07CiAgaW50IG9wdGluZCA9IDA7CgogIGlmKGFyZ2MgPiAwKSB7CiAgICBpZighanNfcmVjdF9yZWFkKGN0eCwgYXJndlswXSwgJnJlY3QpKSB7CiAgICAgIEpTUG9pbnREYXRhPGRvdWJsZT4gcG9pbnQsIHBvaW50MjsKICAgICAgSlNTaXplRGF0YTxkb3VibGU+IHNpemU7CiAgICAgIHdoaWxlKG9wdGluZCA8IGFyZ2MpIHsKICAgICAgICBpZihKU19Jc051bWJlcihhcmd2W29wdGluZF0pICYmIEpTX0lzTnVtYmVyKGFyZ3Zbb3B0aW5kICsgMV0pKSB7CiAgICAgICAgICBpZihvcHRpbmQgPT0gMCkgewogICAgICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmeCwgYXJndltvcHRpbmRdKTsKICAgICAgICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJnksIGFyZ3Zbb3B0aW5kICsgMV0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJncsIGFyZ3Zbb3B0aW5kXSk7CiAgICAgICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZoLCBhcmd2W29wdGluZCArIDFdKTsKICAgICAgICAgIH0KICAgICAgICAgIG9wdGluZCArPSAyOwogICAgICAgIH0gZWxzZSBpZihqc19wb2ludF9yZWFkKGN0eCwgYXJndltvcHRpbmRdLCBvcHRpbmQgPT0gMCA/ICZwb2ludCA6ICZwb2ludDIpKSB7CiAgICAgICAgICBpZihvcHRpbmQgPT0gMCkgewogICAgICAgICAgICB4ID0gcG9pbnQueDsKICAgICAgICAgICAgeSA9IHBvaW50Lnk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB3ID0gcG9pbnQyLnggLSB4OwogICAgICAgICAgICBoID0gcG9pbnQyLnkgLSB5OwogICAgICAgICAgfQogICAgICAgICAgb3B0aW5kKys7CiAgICAgICAgfQoKICAgICAgICBlbHNlIGlmKGpzX3NpemVfcmVhZChjdHgsIGFyZ3Zbb3B0aW5kXSwgJnNpemUpKSB7CiAgICAgICAgICB3ID0gc2l6ZS53aWR0aDsKICAgICAgICAgIGggPSBzaXplLmhlaWdodDsKICAgICAgICAgIG9wdGluZCsrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBvcHRpbmQrKzsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBqc19yZWN0X25ldyhjdHgsIHgsIHksIHcsIGgpOwp9CgpWSVNJQkxFIEpTUmVjdERhdGE8ZG91YmxlPioKanNfcmVjdF9kYXRhKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdmFsKSB7CiAgcmV0dXJuIHN0YXRpY19jYXN0PEpTUmVjdERhdGE8ZG91YmxlPio+KEpTX0dldE9wYXF1ZTIoY3R4LCB2YWwsIGpzX3JlY3RfY2xhc3NfaWQpKTsKfQoKZW51bSB7IFBST1BfWCA9IDAsIFBST1BfWSwgUFJPUF9XSURUSCwgUFJPUF9IRUlHSFQsIFBST1BfWDIsIFBST1BfWTIsIFBST1BfUE9TLCBQUk9QX1NJWkUgfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3RfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIEpTUmVjdERhdGE8ZG91YmxlPiogczsKCiAgaWYoKHMgPSBzdGF0aWNfY2FzdDxKU1JlY3REYXRhPGRvdWJsZT4qPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3JlY3RfY2xhc3NfaWQpKSkgPT0gbnVsbHB0cikKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBQUk9QX1g6IHsKICAgICAgcmV0ID0gSlNfTmV3RmxvYXQ2NChjdHgsIHMtPngpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9ZOiB7CiAgICAgIHJldCA9IEpTX05ld0Zsb2F0NjQoY3R4LCBzLT55KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBST1BfV0lEVEg6IHsKICAgICAgcmV0ID0gSlNfTmV3RmxvYXQ2NChjdHgsIHMtPndpZHRoKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBST1BfSEVJR0hUOiB7CiAgICAgIHJldCA9IEpTX05ld0Zsb2F0NjQoY3R4LCBzLT5oZWlnaHQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9YMjogewogICAgICByZXQgPSBKU19OZXdGbG9hdDY0KGN0eCwgcy0+eCArIHMtPndpZHRoKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBST1BfWTI6IHsKICAgICAgcmV0ID0gSlNfTmV3RmxvYXQ2NChjdHgsIHMtPnkgKyBzLT5oZWlnaHQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9QT1M6IHsKICAgICAgcmV0ID0ganNfcG9pbnRfbmV3KGN0eCwgcy0+eCwgcy0+eSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUk9QX1NJWkU6IHsKICAgICAgcmV0ID0ganNfc2l6ZV9uZXcoY3R4LCBzLT53aWR0aCwgcy0+aGVpZ2h0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3Rfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWwsIGludCBtYWdpYykgewogIEpTUmVjdERhdGE8ZG91YmxlPiogczsKICBkb3VibGUgdjsKICBpZigocyA9IHN0YXRpY19jYXN0PEpTUmVjdERhdGE8ZG91YmxlPio+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVjdF9jbGFzc19pZCkpKSA9PSBudWxscHRyKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYoSlNfVG9GbG9hdDY0KGN0eCwgJnYsIHZhbCkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUFJPUF9YOiB7CiAgICAgIHMtPnggPSB2OwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9ZOiB7CiAgICAgIHMtPnkgPSB2OwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9XSURUSDogewogICAgICBzLT53aWR0aCA9IHY7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBQUk9QX0hFSUdIVDogewogICAgICBzLT5oZWlnaHQgPSB2OwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9YMjogewogICAgICBzLT53aWR0aCA9IHYgLSBzLT54OwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgUFJPUF9ZMjogewogICAgICBzLT5oZWlnaHQgPSB2IC0gcy0+eTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBST1BfUE9TOiB7CiAgICAgIEpTUG9pbnREYXRhPGRvdWJsZT4gcG9pbnQ7CiAgICAgIGpzX3BvaW50X3JlYWQoY3R4LCB2YWwsICZwb2ludCk7CiAgICAgIHMtPnggPSBwb2ludC54OwogICAgICBzLT55ID0gcG9pbnQueTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFBST1BfU0laRTogewogICAgICBKU1NpemVEYXRhPGRvdWJsZT4gc2l6ZTsKICAgICAganNfc2l6ZV9yZWFkKGN0eCwgdmFsLCAmc2l6ZSk7CiAgICAgIHMtPndpZHRoID0gc2l6ZS53aWR0aDsKICAgICAgcy0+aGVpZ2h0ID0gc2l6ZS5oZWlnaHQ7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIEpTX1VOREVGSU5FRDsKfQoKc3RhdGljIEpTVmFsdWUKanNfcmVjdF90b19zdHJpbmcoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndikgewogIEpTUmVjdERhdGE8ZG91YmxlPiByZWN0LCAqczsKICBzdGQ6Om9zdHJpbmdzdHJlYW0gb3M7CiAgc3RkOjphcnJheTxjb25zdCBjaGFyKiwgMz4gZGVsaW1zID0gewogICAgICAiLCIsCiAgICAgICLiiKMiIC8q772c4qe44qaB4o6u4oil4oij4ri+4ryB4p2Y4p2Z4p+K4o2/4o644o+Q772c4pSC77+o77iy77ix4p2YfO+9nCovLAogICAgICAiw5ciIC8qIvCdhYPwn4Wn8J2aofCfhafwn4WH8J2YufCdmqHwnZi58J2Qseqtl/CdkJfwnZG/8J2Fg/CdhYN4y6PigpPikrPik43ik6finJXinJjinJfiqIniqK/iqILinJbiqLvipoHii4XiipfiiqDiiJfDl+Kor8OXIiovfTsKCiAgZm9yKHNpemVfdCBpID0gMDsgaSA8IGFyZ2M7IGkrKykgeyBkZWxpbXNbaV0gPSBKU19Ub0NTdHJpbmcoY3R4LCBhcmd2W2ldKTsgfQoKICBpZigocyA9IHN0YXRpY19jYXN0PEpTUmVjdERhdGE8ZG91YmxlPio+KEpTX0dldE9wYXF1ZTIoY3R4LCB0aGlzX3ZhbCwganNfcmVjdF9jbGFzc19pZCkpKSAhPSBudWxscHRyKSB7CiAgICByZWN0ID0gKnM7CiAgfSBlbHNlIHsKICAgIGpzX3JlY3RfcmVhZChjdHgsIHRoaXNfdmFsLCAmcmVjdCk7CiAgfQoKICBvcyA8PCByZWN0LnggPDwgZGVsaW1zWzBdIDw8IHJlY3QueSA8PCBkZWxpbXNbMV0gPDwgcmVjdC53aWR0aCA8PCBkZWxpbXNbMl0gPDwgcmVjdC5oZWlnaHQ7CgogIHJldHVybiBKU19OZXdTdHJpbmcoY3R4LCBvcy5zdHIoKS5jX3N0cigpKTsKfQpzdGF0aWMgSlNWYWx1ZQpqc19yZWN0X3RvX3NvdXJjZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNSZWN0RGF0YTxkb3VibGU+IHJlY3QsICpzOwogIHN0ZDo6b3N0cmluZ3N0cmVhbSBvczsKCiAgaWYoKHMgPSBzdGF0aWNfY2FzdDxKU1JlY3REYXRhPGRvdWJsZT4qPihKU19HZXRPcGFxdWUyKGN0eCwgdGhpc192YWwsIGpzX3JlY3RfY2xhc3NfaWQpKSkgIT0gbnVsbHB0cikgewogICAgcmVjdCA9ICpzOwogIH0gZWxzZSB7CiAgICBqc19yZWN0X3JlYWQoY3R4LCB0aGlzX3ZhbCwgJnJlY3QpOwogIH0KCiAgb3MgPDwgInt4OiIgPDwgcmVjdC54IDw8ICIseToiIDw8IHJlY3QueSA8PCAiLHdpZHRoOiIgPDwgcmVjdC53aWR0aCA8PCAiLGhlaWdodDoiIDw8IHJlY3QuaGVpZ2h0IDw8ICJ9IjsKCiAgcmV0dXJuIEpTX05ld1N0cmluZyhjdHgsIG9zLnN0cigpLmNfc3RyKCkpOwp9CgplbnVtIHsgRlVOQ19FUVVBTFMgPSAwLCBGVU5DX1JPVU5ELCBGVU5DX1RPT0JKRUNULCBGVU5DX1RPQVJSQVkgfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3RfZnVuY3MoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgSlNSZWN0RGF0YTxkb3VibGU+IHJlY3QsIG90aGVyLCAqcywgKmE7CiAgSlNWYWx1ZSByZXQgPSBKU19FWENFUFRJT047CgogIGlmKChzID0ganNfcmVjdF9kYXRhKGN0eCwgdGhpc192YWwpKSA9PSBudWxscHRyKQogICAgcmV0dXJuIHJldDsKCiAgcmVjdCA9ICpzOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgRlVOQ19FUVVBTFM6IHsKICAgICAganNfcmVjdF9yZWFkKGN0eCwgYXJndlswXSwgJm90aGVyKTsKICAgICAgYm9vbCBlcXVhbHMgPSByZWN0LnggPT0gb3RoZXIueCAmJiByZWN0LnkgPT0gb3RoZXIueSAmJiByZWN0LndpZHRoID09IG90aGVyLndpZHRoICYmIHJlY3QuaGVpZ2h0ID09IG90aGVyLmhlaWdodDsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIGVxdWFscyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX1JPVU5EOiB7CiAgICAgIGRvdWJsZSB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBmOwogICAgICBpbnQzMl90IHByZWNpc2lvbiA9IDA7CiAgICAgIGlmKGFyZ2MgPiAwKQogICAgICAgIEpTX1RvSW50MzIoY3R4LCAmcHJlY2lzaW9uLCBhcmd2WzBdKTsKICAgICAgZiA9IHN0ZDo6cG93KDEwLCBwcmVjaXNpb24pOwogICAgICB4ID0gc3RkOjpyb3VuZChyZWN0LnggKiBmKSAvIGY7CiAgICAgIHkgPSBzdGQ6OnJvdW5kKHJlY3QueSAqIGYpIC8gZjsKICAgICAgd2lkdGggPSBzdGQ6OnJvdW5kKHJlY3Qud2lkdGggKiBmKSAvIGY7CiAgICAgIGhlaWdodCA9IHN0ZDo6cm91bmQocmVjdC5oZWlnaHQgKiBmKSAvIGY7CiAgICAgIHJldCA9IGpzX3JlY3RfbmV3KGN0eCwgeCwgeSwgd2lkdGgsIGhlaWdodCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBGVU5DX1RPT0JKRUNUOiB7CiAgICAgIHJldCA9IEpTX05ld09iamVjdChjdHgpOwoKICAgICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCByZXQsICJ4IiwgSlNfTmV3RmxvYXQ2NChjdHgsIHJlY3QueCkpOwogICAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgInkiLCBKU19OZXdGbG9hdDY0KGN0eCwgcmVjdC55KSk7CiAgICAgIEpTX1NldFByb3BlcnR5U3RyKGN0eCwgcmV0LCAid2lkdGgiLCBKU19OZXdGbG9hdDY0KGN0eCwgcmVjdC53aWR0aCkpOwogICAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHJldCwgImhlaWdodCIsIEpTX05ld0Zsb2F0NjQoY3R4LCByZWN0LmhlaWdodCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgRlVOQ19UT0FSUkFZOiB7CiAgICAgIHN0ZDo6YXJyYXk8ZG91YmxlLCA0PiBhcnJheXtyZWN0LngsIHJlY3QueSwgcmVjdC53aWR0aCwgcmVjdC5oZWlnaHR9OwoKICAgICAgcmV0ID0ganNfYXJyYXlfZnJvbShjdHgsIGFycmF5LmNiZWdpbigpLCBhcnJheS5jZW5kKCkpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3RfaW5zcGVjdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNSZWN0RGF0YTxkb3VibGU+KiByID0ganNfcmVjdF9kYXRhKGN0eCwgdGhpc192YWwpOwogIEpTVmFsdWUgb2JqID0gSlNfTmV3T2JqZWN0Q2xhc3MoY3R4LCBqc19yZWN0X2NsYXNzX2lkKTsKCiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgIngiLCBKU19OZXdGbG9hdDY0KGN0eCwgci0+eCksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgInkiLCBKU19OZXdGbG9hdDY0KGN0eCwgci0+eSksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgSlNfRGVmaW5lUHJvcGVydHlWYWx1ZVN0cihjdHgsIG9iaiwgIndpZHRoIiwgSlNfTmV3RmxvYXQ2NChjdHgsIHItPndpZHRoKSwgSlNfUFJPUF9FTlVNRVJBQkxFKTsKICBKU19EZWZpbmVQcm9wZXJ0eVZhbHVlU3RyKGN0eCwgb2JqLCAiaGVpZ2h0IiwgSlNfTmV3RmxvYXQ2NChjdHgsIHItPmhlaWdodCksIEpTX1BST1BfRU5VTUVSQUJMRSk7CiAgcmV0dXJuIG9iajsKfQoKZW51bSB7CiAgTUVUSE9EX0NPTlRBSU5TID0gMCwKICBNRVRIT0RfRU1QVFksCiAgTUVUSE9EX0FSRUEsCiAgTUVUSE9EX0JSLAogIE1FVEhPRF9UTCwKICBNRVRIT0RfU0laRSwKICBNRVRIT0RfSU5TRVQsCiAgTUVUSE9EX09VVFNFVCwKICBNRVRIT0RfSFNQTElULAogIE1FVEhPRF9WU1BMSVQKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3JlY3RfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcmVjdCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCogYXJndiwgaW50IG1hZ2ljKSB7CiAgSlNSZWN0RGF0YTxkb3VibGU+KiBzID0gc3RhdGljX2Nhc3Q8SlNSZWN0RGF0YTxkb3VibGU+Kj4oSlNfR2V0T3BhcXVlMihjdHgsIHJlY3QsIGpzX3JlY3RfY2xhc3NfaWQpKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBKU1BvaW50RGF0YTxkb3VibGU+IHBvaW50ID0ganNfcG9pbnRfZ2V0KGN0eCwgYXJndlswXSk7CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBNRVRIT0RfQ09OVEFJTlM6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHMtPmNvbnRhaW5zKHBvaW50KSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfRU1QVFk6IHsKICAgICAgcmV0ID0gSlNfTmV3Qm9vbChjdHgsIHMtPmVtcHR5KCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0FSRUE6IHsKICAgICAgcmV0ID0gSlNfTmV3RmxvYXQ2NChjdHgsIHMtPmFyZWEoKSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfQlI6CiAgICBjYXNlIE1FVEhPRF9UTDogewogICAgICBKU1BvaW50RGF0YTxkb3VibGU+IHB0ID0gbWFnaWMgPT0gMyA/IHMtPmJyKCkgOiBzLT50bCgpOwoKICAgICAgcmV0ID0ganNfcG9pbnRfbmV3KGN0eCwgcHQueCwgcHQueSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSBNRVRIT0RfU0laRTogewogICAgICBjdjo6U2l6ZTJkIHN6ID0gcy0+c2l6ZSgpOwogICAgICByZXQgPSBqc19zaXplX25ldyhjdHgsIHN6LndpZHRoLCBzei5oZWlnaHQpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX0lOU0VUOiB7CiAgICAgIEpTUmVjdERhdGE8ZG91YmxlPiByZWN0ID0gKnM7CiAgICAgIGlmKGFyZ2MgPj0gMSkgewogICAgICAgIGRvdWJsZSBuOwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZuLCBhcmd2WzBdKTsKICAgICAgICByZWN0LnggKz0gbjsKICAgICAgICByZWN0LndpZHRoIC09IG4gKiAyOwogICAgICAgIHJlY3QueSArPSBuOwogICAgICAgIHJlY3QuaGVpZ2h0IC09IG4gKiAyOwoKICAgICAgfSBlbHNlIGlmKGFyZ2MgPj0gMikgewogICAgICAgIGRvdWJsZSBoLCB2OwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZoLCBhcmd2WzBdKTsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmdiwgYXJndlsxXSk7CiAgICAgICAgcmVjdC54ICs9IGg7CiAgICAgICAgcmVjdC53aWR0aCAtPSBoICogMjsKICAgICAgICByZWN0LnkgKz0gdjsKICAgICAgICByZWN0LmhlaWdodCAtPSB2ICogMjsKCiAgICAgIH0gZWxzZSBpZihhcmdjID49IDQpIHsKICAgICAgICBkb3VibGUgdCwgciwgYiwgbDsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmdCwgYXJndlswXSk7CiAgICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJnIsIGFyZ3ZbMV0pOwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZiLCBhcmd2WzJdKTsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmbCwgYXJndlszXSk7CiAgICAgICAgcmVjdC54ICs9IGw7CiAgICAgICAgcmVjdC53aWR0aCAtPSBsICsgcjsKICAgICAgICByZWN0LnkgKz0gdDsKICAgICAgICByZWN0LmhlaWdodCAtPSB0ICsgYjsKICAgICAgfQogICAgICByZXQgPSBqc19yZWN0X3dyYXAoY3R4LCByZWN0KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfT1VUU0VUOiB7CiAgICAgIEpTUmVjdERhdGE8ZG91YmxlPiByZWN0ID0gKnM7CiAgICAgIGlmKGFyZ2MgPj0gMSkgewogICAgICAgIGRvdWJsZSBuOwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZuLCBhcmd2WzBdKTsKICAgICAgICByZWN0LnggLT0gbjsKICAgICAgICByZWN0LndpZHRoICs9IG4gKiAyOwogICAgICAgIHJlY3QueSAtPSBuOwogICAgICAgIHJlY3QuaGVpZ2h0ICs9IG4gKiAyOwoKICAgICAgfSBlbHNlIGlmKGFyZ2MgPj0gMikgewogICAgICAgIGRvdWJsZSBoLCB2OwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZoLCBhcmd2WzBdKTsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmdiwgYXJndlsxXSk7CiAgICAgICAgcmVjdC54IC09IGg7CiAgICAgICAgcmVjdC53aWR0aCArPSBoICogMjsKICAgICAgICByZWN0LnkgLT0gdjsKICAgICAgICByZWN0LmhlaWdodCArPSB2ICogMjsKCiAgICAgIH0gZWxzZSBpZihhcmdjID49IDQpIHsKICAgICAgICBkb3VibGUgdCwgciwgYiwgbDsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmdCwgYXJndlswXSk7CiAgICAgICAgSlNfVG9GbG9hdDY0KGN0eCwgJnIsIGFyZ3ZbMV0pOwogICAgICAgIEpTX1RvRmxvYXQ2NChjdHgsICZiLCBhcmd2WzJdKTsKICAgICAgICBKU19Ub0Zsb2F0NjQoY3R4LCAmbCwgYXJndlszXSk7CiAgICAgICAgcmVjdC54IC09IGw7CiAgICAgICAgcmVjdC53aWR0aCArPSBsICsgcjsKICAgICAgICByZWN0LnkgLT0gdDsKICAgICAgICByZWN0LmhlaWdodCArPSB0ICsgYjsKICAgICAgfQogICAgICByZXQgPSBqc19yZWN0X3dyYXAoY3R4LCByZWN0KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIE1FVEhPRF9IU1BMSVQ6IHsKICAgICAgc3RkOjp2ZWN0b3I8SlNSZWN0RGF0YTxkb3VibGU+PiByZWN0czsKICAgICAgZG91YmxlIHgxID0gcy0+eCwgeDIgPSBzLT54ICsgcy0+d2lkdGg7CiAgICAgIGF1dG8gYXJncyA9IGFyZ3VtZW50X3JhbmdlKGFyZ2MsIGFyZ3YpOwogICAgICBKU1JlY3REYXRhPGRvdWJsZT4qIHByZXY7CiAgICAgIHN0ZDo6dmVjdG9yPGRvdWJsZT4gYnJlYWtwb2ludHM7CiAgICAgIGZvcihKU1ZhbHVlQ29uc3QgY29uc3QmIGFyZyA6IGFyZ3MpIHsKICAgICAgICBkb3VibGUgZDsKICAgICAgICBqc192YWx1ZV90byhjdHgsIGFyZywgZCk7CiAgICAgICAgaWYoZCA8IDApCiAgICAgICAgICBkID0gcy0+d2lkdGggKyBkOwogICAgICAgIGlmKGQgPiAwICYmIGQgPCBzLT53aWR0aCkKICAgICAgICAgIGJyZWFrcG9pbnRzLnB1c2hfYmFjayhkKTsKICAgICAgfQogICAgICBzdGQ6OnNvcnQoYnJlYWtwb2ludHMuYmVnaW4oKSwgYnJlYWtwb2ludHMuZW5kKCkpOwogICAgICByZWN0cy5wdXNoX2JhY2soKnMpOwogICAgICBwcmV2ID0gJnJlY3RzLmJhY2soKTsKICAgICAgZm9yKGRvdWJsZSBoIDogYnJlYWtwb2ludHMpIHsKICAgICAgICAvLyBwcmludGYoImhzcGxpdCBoPSVsZlxuIiwgaCk7CiAgICAgICAgcHJldi0+d2lkdGggPSBoIC0gKHByZXYtPnggLSB4MSk7CiAgICAgICAgcmVjdHMucHVzaF9iYWNrKCpzKTsKICAgICAgICByZWN0cy5iYWNrKCkueCA9IHgxICsgaDsKICAgICAgICBwcmV2ID0gJnJlY3RzLmJhY2soKTsKICAgICAgICBwcmV2LT53aWR0aCA9IHMtPndpZHRoIC0gaDsKICAgICAgfQogICAgICByZXQgPSBqc19hcnJheV9mcm9tKGN0eCwgcmVjdHMpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgTUVUSE9EX1ZTUExJVDogewogICAgICBzdGQ6OnZlY3RvcjxKU1JlY3REYXRhPGRvdWJsZT4+IHJlY3RzOwogICAgICBkb3VibGUgeTEgPSBzLT55LCB5MiA9IHMtPnkgKyBzLT5oZWlnaHQ7CiAgICAgIGF1dG8gYXJncyA9IGFyZ3VtZW50X3JhbmdlKGFyZ2MsIGFyZ3YpOwogICAgICBKU1JlY3REYXRhPGRvdWJsZT4qIHByZXY7CiAgICAgIHN0ZDo6dmVjdG9yPGRvdWJsZT4gYnJlYWtwb2ludHM7CiAgICAgIGZvcihKU1ZhbHVlQ29uc3QgY29uc3QmIGFyZyA6IGFyZ3MpIHsKICAgICAgICBkb3VibGUgZDsKICAgICAgICBqc192YWx1ZV90byhjdHgsIGFyZywgZCk7CiAgICAgICAgaWYoZCA8IDApCiAgICAgICAgICBkID0gcy0+aGVpZ2h0ICsgZDsKICAgICAgICBpZihkID4gMCAmJiBkIDwgcy0+aGVpZ2h0KQogICAgICAgICAgYnJlYWtwb2ludHMucHVzaF9iYWNrKGQpOwogICAgICB9CiAgICAgIHN0ZDo6c29ydChicmVha3BvaW50cy5iZWdpbigpLCBicmVha3BvaW50cy5lbmQoKSk7CiAgICAgIHJlY3RzLnB1c2hfYmFjaygqcyk7CiAgICAgIHByZXYgPSAmcmVjdHMuYmFjaygpOwogICAgICBmb3IoZG91YmxlIHYgOiBicmVha3BvaW50cykgewogICAgICAgIC8vIHByaW50ZigiaHNwbGl0IHY9JWxmXG4iLCB2KTsKICAgICAgICBwcmV2LT5oZWlnaHQgPSB2IC0gKHByZXYtPnkgLSB5MSk7CiAgICAgICAgcmVjdHMucHVzaF9iYWNrKCpzKTsKICAgICAgICByZWN0cy5iYWNrKCkueSA9IHkxICsgdjsKICAgICAgICBwcmV2ID0gJnJlY3RzLmJhY2soKTsKICAgICAgICBwcmV2LT5oZWlnaHQgPSBzLT5oZWlnaHQgLSB2OwogICAgICB9CiAgICAgIHJldCA9IGpzX2FycmF5X2Zyb20oY3R4LCByZWN0cyk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTQXRvbSBpdGVyYXRvcl9zeW1ib2w7CgpzdGF0aWMgSlNWYWx1ZQpqc19yZWN0X3N5bWJvbF9pdGVyYXRvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgSlNWYWx1ZSBhcnIsIGl0ZXI7CiAgYXJyID0ganNfcmVjdF9mdW5jcyhjdHgsIHRoaXNfdmFsLCBhcmdjLCBhcmd2LCAzKTsKCiAgaWYoaXRlcmF0b3Jfc3ltYm9sID09IDApCiAgICBpdGVyYXRvcl9zeW1ib2wgPSBqc19zeW1ib2xfYXRvbShjdHgsICJpdGVyYXRvciIpOwoKICBpZighSlNfSXNGdW5jdGlvbihjdHgsIChpdGVyID0gSlNfR2V0UHJvcGVydHkoY3R4LCBhcnIsIGl0ZXJhdG9yX3N5bWJvbCkpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CiAgcmV0dXJuIEpTX0NhbGwoY3R4LCBpdGVyLCBhcnIsIDAsIGFyZ3YpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19yZWN0X2Zyb20oSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCByZWN0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0KiBhcmd2KSB7CiAgc3RkOjphcnJheTxkb3VibGUsIDQ+IGFycmF5OwogIEpTVmFsdWUgcmV0ID0gSlNfRVhDRVBUSU9OOwoKICBpZihKU19Jc1N0cmluZyhhcmd2WzBdKSkgewogICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSk7CiAgICBjaGFyKiBlbmRwdHIgPSBudWxscHRyOwogICAgZm9yKHNpemVfdCBpID0gMDsgaSA8IDQ7IGkrKykgewogICAgICB3aGlsZSghaXNkaWdpdCgqc3RyKSAmJiAqc3RyICE9ICctJyAmJiAqc3RyICE9ICcrJyAmJiAhKCpzdHIgPT0gJy4nICYmIGlzZGlnaXQoc3RyWzFdKSkpIHN0cisrOwogICAgICBpZigqc3RyID09ICdcMCcpCiAgICAgICAgYnJlYWs7CiAgICAgIGFycmF5W2ldID0gc3RydG9kKHN0ciwgJmVuZHB0cik7CiAgICAgIHN0ciA9IGVuZHB0cjsKICAgIH0KICB9IGVsc2UgaWYoanNfaXNfYXJyYXkoY3R4LCBhcmd2WzBdKSkgewogICAganNfYXJyYXlfdG8oY3R4LCBhcmd2WzBdLCBhcnJheSk7CiAgfQogIGlmKGFycmF5WzJdID4gMCAmJiBhcnJheVszXSA+IDApCiAgICByZXQgPSBqc19yZWN0X25ldyhjdHgsIGFycmF5WzBdLCBhcnJheVsxXSwgYXJyYXlbMl0sIGFycmF5WzNdKTsKICByZXR1cm4gcmV0Owp9Cgp2b2lkCmpzX3JlY3RfZmluYWxpemVyKEpTUnVudGltZSogcnQsIEpTVmFsdWUgdmFsKSB7CiAgSlNSZWN0RGF0YTxkb3VibGU+KiBzID0gc3RhdGljX2Nhc3Q8SlNSZWN0RGF0YTxkb3VibGU+Kj4oSlNfR2V0T3BhcXVlKHZhbCwganNfcmVjdF9jbGFzc19pZCkpOwogIC8qIE5vdGU6ICdzJyBjYW4gYmUgTlVMTCBpbiBjYXNlIEpTX1NldE9wYXF1ZSgpIHdhcyBub3QgY2FsbGVkICovCgogIC8vIHMtPn5KU1JlY3REYXRhPGRvdWJsZT4oKTsKICBpZihzKQogICAganNfZGVhbGxvY2F0ZShydCwgcyk7Cn0KCkpTQ2xhc3NEZWYganNfcmVjdF9jbGFzcyA9IHsKICAgIC5jbGFzc19uYW1lID0gIlJlY3QiLAogICAgLmZpbmFsaXplciA9IGpzX3JlY3RfZmluYWxpemVyLAp9OwoKY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfcmVjdF9wcm90b19mdW5jc1tdID0ge0pTX0NHRVRTRVRfRU5VTUVSQUJMRV9ERUYoIngiLCBqc19yZWN0X2dldCwganNfcmVjdF9zZXQsIFBST1BfWCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DR0VUU0VUX0VOVU1FUkFCTEVfREVGKCJ5IiwganNfcmVjdF9nZXQsIGpzX3JlY3Rfc2V0LCBQUk9QX1kpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRigid2lkdGgiLCBqc19yZWN0X2dldCwganNfcmVjdF9zZXQsIFBST1BfV0lEVEgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0dFVFNFVF9FTlVNRVJBQkxFX0RFRigiaGVpZ2h0IiwganNfcmVjdF9nZXQsIGpzX3JlY3Rfc2V0LCBQUk9QX0hFSUdIVCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DR0VUU0VUX01BR0lDX0RFRigieDIiLCBqc19yZWN0X2dldCwganNfcmVjdF9zZXQsIFBST1BfWDIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInkyIiwganNfcmVjdF9nZXQsIGpzX3JlY3Rfc2V0LCBQUk9QX1kyKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJwb2ludCIsIGpzX3JlY3RfZ2V0LCBqc19yZWN0X3NldCwgUFJPUF9QT1MpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInNpemUiLCBqc19yZWN0X2dldCwganNfcmVjdF9zZXQsIFBST1BfU0laRSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19BTElBU19ERUYoIngxIiwgIngiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0FMSUFTX0RFRigieTEiLCAieSIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjb250YWlucyIsIDAsIGpzX3JlY3RfbWV0aG9kLCBNRVRIT0RfQ09OVEFJTlMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJlbXB0eSIsIDAsIGpzX3JlY3RfbWV0aG9kLCBNRVRIT0RfRU1QVFkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJhcmVhIiwgMCwganNfcmVjdF9tZXRob2QsIE1FVEhPRF9BUkVBKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYnIiLCAwLCBqc19yZWN0X21ldGhvZCwgTUVUSE9EX0JSKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigidGwiLCAwLCBqc19yZWN0X21ldGhvZCwgTUVUSE9EX1RMKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigiaW5zZXQiLCAxLCBqc19yZWN0X21ldGhvZCwgTUVUSE9EX0lOU0VUKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX01BR0lDX0RFRigib3V0c2V0IiwgMSwganNfcmVjdF9tZXRob2QsIE1FVEhPRF9PVVRTRVQpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJoc3BsaXQiLCAxLCBqc19yZWN0X21ldGhvZCwgTUVUSE9EX0hTUExJVCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoInZzcGxpdCIsIDEsIGpzX3JlY3RfbWV0aG9kLCBNRVRIT0RfVlNQTElUKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpTX0NGVU5DX0RFRigidG9TdHJpbmciLCAwLCBqc19yZWN0X3RvX3N0cmluZyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19ERUYoInRvU291cmNlIiwgMCwganNfcmVjdF90b19zb3VyY2UpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJlcXVhbHMiLCAxLCBqc19yZWN0X2Z1bmNzLCBGVU5DX0VRVUFMUyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoInJvdW5kIiwgMCwganNfcmVjdF9mdW5jcywgRlVOQ19ST1VORCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRvT2JqZWN0IiwgMCwganNfcmVjdF9mdW5jcywgRlVOQ19UT09CSkVDVCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU19DRlVOQ19NQUdJQ19ERUYoInRvQXJyYXkiLCAwLCBqc19yZWN0X2Z1bmNzLCBGVU5DX1RPQVJSQVkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJSZWN0IiwgSlNfUFJPUF9DT05GSUdVUkFCTEUpCgp9Owpjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19yZWN0X3N0YXRpY19mdW5jc1tdID0ge0pTX0NGVU5DX0RFRigiZnJvbSIsIDEsIGpzX3JlY3RfZnJvbSl9OwoKaW50CmpzX3JlY3RfaW5pdChKU0NvbnRleHQqIGN0eCwgSlNNb2R1bGVEZWYqIG0pIHsKCiAgaWYoanNfcmVjdF9jbGFzc19pZCA9PSAwKSB7CiAgICAvKiBjcmVhdGUgdGhlIFJlY3QgY2xhc3MgKi8KICAgIEpTX05ld0NsYXNzSUQoJmpzX3JlY3RfY2xhc3NfaWQpOwogICAgSlNfTmV3Q2xhc3MoSlNfR2V0UnVudGltZShjdHgpLCBqc19yZWN0X2NsYXNzX2lkLCAmanNfcmVjdF9jbGFzcyk7CgogICAgcmVjdF9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByZWN0X3Byb3RvLCBqc19yZWN0X3Byb3RvX2Z1bmNzLCBjb3VudG9mKGpzX3JlY3RfcHJvdG9fZnVuY3MpKTsKICAgIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19yZWN0X2NsYXNzX2lkLCByZWN0X3Byb3RvKTsKCiAgICByZWN0X2NsYXNzID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3JlY3RfY3RvciwgIlJlY3QiLCAwLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgICAvKiBzZXQgcHJvdG8uY29uc3RydWN0b3IgYW5kIGN0b3IucHJvdG90eXBlICovCiAgICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIHJlY3RfY2xhc3MsIHJlY3RfcHJvdG8pOwogICAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCByZWN0X2NsYXNzLCBqc19yZWN0X3N0YXRpY19mdW5jcywgY291bnRvZihqc19yZWN0X3N0YXRpY19mdW5jcykpOwoKICAgIGpzX3NldF9pbnNwZWN0X21ldGhvZChjdHgsIHJlY3RfcHJvdG8sIGpzX3JlY3RfaW5zcGVjdCk7CiAgfQoKICBpZihtKQogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlJlY3QiLCByZWN0X2NsYXNzKTsKCiAgcmV0dXJuIDA7Cn0KCmV4dGVybiAiQyIgVklTSUJMRSB2b2lkCmpzX3JlY3RfZXhwb3J0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJSZWN0Iik7Cn0KCnZvaWQKanNfcmVjdF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZSBwYXJlbnQsIGNvbnN0IGNoYXIqIG5hbWUpIHsKICBpZihKU19Jc1VuZGVmaW5lZChyZWN0X2NsYXNzKSkKICAgIGpzX3JlY3RfaW5pdChjdHgsIDApOwoKICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIHBhcmVudCwgbmFtZSA/IG5hbWUgOiAiUmVjdCIsIHJlY3RfY2xhc3MpOwp9CgojaWZkZWYgSlNfUkVDVF9NT0RVTEUKI2RlZmluZSBKU19JTklUX01PRFVMRSBWSVNJQkxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfcmVjdAojZW5kaWYKCmV4dGVybiAiQyIgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwogIG0gPSBKU19OZXdDTW9kdWxlKGN0eCwgbW9kdWxlX25hbWUsICZqc19yZWN0X2luaXQpOwogIGlmKCFtKQogICAgcmV0dXJuIE5VTEw7CiAganNfcmVjdF9leHBvcnQoY3R4LCBtKTsKICByZXR1cm4gbTsKfQAAAAAAAAAAjEgAAAAAAAAAAAAAAAAAAAAAAACMSAAAAAAAAAAAAAAAAAAAAAAAAIxIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEqAAAAAAAAwSoAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKUEAAAAAAAApgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQQAAAAAAAClBAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAAKYEAAAAAAAACgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgQAAAAAAACmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAoFAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAAPBQAAAAAAAAAAAAALBQAAAAAAAAsFAAAAAAAABAAAACAgICALBQAAAAAAAA0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgUAAAAAAAAKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\nJSValue"
					},
					"CgAAAKQEAAAAAAAApQQAAAAAAAAAAAAApQQAAAAAAACnBAAAAAAAAAAAAAAOBQAAAAAAAA4FAAAAAAAAAgAAACAgpwQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKkEAAAAAAAAAAAAAKkEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAACrBAAAAAAAAAAAAACrBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " proto;"
					},
					"BwAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALEEAAAAAAAAAAAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACzBAAAAAAAAAAAAACzBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAtQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAABEFAAAAAAAAEgUAAAAAAAAAAAAAEgUAAAAAAAASBQAAAAAAAAoAAABnb3RvIGZhaWw7EgUAAAAAAAATBQAAAAAAAAAAAAATBQAAAAAAABQFAAAAAAAAAAAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQUAAAAAAAAbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " JS_EXCEPTION"
					},
					"DQAAABcFAAAAAAAAGAUAAAAAAAAAAAAAGAUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABoFAAAAAAAAAAAAABoFAAAAAAAAGwUAAAAAAAAAAAAAGwUAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAAB0FAAAAAAAAAAAAAB0FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAfBQAAAAAAAAAAAAAfBQAAAAAAACAFAAAAAAAAAAAAACAFAAAAAAAAIQUAAAAAAAAAAAAAIQUAAAAAAAAiBQAAAAAAAAAAAAAiBQAAAAAAACMFAAAAAAAAAAAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwUAAAAAAAAXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACQFAAAAAAAAJQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAUAAAAAAAAkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "√º"
					},
					"AQAAAC0JAAAAAAAALgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQkAAAAAAAAtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAC0JAAAAAAAALQkAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAALgkAAAAAAAAuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "proto,"
					},
					"BgAAAC0JAAAAAAAALgkAAAAAAAAAAAAALgkAAAAAAAAvCQAAAAAAAAAAAAAvCQAAAAAAADAJAAAAAAAAAAAAADAJAAAAAAAAMQkAAAAAAAAAAAAAMQkAAAAAAAAyCQAAAAAAAAAAAAAyCQAAAAAAADMJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQkAAAAAAAAtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "KS"
					},
					"AgAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					2,
					"left_delete",
					null,
					"AgAAAGgBAAAAAAAAaAEAAAAAAAABAAAAU2cBAAAAAAAAZwEAAAAAAAABAAAASw",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "JSValueConst"
					},
					"DAAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABvAQAAAAAAAAAAAABvAQAAAAAAAHABAAAAAAAAAAAAAHABAAAAAAAAcQEAAAAAAAAAAAAAcQEAAAAAAAByAQAAAAAAAAAAAAByAQAAAAAAAHMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " proto,"
					},
					"BwAAAHMBAAAAAAAAdAEAAAAAAAAAAAAAdAEAAAAAAAB1AQAAAAAAAAAAAAB1AQAAAAAAAHYBAAAAAAAAAAAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "proto"
					},
					"BgAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAyAgAAAAAAAAoAAAByZWN0X3Byb3RvMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQIAAAAAAAA7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"paste",
					null,
					"AQAAAFcDAAAAAAAAwQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAMEDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADEAwAAAAAAAAAAAADEAwAAAAAAAMUDAAAAAAAAAAAAAMIDAAAAAAAAwgMAAAAAAAACAAAAICDCAwAAAAAAAMIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQMAAAAAAADBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAhQMAAAAAAACFAwAAAAAAABMAAABKU1ZhbHVlQ29uc3QgcHJvdG8s",
					"AQAAAAAAAAABAAAAhAMAAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAK8DAAAAAAAAsAMAAAAAAAAAAAAAsAMAAAAAAACyAwAAAAAAAAAAAACyAwAAAAAAALMDAAAAAAAAAAAAALMDAAAAAAAAtAMAAAAAAAAAAAAAtAMAAAAAAAC1AwAAAAAAAAAAAAC1AwAAAAAAALYDAAAAAAAAAAAAALYDAAAAAAAAtwMAAAAAAAAAAAAAtwMAAAAAAAC4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwMAAAAAAACvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " js_rect_new"
					},
					"DAAAALgDAAAAAAAAuQMAAAAAAAAAAAAAuQMAAAAAAAC6AwAAAAAAAAAAAAC6AwAAAAAAALsDAAAAAAAAAAAAALsDAAAAAAAAvAMAAAAAAAAAAAAAvAMAAAAAAAC9AwAAAAAAAAAAAAC9AwAAAAAAAL4DAAAAAAAAAAAAAL4DAAAAAAAAvwMAAAAAAAAAAAAAvwMAAAAAAADAAwAAAAAAAAAAAADAAwAAAAAAAMEDAAAAAAAAAAAAAMEDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADDAwAAAAAAAAAAAADDAwAAAAAAAMQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAMAAAAAAAC4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAMAAAAAAADEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAMUDAAAAAAAAxgMAAAAAAAAAAAAAxgMAAAAAAADHAwAAAAAAAAAAAADHAwAAAAAAAMgDAAAAAAAAAAAAAMgDAAAAAAAAyQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQMAAAAAAADFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " rect_proto,"
					},
					"DAAAAMkDAAAAAAAAygMAAAAAAAAAAAAAygMAAAAAAADLAwAAAAAAAAAAAADLAwAAAAAAAMwDAAAAAAAAAAAAAMwDAAAAAAAAzQMAAAAAAAAAAAAAzQMAAAAAAADOAwAAAAAAAAAAAADOAwAAAAAAAM8DAAAAAAAAAAAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAADRAwAAAAAAANIDAAAAAAAAAAAAANIDAAAAAAAA0wMAAAAAAAAAAAAA0wMAAAAAAADUAwAAAAAAAAAAAADUAwAAAAAAANUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQMAAAAAAADJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "x,y,w,h"
					},
					"BwAAANUDAAAAAAAA1gMAAAAAAAAAAAAA1gMAAAAAAADXAwAAAAAAAAAAAADXAwAAAAAAANgDAAAAAAAAAAAAANgDAAAAAAAA2QMAAAAAAAAAAAAA2QMAAAAAAADaAwAAAAAAAAAAAADaAwAAAAAAANsDAAAAAAAAAAAAANsDAAAAAAAA3AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QMAAAAAAADVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN0DAAAAAAAA3gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QMAAAAAAADdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOADAAAAAAAA4QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AMAAAAAAADgAwAAAAAAAAAAAAAAAHdA"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFcDAAAAAAAAWAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAAAA"
				],
				[
					114,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAWAMAAAAAAABYAwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 158.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/qjs-opencv",
		"/home/roman/Projects/qjs-opencv/build",
		"/home/roman/Projects/qjs-opencv/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/qjs-opencv/init_module.cpp",
		"/home/roman/Projects/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/qjs-opencv/js_video_capture.cpp",
		"/home/roman/Projects/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/js_size.hpp",
		"/home/roman/Projects/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.cpp",
		"/home/roman/Projects/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/qjs-opencv/util.hpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/qjs-opencv/LICENSE",
		"/home/roman/Projects/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/qjs-opencv/js_alloc.hpp",
		"/home/roman/Projects/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_rect.hpp",
		"/home/roman/Projects/qjs-opencv/js_size.cpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_utility.cpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/qjs-opencv/js.cpp",
		"/home/roman/Projects/qjs-opencv/js.hpp",
		"/home/roman/Projects/qjs-opencv/js_clahe.cpp",
		"/home/roman/Projects/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/CCache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/OpenCV.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/SDL2.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/ccache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/functions.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/check-flags.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/glfw3Config.cmake",
		"/home/roman/Projects/qjs-opencv/geometry.cpp",
		"/home/roman/Projects/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/js-bindings.cmake",
		"/home/roman/Projects/qjs-opencv/color.cpp",
		"/home/roman/Projects/qjs-opencv/color.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/opencv.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/sdl2-config.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindGLFW.cmake",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Sources/opencv/modules/imgproc/src/drawing.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.hpp",
		"/home/roman/Projects/plot-cv/src/js_rect.cpp",
		"/home/roman/Projects/plot-cv/src/js_cv.cpp",
		"/home/roman/Projects/plot-cv/src/geometry.hpp",
		"/home/roman/Projects/plot-cv/src/js_array.hpp",
		"/home/roman/Projects/plot-cv/src/js_mat.cpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/src/pixel_neighborhood.hpp",
		"/home/roman/Projects/plot-cv/cvPipeline.js",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/cmake/highgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/js-bindings.cmake",
		"/home/roman/Projects/plot-cv/src/util.hpp",
		"/home/roman/Projects/plot-cv/src/png_write.hpp",
		"/home/roman/Projects/plot-cv/src/palette.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test-png++.cpp",
		"/home/roman/Projects/plot-cv/src/js_draw.cpp",
		"/home/roman/Projects/plot-cv/src/js_umat.hpp",
		"/home/roman/Projects/plot-cv/src/js_umat.cpp",
		"/home/roman/Projects/plot-cv/cmake/opencv.cmake",
		"/home/roman/Projects/plot-cv/src/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/src/js_clahe.cpp",
		"/home/roman/Projects/plot-cv/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/src/data.cpp",
		"/home/roman/Projects/plot-cv/src/js_slice_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point.cpp",
		"/home/roman/Projects/plot-cv/src/js_mat.hpp",
		"/home/roman/Projects/plot-cv/src/js_size.cpp",
		"/home/roman/Projects/plot-cv/src/js_line.cpp",
		"/home/roman/Projects/plot-cv/src/js.cpp",
		"/home/roman/Projects/plot-cv/src/js_rect.hpp",
		"/home/roman/Projects/plot-cv/src/js_size.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/freetype.hpp",
		"/home/roman/Projects/plot-cv/dnsresolve.js",
		"/home/roman/Projects/plot-cv/src/js_point.hpp",
		"/home/roman/Projects/plot-cv/src/js.hpp",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/src/js_subdiv2d.cpp",
		"/home/roman/Projects/plot-cv/src/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/src/util.cpp",
		"/home/roman/Projects/plot-cv/src/imgui-viewer.hpp",
		"/opt/opencv-4.5.0/include/opencv4/opencv2/core/mat.hpp",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/grammars/shell.y",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/worker.js",
		"/home/roman/Projects/plot-cv/test_worker_module.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/lib/consoleSetup.js",
		"/home/roman/Projects/plot-cv/bjson.js",
		"/home/roman/Projects/plot-cv/quickjs/tests/bjson.c",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/opencv_dummy.cpp",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/clang-list.es",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/repl.js"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
			"/home/roman/Projects/qjs-opencv,*.hpp,*.cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"qjs-opencv-a",
			"quickjs-opencv",
			"make_js_bindings",
			"make_shared_module",
			"quickjs-opencv",
			"qjs-opencv",
			"TypedArrayProps",
			"ArrayBufferProps",
			"TypedArrayProps",
			"std::ranges::subrange<T>",
			"std::ranges",
			"js_mat_buffer",
			"ranges",
			"js_point_iterator_new",
			"ranges",
			"args",
			"CMAKE_C_FLAGS",
			"-DCXX",
			"js_size_mul",
			"object expe",
			"Rect object",
			"js_mat_free_func",
			"js_mat_buffer",
			"CAP_PROP",
			"CAP_",
			"js_size_read",
			"return ",
			"\"width",
			"js\\.",
			"js.is_array_like\\(",
			"js\\.",
			"js.is_bool",
			"js\\.",
			"js.get_boolean\\(",
			"js.get_number\\(",
			"js\\.",
			"jsrt",
			"/src",
			"COMPILE_FLAGS",
			"OPENCV_FOUND",
			"flags",
			"^#",
			"CMAKE_INSTALL_RPATH",
			"extern C",
			"PLOTCV",
			"PLOT",
			"}_MODULE",
			"src_program",
			"add_exec",
			"_MODULE",
			"JS_INIT_MODULE",
			"plot-cv",
			"js.hpp",
			"include\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"qjs-opencv",
			"qjs-opencv-a",
			"quickjs-opencv",
			"range_view<T>",
			"CMAKE_CXX_FLAGS",
			"ret = ",
			"js_is_array_like(ctx, ",
			"JS_IsBool",
			"js_value_to(ctx, ",
			"extern \"C\""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2080,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Projects/qjs-opencv/jsbindings.hpp",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									31,
									45
								],
								[
									425,
									436
								],
								[
									454,
									463
								],
								[
									482,
									492
								],
								[
									513,
									524
								],
								[
									980,
									998
								],
								[
									1022,
									1037
								],
								[
									1066,
									1077
								],
								[
									1104,
									1116
								],
								[
									1143,
									1156
								],
								[
									1188,
									1206
								],
								[
									1479,
									1491
								],
								[
									1521,
									1531
								],
								[
									1557,
									1568
								],
								[
									1595,
									1606
								],
								[
									1894,
									1901
								],
								[
									1902,
									1912
								],
								[
									1932,
									1938
								],
								[
									1953,
									1960
								],
								[
									1961,
									1974
								],
								[
									2008,
									2014
								],
								[
									2015,
									2028
								],
								[
									2069,
									2094
								],
								[
									2858,
									2875
								],
								[
									2913,
									2925
								],
								[
									2970,
									2981
								],
								[
									3057,
									3071
								],
								[
									3127,
									3147
								],
								[
									3187,
									3206
								],
								[
									3246,
									3265
								],
								[
									3305,
									3323
								],
								[
									3363,
									3385
								],
								[
									3425,
									3444
								],
								[
									3484,
									3503
								],
								[
									3543,
									3560
								],
								[
									3600,
									3628
								],
								[
									3660,
									3681
								],
								[
									3726,
									3747
								],
								[
									4031,
									4042
								],
								[
									4436,
									4449
								],
								[
									4504,
									4518
								],
								[
									4576,
									4594
								],
								[
									4652,
									4667
								],
								[
									4731,
									4747
								],
								[
									4804,
									4818
								],
								[
									4876,
									4890
								],
								[
									4930,
									4950
								],
								[
									5381,
									5388
								],
								[
									5430,
									5454
								],
								[
									5524,
									5531
								],
								[
									5710,
									5718
								],
								[
									5824,
									5830
								],
								[
									5960,
									5974
								],
								[
									6137,
									6160
								],
								[
									6273,
									6297
								],
								[
									6412,
									6435
								],
								[
									6566,
									6579
								],
								[
									6668,
									6690
								],
								[
									6782,
									6805
								],
								[
									6900,
									6922
								],
								[
									6993,
									7006
								],
								[
									7074,
									7087
								],
								[
									7171,
									7184
								],
								[
									7504,
									7516
								],
								[
									8175,
									8181
								],
								[
									8272,
									8280
								],
								[
									8380,
									8400
								],
								[
									8608,
									8628
								],
								[
									8716,
									8726
								],
								[
									8967,
									8986
								],
								[
									9269,
									9288
								],
								[
									9786,
									9799
								],
								[
									10026,
									10040
								],
								[
									10123,
									10146
								],
								[
									10401,
									10414
								],
								[
									10639,
									10657
								],
								[
									10847,
									10868
								],
								[
									11148,
									11168
								],
								[
									11393,
									11407
								],
								[
									11599,
									11617
								],
								[
									12079,
									12093
								],
								[
									12473,
									12489
								],
								[
									12676,
									12692
								],
								[
									12728,
									12744
								],
								[
									12822,
									12839
								],
								[
									13133,
									13153
								],
								[
									13329,
									13345
								],
								[
									13907,
									13920
								],
								[
									14229,
									14252
								],
								[
									14699,
									14724
								],
								[
									15005,
									15021
								],
								[
									15952,
									15963
								],
								[
									16086,
									16101
								],
								[
									16302,
									16318
								],
								[
									16875,
									16886
								],
								[
									16997,
									17008
								],
								[
									17122,
									17133
								],
								[
									17497,
									17510
								],
								[
									17603,
									17616
								],
								[
									17699,
									17712
								],
								[
									17857,
									17870
								],
								[
									17990,
									18001
								],
								[
									18031,
									18040
								],
								[
									18146,
									18161
								],
								[
									18181,
									18186
								],
								[
									18232,
									18248
								],
								[
									18302,
									18313
								],
								[
									18349,
									18358
								],
								[
									18373,
									18385
								],
								[
									18414,
									18426
								],
								[
									18454,
									18458
								],
								[
									18507,
									18515
								],
								[
									18637,
									18652
								],
								[
									18721,
									18737
								],
								[
									18791,
									18802
								],
								[
									18856,
									18868
								],
								[
									18897,
									18909
								],
								[
									18960,
									18969
								],
								[
									19038,
									19046
								],
								[
									19150,
									19164
								],
								[
									19326,
									19340
								],
								[
									19425,
									19435
								],
								[
									19526,
									19540
								]
							],
							"symlist":
							[
								"JSBINDINGS_HPP",
								"JSRectDataD",
								"JSMatData",
								"JSUMatData",
								"JSSizeDataD",
								"JSVideoCaptureData",
								"JSTickMeterData",
								"JSCLAHEData",
								"JSInputArray",
								"JSOutputArray",
								"JSInputOutputArray",
								"JSLineTraits",
								"  array_type",
								"  vector_type",
								"  scalar_type",
								"VISIBLE",
								"  __declspec",
								"HIDDEN",
								"VISIBLE",
								"  __attribute__",
								"HIDDEN",
								"  __attribute__",
								"JS_CGETSET_ENUMERABLE_DEF",
								"  js_draw_s",
								"  js_draw_init",
								"  js_line_new",
								"  js_init_module",
								"  js_init_module_point",
								"  js_init_module_size",
								"  js_init_module_rect",
								"  js_init_module_mat",
								"  js_init_module_contour",
								"  js_init_module_line",
								"  js_init_module_draw",
								"  js_init_module_cv",
								"  js_init_module_video_capture",
								"  js_video_capture_init",
								"  js_video_capture_wrap",
								"  js_mat_wrap",
								"  js_global_get",
								"  js_is_iterable",
								"  js_iterator_method",
								"  js_iterator_new",
								"  js_iterator_next",
								"  js_symbol_atom",
								"  js_symbol_ctor",
								"  js_symbol_get_static",
								"  countof",
								"  js_vector_vec4i_to_array",
								"  js_ctor",
								"  js_proto",
								"  js_new",
								"  js_number_read",
								"  js_number_read<int32_t>",
								"  js_number_read<uint32_t>",
								"  js_number_read<int64_t>",
								"  js_number_new",
								"  js_number_new<int32_t>",
								"  js_number_new<uint32_t>",
								"  js_number_new<int64_t>",
								"  js_color_read",
								"  js_color_read",
								"  js_color_read",
								"  js_color_new",
								"  js_ref",
								"  round_to",
								"  js_arraybuffer_range",
								"  js_arraybuffer_range",
								"  value_type",
								"  js_arraybuffer_from",
								"  js_arraybuffer_from",
								"  js_global_get",
								"  js_symbol_ctor",
								"  js_symbol_invoke_static",
								"  js_symbol_for",
								"  js_symbol_for_atom",
								"  js_set_inspect_method",
								"  js_symbol_get_static",
								"  js_symbol_atom",
								"  js_iterator_method",
								"  js_is_iterable",
								"  js_is_array_like",
								"ArrayBufferProps",
								"ArrayBufferProps",
								"  js_is_arraybuffer",
								"  js_arraybuffer_props",
								"  js__name",
								"  js_class_name",
								"  js_typedarray_prototype",
								"  js_typedarray_constructor",
								"  js_is_typedarray",
								"  js_is_array",
								"  js_iterator_new",
								"  js_iterator_next",
								"  js_value_to",
								"  js_value_to",
								"  js_value_to",
								"  js_value_from",
								"  js_value_from",
								"  js_value_from",
								"  js_value_from",
								"  js_iterable",
								"\tto_vector",
								"\tjs_iterator_new",
								"\tclear",
								"\tjs_iterator_next",
								"\tjs_value_to",
								"\tpush_back",
								"JS_FreeValue",
								"JS_FreeValue",
								"\tsize",
								"\tto_array",
								"\tjs_iterator_new",
								"\tjs_iterator_next",
								"\tjs_value_to",
								"JS_FreeValue",
								"JS_FreeValue",
								"\tto_scalar",
								"\tto_array",
								"  js_iterable_to",
								"  js_iterable_to",
								"  array_type",
								"  js_iterable_to"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "js_size.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14933,
						"regions":
						{
						},
						"selection":
						[
							[
								2341,
								2356
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 868.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js_point.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12825,
						"regions":
						{
						},
						"selection":
						[
							[
								1798,
								1668
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 692.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js_point.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2598,
						"regions":
						{
						},
						"selection":
						[
							[
								720,
								720
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "js_cv.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84703,
						"regions":
						{
						},
						"selection":
						[
							[
								54467,
								54473
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 29086.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "js_utility.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5972,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "util.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7579,
						"regions":
						{
						},
						"selection":
						[
							[
								7547,
								7547
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4782.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "js_slice_iterator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6447,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "js_slice_iterator.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 777,
						"regions":
						{
						},
						"selection":
						[
							[
								661,
								663
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "js_subdiv2d.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10862,
						"regions":
						{
						},
						"selection":
						[
							[
								875,
								902
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "js_line_segment_detector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6877,
						"regions":
						{
						},
						"selection":
						[
							[
								3585,
								3585
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 920.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "jsbindings.hpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19659,
						"regions":
						{
						},
						"selection":
						[
							[
								2853,
								2853
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 650.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "js_typed_array.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14294,
						"regions":
						{
						},
						"selection":
						[
							[
								6178,
								6178
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 46.0,
						"translation.y": 2830.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "js_mat.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44596,
						"regions":
						{
						},
						"selection":
						[
							[
								10324,
								10324
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6350.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4060,
						"regions":
						{
						},
						"selection":
						[
							[
								3959,
								3969
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 672.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "cmake/JSBindings.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5704,
						"regions":
						{
						},
						"selection":
						[
							[
								2520,
								2520
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4182,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										222,
										233
									],
									[
										468,
										479
									],
									[
										549,
										560
									],
									[
										654,
										665
									],
									[
										739,
										750
									],
									[
										848,
										859
									],
									[
										923,
										934
									],
									[
										1033,
										1044
									],
									[
										1133,
										1144
									],
									[
										1287,
										1298
									],
									[
										1357,
										1368
									],
									[
										1590,
										1601
									],
									[
										1788,
										1799
									],
									[
										2002,
										2013
									],
									[
										2115,
										2126
									],
									[
										2407,
										2418
									],
									[
										2752,
										2768
									],
									[
										2892,
										2908
									],
									[
										2972,
										2988
									],
									[
										3105,
										3121
									],
									[
										3296,
										3312
									],
									[
										3567,
										3583
									],
									[
										3707,
										3723
									],
									[
										3787,
										3803
									],
									[
										3920,
										3936
									],
									[
										4111,
										4127
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3718,
								3718
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1712.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "js_array.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17576,
						"regions":
						{
						},
						"selection":
						[
							[
								16978,
								16978
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9508.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "js_line.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14369,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								114
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "js_contour.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32405,
						"regions":
						{
						},
						"selection":
						[
							[
								21031,
								21031
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12587.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "js_contour.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2117,
						"regions":
						{
						},
						"selection":
						[
							[
								2079,
								2076
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 336.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "js_point_iterator.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 770,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								465
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "js_point_iterator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6009,
						"regions":
						{
						},
						"selection":
						[
							[
								980,
								980
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "js_rect.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18864,
						"regions":
						{
						},
						"selection":
						[
							[
								856,
								856
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "qjs-opencv.sublime-project",
	"replace":
	{
		"height": 69.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"js_mat",
				"js_mat.cpp"
			],
			[
				"js_type",
				"js_typed_array.hpp"
			],
			[
				"jsbind",
				"jsbindings.hpp"
			],
			[
				"util.hpp",
				"util.hpp"
			],
			[
				"js_rc",
				"js_rect.cpp"
			],
			[
				"js_con",
				"js_contour.cpp"
			],
			[
				"js_lin",
				"js_line.cpp"
			],
			[
				"js_cv",
				"js_cv.cpp"
			],
			[
				"video",
				"js_video_capture.cpp"
			],
			[
				"js-bin",
				"cmake/js-bindings.cmake"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"wasi",
				"cmake/wasi.toolchain.cmake"
			],
			[
				"test-vid",
				"plot-cv/test-video.js"
			],
			[
				"cvPipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param",
				"plot-cv/param.js"
			],
			[
				"test-oencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_umat",
				"plot-cv/src/js_umat.hpp"
			],
			[
				"pixel_",
				"plot-cv/src/pixel_neighborhood.hpp"
			],
			[
				"test-opencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_typed",
				"plot-cv/src/js_typed_array.hpp"
			],
			[
				"opencv.cmake",
				"plot-cv/cmake/opencv.cmake"
			],
			[
				"test-vide",
				"plot-cv/test-video.js"
			],
			[
				"test-op",
				"plot-cv/test-opencv.js"
			],
			[
				"cvHigh",
				"plot-cv/cvHighGUI.js"
			],
			[
				"js.cpp",
				"plot-cv/src/js.cpp"
			],
			[
				"js_size",
				"plot-cv/src/js_size.hpp"
			],
			[
				"js_ma",
				"plot-cv/src/js_mat.cpp"
			],
			[
				"js_draw",
				"plot-cv/src/js_draw.cpp"
			],
			[
				"quickjs.h",
				"plot-cv/quickjs/quickjs.h"
			],
			[
				"test-open",
				"plot-cv/test-opencv.js"
			],
			[
				"js_cv.cp",
				"plot-cv/src/js_cv.cpp"
			],
			[
				"util.js",
				"plot-cv/lib/util.js"
			],
			[
				"cvpipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param.js",
				"plot-cv/param.js"
			],
			[
				"test-video",
				"plot-cv/test-video.js"
			],
			[
				"test_w",
				"plot-cv/test_worker_module.js"
			],
			[
				"test-wo",
				"plot-cv/test-worker.js"
			],
			[
				"cvPip",
				"plot-cv/cvPipeline.js"
			],
			[
				"worker",
				"plot-cv/worker.js"
			],
			[
				"worker.js",
				"plot-cv/worker.js"
			],
			[
				"test-work",
				"plot-cv/test-worker.js"
			],
			[
				"test-uma",
				"plot-cv/test-umat.js"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"quickjs.c",
				"plot-cv/quickjs/quickjs.c"
			],
			[
				"filesys",
				"plot-cv/lib/filesystem.js"
			],
			[
				"console",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"util",
				"plot-cv/lib/util.js"
			],
			[
				"bjson",
				"plot-cv/bjson.js"
			],
			[
				"ast-shel",
				"plot-cv/ast-shell.js"
			],
			[
				"clang-ast",
				"plot-cv/clang-ast.js"
			],
			[
				"clang-list",
				"plot-cv/clang-list.js"
			],
			[
				"test-bjs",
				"plot-cv/test-bjson.js"
			],
			[
				"repl.js",
				"plot-cv/repl.js"
			],
			[
				"clang-li",
				"plot-cv/clang-list.js"
			],
			[
				"clang-",
				"plot-cv/clang-ast.js"
			],
			[
				"ast-shell",
				"plot-cv/ast-shell.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"repl.j",
				"plot-cv/repl.js"
			],
			[
				"test-ecmascript2.js",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"test-ecmascript.js",
				"plot-cv/test-ecmascript.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"parser2",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"test-ecma",
				"plot-cv/test-ecmascript2.es"
			],
			[
				"test-parse",
				"plot-cv/test-parse.js"
			],
			[
				"grammar.js",
				"plot-cv/lib/parse/grammar.js"
			],
			[
				"terminal",
				"plot-cv/terminal.js"
			],
			[
				"test_lex",
				"plot-cv/quickjs/modules/tests/test_lexer.js"
			],
			[
				"test-ec",
				"plot-cv/test-ecmascript.js"
			],
			[
				"parser.js",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"printer.",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"estree",
				"plot-cv/lib/ecmascript/estree.js"
			],
			[
				"parser2.j",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"tmp.js",
				"plot-cv/tmp.js"
			],
			[
				"test-util",
				"plot-cv/test-util.js"
			],
			[
				"printer",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"parser",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"utils.h",
				"plot-cv/utils.h"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"quickjs-lex",
				"plot-cv/quickjs/modules/quickjs-lexer.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"quickjs-in",
				"plot-cv/quickjs/modules/quickjs-internal.h"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 406.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
