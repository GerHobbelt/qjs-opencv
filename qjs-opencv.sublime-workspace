{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rotae",
				"rotated_rect_proto"
			],
			[
				"conve",
				"convexityDefects"
			],
			[
				"VIE",
				"VIDEO_CAPTURE_METHOD_GET_BACKEND_NAME"
			],
			[
				"VIDE",
				"VIDEO_CAPTURE_METHOD_READ"
			],
			[
				"VIDEO",
				"VIDEO_CAPTURE_METHOD_OPEN"
			],
			[
				"VID",
				"VIDEO_CAPTURE_METHOD_GET_BACKEND_NAME"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"ROTA",
				"ROTATED_RECT_METHOD_BOUNDING_RECT"
			],
			[
				"ROT",
				"ROTATED_RECT_METHOD_BOUNDING_RECT"
			],
			[
				"ROTATE",
				"ROTATED_RECT_PROP_CENTER"
			],
			[
				"js_rota",
				"js_rotated_rect_init"
			],
			[
				"js_rotate",
				"js_rotated_rect_init"
			],
			[
				"BORDER",
				"BORDER_CONSTANT"
			],
			[
				"BOR",
				"BORDER_DEFAULT"
			],
			[
				"BO",
				"BORDER_CONSTANT"
			],
			[
				"in",
				"interpolation"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"weight",
				"weights1"
			],
			[
				"JSInpu",
				"JSInputArray"
			],
			[
				"thres",
				"thresholdType"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"OTHER_SOLV",
				"OTHER_SOLVE_CUBIC"
			],
			[
				"ny",
				"normType"
			],
			[
				"angle",
				"angleInDegrees"
			],
			[
				"mask",
				"ACCESS_MASK"
			],
			[
				"i",
				"if"
			],
			[
				"OTHER_MIN",
				"OTHER_MIN_MAX_LOC"
			],
			[
				"JS_Set",
				"JS_SetPropertyFunctionList"
			],
			[
				"dista",
				"distance_threshold"
			],
			[
				"len",
				"length_threshold"
			],
			[
				"js_line",
				"js_line_segment_detector_export"
			],
			[
				"bytes_",
				"bytes_per_element"
			],
			[
				"QUICKJS_MO",
				"QUICKJS_MODULE_CFLAGS"
			],
			[
				"check_cxx",
				"check_cxx_standard_flag"
			],
			[
				"check_func",
				"check_function_exists"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"cons",
				"console"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_cv.cpp",
						"symkeys":
						[
							[
								591,
								602
							],
							[
								651,
								665
							],
							[
								859,
								871
							],
							[
								1084,
								1097
							],
							[
								1890,
								1901
							],
							[
								2572,
								2587
							],
							[
								3284,
								3302
							],
							[
								4188,
								4207
							],
							[
								5413,
								5424
							],
							[
								5802,
								5820
							],
							[
								7638,
								7652
							],
							[
								8043,
								8056
							],
							[
								8912,
								8922
							],
							[
								11365,
								11375
							],
							[
								16767,
								16778
							],
							[
								27743,
								27758
							],
							[
								27912,
								27930
							],
							[
								27976,
								27988
							],
							[
								28021,
								28033
							],
							[
								28068,
								28080
							],
							[
								28111,
								28123
							],
							[
								28162,
								28174
							],
							[
								28205,
								28217
							],
							[
								28261,
								28273
							],
							[
								28317,
								28335
							],
							[
								28379,
								28397
							],
							[
								28445,
								28463
							],
							[
								28510,
								28528
							],
							[
								28570,
								28588
							],
							[
								28629,
								28647
							],
							[
								28689,
								28707
							],
							[
								28749,
								28767
							],
							[
								28831,
								28849
							],
							[
								28911,
								28929
							],
							[
								28983,
								29001
							],
							[
								29056,
								29074
							],
							[
								29123,
								29141
							],
							[
								29166,
								29184
							],
							[
								29211,
								29229
							],
							[
								29259,
								29277
							],
							[
								29323,
								29341
							],
							[
								29379,
								29397
							],
							[
								29443,
								29461
							],
							[
								29505,
								29523
							],
							[
								29561,
								29579
							],
							[
								29617,
								29635
							],
							[
								29683,
								29701
							],
							[
								29743,
								29761
							],
							[
								29810,
								29828
							],
							[
								29882,
								29900
							],
							[
								29962,
								29980
							],
							[
								30040,
								30058
							],
							[
								30102,
								30120
							],
							[
								30158,
								30176
							],
							[
								30214,
								30232
							],
							[
								30270,
								30288
							],
							[
								30348,
								30366
							],
							[
								30406,
								30424
							],
							[
								30464,
								30482
							],
							[
								30522,
								30540
							],
							[
								30584,
								30602
							],
							[
								30640,
								30658
							],
							[
								30716,
								30734
							],
							[
								30806,
								30824
							],
							[
								30868,
								30886
							],
							[
								30930,
								30948
							],
							[
								30988,
								31006
							],
							[
								31052,
								31070
							],
							[
								31110,
								31128
							],
							[
								31178,
								31196
							],
							[
								31247,
								31265
							],
							[
								31331,
								31349
							],
							[
								31407,
								31425
							],
							[
								31480,
								31498
							],
							[
								31554,
								31572
							],
							[
								31616,
								31634
							],
							[
								31704,
								31722
							],
							[
								31771,
								31789
							],
							[
								31850,
								31868
							],
							[
								31908,
								31926
							],
							[
								31978,
								31996
							],
							[
								32052,
								32070
							],
							[
								32112,
								32130
							],
							[
								32186,
								32204
							],
							[
								32258,
								32276
							],
							[
								32330,
								32348
							],
							[
								32407,
								32425
							],
							[
								32467,
								32485
							],
							[
								32538,
								32556
							],
							[
								32600,
								32618
							],
							[
								32676,
								32694
							],
							[
								32734,
								32752
							],
							[
								32796,
								32814
							],
							[
								32871,
								32889
							],
							[
								32933,
								32951
							],
							[
								32997,
								33015
							],
							[
								33066,
								33084
							],
							[
								33141,
								33159
							],
							[
								33214,
								33232
							],
							[
								33285,
								33303
							],
							[
								33343,
								33361
							],
							[
								33446,
								33457
							],
							[
								33481,
								33492
							],
							[
								33516,
								33527
							],
							[
								33554,
								33565
							],
							[
								33582,
								33593
							],
							[
								33610,
								33621
							],
							[
								33638,
								33649
							],
							[
								33666,
								33677
							],
							[
								33694,
								33705
							],
							[
								33722,
								33733
							],
							[
								33746,
								33757
							],
							[
								33770,
								33781
							],
							[
								33795,
								33806
							],
							[
								33820,
								33831
							],
							[
								33845,
								33856
							],
							[
								33870,
								33881
							],
							[
								33895,
								33906
							],
							[
								33921,
								33932
							],
							[
								33947,
								33958
							],
							[
								33973,
								33984
							],
							[
								33999,
								34010
							],
							[
								34025,
								34036
							],
							[
								34051,
								34062
							],
							[
								34077,
								34088
							],
							[
								34103,
								34114
							],
							[
								34130,
								34141
							],
							[
								34157,
								34168
							],
							[
								34184,
								34195
							],
							[
								34211,
								34222
							],
							[
								34238,
								34249
							],
							[
								34265,
								34276
							],
							[
								34292,
								34303
							],
							[
								34319,
								34330
							],
							[
								34346,
								34357
							],
							[
								34373,
								34384
							],
							[
								34400,
								34411
							],
							[
								34427,
								34438
							],
							[
								34454,
								34465
							],
							[
								34481,
								34492
							],
							[
								34508,
								34519
							],
							[
								34535,
								34546
							],
							[
								34562,
								34573
							],
							[
								34589,
								34600
							],
							[
								34616,
								34627
							],
							[
								34643,
								34657
							],
							[
								34677,
								34691
							],
							[
								34712,
								34726
							],
							[
								34742,
								34756
							],
							[
								34771,
								34785
							],
							[
								34800,
								34814
							],
							[
								34832,
								34846
							],
							[
								34865,
								34879
							],
							[
								34900,
								34914
							],
							[
								34936,
								34950
							],
							[
								34972,
								34986
							],
							[
								35008,
								35022
							],
							[
								35044,
								35058
							],
							[
								35080,
								35094
							],
							[
								35116,
								35130
							],
							[
								35152,
								35166
							],
							[
								35188,
								35202
							],
							[
								35224,
								35238
							],
							[
								35259,
								35273
							],
							[
								35294,
								35308
							],
							[
								35331,
								35345
							],
							[
								35368,
								35382
							],
							[
								35404,
								35418
							],
							[
								35440,
								35454
							],
							[
								35476,
								35490
							],
							[
								35512,
								35526
							],
							[
								35549,
								35563
							],
							[
								35586,
								35600
							],
							[
								35623,
								35637
							],
							[
								35660,
								35674
							],
							[
								35698,
								35712
							],
							[
								35736,
								35750
							],
							[
								35774,
								35788
							],
							[
								35812,
								35826
							],
							[
								35851,
								35865
							],
							[
								35890,
								35904
							],
							[
								35929,
								35943
							],
							[
								35968,
								35982
							],
							[
								36007,
								36021
							],
							[
								36046,
								36060
							],
							[
								36084,
								36098
							],
							[
								36122,
								36136
							],
							[
								36160,
								36174
							],
							[
								36198,
								36212
							],
							[
								36237,
								36251
							],
							[
								36276,
								36290
							],
							[
								36315,
								36329
							],
							[
								36354,
								36368
							],
							[
								36393,
								36407
							],
							[
								36432,
								36446
							],
							[
								36467,
								36481
							],
							[
								36502,
								36516
							],
							[
								36537,
								36551
							],
							[
								36572,
								36586
							],
							[
								36609,
								36623
							],
							[
								36646,
								36660
							],
							[
								36683,
								36697
							],
							[
								36720,
								36734
							],
							[
								36755,
								36769
							],
							[
								36790,
								36804
							],
							[
								36825,
								36839
							],
							[
								36860,
								36874
							],
							[
								36895,
								36909
							],
							[
								36930,
								36944
							],
							[
								36965,
								36979
							],
							[
								37000,
								37014
							],
							[
								37035,
								37049
							],
							[
								37070,
								37084
							],
							[
								37105,
								37119
							],
							[
								37140,
								37154
							],
							[
								37175,
								37189
							],
							[
								37210,
								37224
							],
							[
								37245,
								37259
							],
							[
								37280,
								37294
							],
							[
								37320,
								37334
							],
							[
								37360,
								37374
							],
							[
								37400,
								37414
							],
							[
								37440,
								37454
							],
							[
								37480,
								37494
							],
							[
								37520,
								37534
							],
							[
								37560,
								37574
							],
							[
								37600,
								37614
							],
							[
								37636,
								37650
							],
							[
								37672,
								37686
							],
							[
								37708,
								37722
							],
							[
								37744,
								37758
							],
							[
								37780,
								37794
							],
							[
								37816,
								37830
							],
							[
								37852,
								37866
							],
							[
								37888,
								37902
							],
							[
								37923,
								37937
							],
							[
								37958,
								37972
							],
							[
								37993,
								38007
							],
							[
								38028,
								38042
							],
							[
								38068,
								38082
							],
							[
								38108,
								38122
							],
							[
								38148,
								38162
							],
							[
								38188,
								38202
							],
							[
								38228,
								38242
							],
							[
								38268,
								38282
							],
							[
								38309,
								38323
							],
							[
								38350,
								38364
							],
							[
								38391,
								38405
							],
							[
								38432,
								38446
							],
							[
								38473,
								38487
							],
							[
								38514,
								38528
							],
							[
								38554,
								38568
							],
							[
								38594,
								38608
							],
							[
								38634,
								38648
							],
							[
								38674,
								38688
							],
							[
								38714,
								38728
							],
							[
								38754,
								38768
							],
							[
								38793,
								38807
							],
							[
								38832,
								38846
							],
							[
								38873,
								38887
							],
							[
								38914,
								38928
							],
							[
								38955,
								38969
							],
							[
								38996,
								39010
							],
							[
								39037,
								39051
							],
							[
								39078,
								39092
							],
							[
								39118,
								39132
							],
							[
								39158,
								39172
							],
							[
								39198,
								39212
							],
							[
								39239,
								39253
							],
							[
								39280,
								39294
							],
							[
								39321,
								39335
							],
							[
								39362,
								39376
							],
							[
								39403,
								39417
							],
							[
								39444,
								39458
							],
							[
								39484,
								39498
							],
							[
								39524,
								39538
							],
							[
								39564,
								39578
							],
							[
								39604,
								39618
							],
							[
								39644,
								39658
							],
							[
								39684,
								39698
							],
							[
								39724,
								39738
							],
							[
								39765,
								39779
							],
							[
								39806,
								39820
							],
							[
								39847,
								39861
							],
							[
								39888,
								39902
							],
							[
								39929,
								39943
							],
							[
								39970,
								39984
							],
							[
								40010,
								40024
							],
							[
								40050,
								40064
							],
							[
								40090,
								40104
							],
							[
								40130,
								40144
							],
							[
								40170,
								40184
							],
							[
								40210,
								40224
							],
							[
								40250,
								40264
							],
							[
								40290,
								40304
							],
							[
								40331,
								40345
							],
							[
								40372,
								40386
							],
							[
								40413,
								40427
							],
							[
								40454,
								40468
							],
							[
								40495,
								40509
							],
							[
								40536,
								40550
							],
							[
								40577,
								40591
							],
							[
								40618,
								40632
							],
							[
								40659,
								40673
							],
							[
								40700,
								40714
							],
							[
								40741,
								40755
							],
							[
								40782,
								40796
							],
							[
								40823,
								40837
							],
							[
								40864,
								40878
							],
							[
								40905,
								40919
							],
							[
								40943,
								40957
							],
							[
								40981,
								40995
							],
							[
								41021,
								41035
							],
							[
								41061,
								41075
							],
							[
								41101,
								41115
							],
							[
								41141,
								41155
							],
							[
								41182,
								41196
							],
							[
								41223,
								41237
							],
							[
								41264,
								41278
							],
							[
								41305,
								41319
							],
							[
								41345,
								41359
							],
							[
								41385,
								41399
							],
							[
								41426,
								41440
							],
							[
								41467,
								41481
							],
							[
								41506,
								41520
							],
							[
								41545,
								41559
							],
							[
								41584,
								41598
							],
							[
								41623,
								41637
							],
							[
								41662,
								41676
							],
							[
								41701,
								41715
							],
							[
								41740,
								41754
							],
							[
								41779,
								41793
							],
							[
								41819,
								41833
							],
							[
								41859,
								41873
							],
							[
								41899,
								41913
							],
							[
								41939,
								41953
							],
							[
								41982,
								41996
							],
							[
								42025,
								42039
							],
							[
								42068,
								42082
							],
							[
								42111,
								42125
							],
							[
								42154,
								42168
							],
							[
								42197,
								42211
							],
							[
								42240,
								42254
							],
							[
								42283,
								42297
							],
							[
								42325,
								42339
							],
							[
								42367,
								42381
							],
							[
								42409,
								42423
							],
							[
								42451,
								42465
							],
							[
								42493,
								42507
							],
							[
								42535,
								42549
							],
							[
								42577,
								42591
							],
							[
								42619,
								42633
							],
							[
								42659,
								42673
							],
							[
								42699,
								42713
							],
							[
								42739,
								42753
							],
							[
								42779,
								42793
							],
							[
								42819,
								42833
							],
							[
								42859,
								42873
							],
							[
								42899,
								42913
							],
							[
								42939,
								42953
							],
							[
								42974,
								42988
							],
							[
								43005,
								43019
							],
							[
								43037,
								43051
							],
							[
								43068,
								43082
							],
							[
								43104,
								43118
							],
							[
								43143,
								43157
							],
							[
								43184,
								43198
							],
							[
								43226,
								43240
							],
							[
								43270,
								43284
							],
							[
								43307,
								43321
							],
							[
								43345,
								43359
							],
							[
								43381,
								43395
							],
							[
								43414,
								43428
							],
							[
								43454,
								43468
							],
							[
								43494,
								43508
							],
							[
								43533,
								43547
							],
							[
								43569,
								43583
							],
							[
								43606,
								43620
							],
							[
								43641,
								43655
							],
							[
								43680,
								43694
							],
							[
								43714,
								43728
							],
							[
								43749,
								43763
							],
							[
								43788,
								43802
							],
							[
								43821,
								43835
							],
							[
								43854,
								43868
							],
							[
								43891,
								43905
							],
							[
								43923,
								43937
							],
							[
								43956,
								43970
							],
							[
								43991,
								44005
							],
							[
								44020,
								44034
							],
							[
								44049,
								44063
							],
							[
								44078,
								44092
							],
							[
								44108,
								44122
							],
							[
								44142,
								44156
							],
							[
								44176,
								44190
							],
							[
								44210,
								44224
							],
							[
								44242,
								44256
							],
							[
								44275,
								44289
							],
							[
								44303,
								44317
							],
							[
								44335,
								44349
							],
							[
								44366,
								44380
							],
							[
								44397,
								44411
							],
							[
								44429,
								44443
							],
							[
								44466,
								44480
							],
							[
								44499,
								44513
							],
							[
								44530,
								44544
							],
							[
								44568,
								44582
							],
							[
								44603,
								44617
							],
							[
								44633,
								44647
							],
							[
								44664,
								44678
							],
							[
								44699,
								44713
							],
							[
								44732,
								44746
							],
							[
								44770,
								44784
							],
							[
								44803,
								44817
							],
							[
								44838,
								44852
							],
							[
								44870,
								44884
							],
							[
								44902,
								44916
							],
							[
								44934,
								44948
							],
							[
								44972,
								44986
							],
							[
								45007,
								45021
							],
							[
								45037,
								45051
							],
							[
								45076,
								45090
							],
							[
								45117,
								45131
							],
							[
								45161,
								45175
							],
							[
								45203,
								45217
							],
							[
								45246,
								45260
							],
							[
								45280,
								45294
							],
							[
								45317,
								45331
							],
							[
								45359,
								45373
							],
							[
								45396,
								45410
							],
							[
								45431,
								45445
							],
							[
								45472,
								45486
							],
							[
								45511,
								45525
							],
							[
								45552,
								45566
							],
							[
								45586,
								45600
							],
							[
								45621,
								45635
							],
							[
								45660,
								45674
							],
							[
								45702,
								45716
							],
							[
								45753,
								45767
							],
							[
								45797,
								45811
							],
							[
								45838,
								45852
							],
							[
								45878,
								45892
							],
							[
								45922,
								45936
							],
							[
								45958,
								45972
							],
							[
								46000,
								46014
							],
							[
								46038,
								46052
							],
							[
								46082,
								46096
							],
							[
								46132,
								46146
							],
							[
								46167,
								46181
							],
							[
								46203,
								46217
							],
							[
								46238,
								46252
							],
							[
								46278,
								46292
							],
							[
								46318,
								46332
							],
							[
								46352,
								46366
							],
							[
								46387,
								46401
							],
							[
								46422,
								46436
							],
							[
								46457,
								46471
							],
							[
								46496,
								46510
							],
							[
								46537,
								46551
							],
							[
								46577,
								46591
							],
							[
								46615,
								46629
							],
							[
								46653,
								46667
							],
							[
								46691,
								46705
							],
							[
								46729,
								46743
							],
							[
								46767,
								46781
							],
							[
								46812,
								46826
							],
							[
								46862,
								46876
							],
							[
								46908,
								46922
							],
							[
								46957,
								46971
							],
							[
								47055,
								47069
							],
							[
								47097,
								47111
							],
							[
								47137,
								47151
							],
							[
								47178,
								47192
							],
							[
								47220,
								47234
							],
							[
								47262,
								47276
							],
							[
								47310,
								47324
							],
							[
								47359,
								47373
							],
							[
								47408,
								47422
							],
							[
								47441,
								47452
							],
							[
								47469,
								47480
							],
							[
								47497,
								47508
							],
							[
								47526,
								47537
							],
							[
								47556,
								47570
							],
							[
								47592,
								47606
							],
							[
								47633,
								47647
							],
							[
								47672,
								47686
							],
							[
								47708,
								47722
							],
							[
								47743,
								47757
							],
							[
								47777,
								47791
							],
							[
								47810,
								47824
							],
							[
								47842,
								47856
							],
							[
								47878,
								47892
							],
							[
								47918,
								47932
							],
							[
								47949,
								47963
							],
							[
								47988,
								48002
							],
							[
								48027,
								48041
							],
							[
								48066,
								48080
							],
							[
								48099,
								48113
							],
							[
								48133,
								48147
							],
							[
								48164,
								48178
							],
							[
								48197,
								48211
							],
							[
								48230,
								48244
							],
							[
								48265,
								48279
							],
							[
								48313,
								48327
							],
							[
								48363,
								48377
							],
							[
								48413,
								48427
							],
							[
								48451,
								48465
							],
							[
								48489,
								48503
							],
							[
								48523,
								48537
							],
							[
								48560,
								48574
							],
							[
								48597,
								48611
							],
							[
								48635,
								48649
							],
							[
								48683,
								48697
							],
							[
								48727,
								48741
							],
							[
								48775,
								48789
							],
							[
								48819,
								48833
							],
							[
								48867,
								48881
							],
							[
								48911,
								48925
							],
							[
								48959,
								48973
							],
							[
								49001,
								49015
							],
							[
								49047,
								49061
							],
							[
								49090,
								49104
							],
							[
								49137,
								49151
							],
							[
								49184,
								49198
							],
							[
								49233,
								49247
							],
							[
								49278,
								49292
							],
							[
								49320,
								49334
							],
							[
								49361,
								49375
							],
							[
								49401,
								49415
							],
							[
								49439,
								49453
							],
							[
								49481,
								49495
							],
							[
								49524,
								49538
							],
							[
								49566,
								49580
							],
							[
								49605,
								49619
							],
							[
								49644,
								49658
							],
							[
								49690,
								49704
							],
							[
								49746,
								49760
							],
							[
								49789,
								49803
							],
							[
								49833,
								49847
							],
							[
								49883,
								49897
							],
							[
								49934,
								49948
							],
							[
								49989,
								50003
							],
							[
								50035,
								50049
							],
							[
								50083,
								50097
							],
							[
								50128,
								50142
							],
							[
								50182,
								50196
							],
							[
								50232,
								50246
							],
							[
								50288,
								50302
							],
							[
								50332,
								50346
							],
							[
								50382,
								50396
							],
							[
								50410,
								50424
							],
							[
								50438,
								50452
							],
							[
								50467,
								50481
							],
							[
								50504,
								50518
							],
							[
								50540,
								50554
							],
							[
								50577,
								50591
							],
							[
								50614,
								50628
							],
							[
								50649,
								50663
							],
							[
								50683,
								50697
							],
							[
								50720,
								50734
							],
							[
								50758,
								50772
							],
							[
								50794,
								50808
							],
							[
								50831,
								50845
							],
							[
								50868,
								50882
							],
							[
								50903,
								50917
							],
							[
								50937,
								50951
							],
							[
								50972,
								50986
							],
							[
								51006,
								51020
							],
							[
								51043,
								51057
							],
							[
								51079,
								51093
							],
							[
								51117,
								51131
							],
							[
								51154,
								51168
							],
							[
								51192,
								51206
							],
							[
								51230,
								51244
							],
							[
								51269,
								51283
							],
							[
								51316,
								51330
							],
							[
								51410,
								51420
							],
							[
								52579,
								52591
							],
							[
								52874,
								52888
							],
							[
								52926,
								52940
							],
							[
								52991,
								53005
							]
						],
						"symlist":
						[
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_imread",
							"js_cv_imwrite",
							"js_cv_split",
							"js_cv_normalize",
							"js_cv_add_weighted",
							"js_cv_mat_functions",
							"js_cv_merge",
							"js_cv_mix_channels",
							"js_cv_getticks",
							"js_cv_bitwise",
							"js_cv_math",
							"js_cv_core",
							"js_cv_other",
							"js_cv_finalizer",
							"js_function_list_t",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_init",
							"js_cv_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAlSIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_cv.cpp",
						"symkeys":
						[
							[
								591,
								602
							],
							[
								651,
								665
							],
							[
								859,
								871
							],
							[
								1084,
								1097
							],
							[
								1890,
								1901
							],
							[
								2572,
								2587
							],
							[
								3284,
								3302
							],
							[
								4188,
								4207
							],
							[
								5413,
								5424
							],
							[
								5802,
								5820
							],
							[
								7638,
								7652
							],
							[
								8043,
								8056
							],
							[
								8912,
								8922
							],
							[
								11365,
								11375
							],
							[
								16767,
								16778
							],
							[
								27743,
								27758
							],
							[
								27912,
								27930
							],
							[
								27976,
								27988
							],
							[
								28021,
								28033
							],
							[
								28068,
								28080
							],
							[
								28111,
								28123
							],
							[
								28162,
								28174
							],
							[
								28205,
								28217
							],
							[
								28261,
								28273
							],
							[
								28317,
								28335
							],
							[
								28379,
								28397
							],
							[
								28445,
								28463
							],
							[
								28510,
								28528
							],
							[
								28570,
								28588
							],
							[
								28629,
								28647
							],
							[
								28689,
								28707
							],
							[
								28749,
								28767
							],
							[
								28831,
								28849
							],
							[
								28911,
								28929
							],
							[
								28983,
								29001
							],
							[
								29056,
								29074
							],
							[
								29123,
								29141
							],
							[
								29166,
								29184
							],
							[
								29211,
								29229
							],
							[
								29259,
								29277
							],
							[
								29323,
								29341
							],
							[
								29379,
								29397
							],
							[
								29443,
								29461
							],
							[
								29505,
								29523
							],
							[
								29561,
								29579
							],
							[
								29617,
								29635
							],
							[
								29683,
								29701
							],
							[
								29743,
								29761
							],
							[
								29810,
								29828
							],
							[
								29882,
								29900
							],
							[
								29962,
								29980
							],
							[
								30040,
								30058
							],
							[
								30102,
								30120
							],
							[
								30158,
								30176
							],
							[
								30214,
								30232
							],
							[
								30270,
								30288
							],
							[
								30348,
								30366
							],
							[
								30406,
								30424
							],
							[
								30464,
								30482
							],
							[
								30522,
								30540
							],
							[
								30584,
								30602
							],
							[
								30640,
								30658
							],
							[
								30716,
								30734
							],
							[
								30806,
								30824
							],
							[
								30868,
								30886
							],
							[
								30930,
								30948
							],
							[
								30988,
								31006
							],
							[
								31052,
								31070
							],
							[
								31110,
								31128
							],
							[
								31178,
								31196
							],
							[
								31247,
								31265
							],
							[
								31331,
								31349
							],
							[
								31407,
								31425
							],
							[
								31480,
								31498
							],
							[
								31554,
								31572
							],
							[
								31616,
								31634
							],
							[
								31704,
								31722
							],
							[
								31771,
								31789
							],
							[
								31850,
								31868
							],
							[
								31908,
								31926
							],
							[
								31978,
								31996
							],
							[
								32052,
								32070
							],
							[
								32112,
								32130
							],
							[
								32186,
								32204
							],
							[
								32258,
								32276
							],
							[
								32330,
								32348
							],
							[
								32407,
								32425
							],
							[
								32467,
								32485
							],
							[
								32538,
								32556
							],
							[
								32600,
								32618
							],
							[
								32676,
								32694
							],
							[
								32734,
								32752
							],
							[
								32796,
								32814
							],
							[
								32871,
								32889
							],
							[
								32933,
								32951
							],
							[
								32997,
								33015
							],
							[
								33066,
								33084
							],
							[
								33141,
								33159
							],
							[
								33214,
								33232
							],
							[
								33285,
								33303
							],
							[
								33343,
								33361
							],
							[
								33446,
								33457
							],
							[
								33481,
								33492
							],
							[
								33516,
								33527
							],
							[
								33554,
								33565
							],
							[
								33582,
								33593
							],
							[
								33610,
								33621
							],
							[
								33638,
								33649
							],
							[
								33666,
								33677
							],
							[
								33694,
								33705
							],
							[
								33722,
								33733
							],
							[
								33746,
								33757
							],
							[
								33770,
								33781
							],
							[
								33795,
								33806
							],
							[
								33820,
								33831
							],
							[
								33845,
								33856
							],
							[
								33870,
								33881
							],
							[
								33895,
								33906
							],
							[
								33921,
								33932
							],
							[
								33947,
								33958
							],
							[
								33973,
								33984
							],
							[
								33999,
								34010
							],
							[
								34025,
								34036
							],
							[
								34051,
								34062
							],
							[
								34077,
								34088
							],
							[
								34103,
								34114
							],
							[
								34130,
								34141
							],
							[
								34157,
								34168
							],
							[
								34184,
								34195
							],
							[
								34211,
								34222
							],
							[
								34238,
								34249
							],
							[
								34265,
								34276
							],
							[
								34292,
								34303
							],
							[
								34319,
								34330
							],
							[
								34346,
								34357
							],
							[
								34373,
								34384
							],
							[
								34400,
								34411
							],
							[
								34427,
								34438
							],
							[
								34454,
								34465
							],
							[
								34481,
								34492
							],
							[
								34508,
								34519
							],
							[
								34535,
								34546
							],
							[
								34562,
								34573
							],
							[
								34589,
								34600
							],
							[
								34616,
								34627
							],
							[
								34643,
								34657
							],
							[
								34677,
								34691
							],
							[
								34712,
								34726
							],
							[
								34742,
								34756
							],
							[
								34771,
								34785
							],
							[
								34800,
								34814
							],
							[
								34832,
								34846
							],
							[
								34865,
								34879
							],
							[
								34900,
								34914
							],
							[
								34936,
								34950
							],
							[
								34972,
								34986
							],
							[
								35008,
								35022
							],
							[
								35044,
								35058
							],
							[
								35080,
								35094
							],
							[
								35116,
								35130
							],
							[
								35152,
								35166
							],
							[
								35188,
								35202
							],
							[
								35224,
								35238
							],
							[
								35259,
								35273
							],
							[
								35294,
								35308
							],
							[
								35331,
								35345
							],
							[
								35368,
								35382
							],
							[
								35404,
								35418
							],
							[
								35440,
								35454
							],
							[
								35476,
								35490
							],
							[
								35512,
								35526
							],
							[
								35549,
								35563
							],
							[
								35586,
								35600
							],
							[
								35623,
								35637
							],
							[
								35660,
								35674
							],
							[
								35698,
								35712
							],
							[
								35736,
								35750
							],
							[
								35774,
								35788
							],
							[
								35812,
								35826
							],
							[
								35851,
								35865
							],
							[
								35890,
								35904
							],
							[
								35929,
								35943
							],
							[
								35968,
								35982
							],
							[
								36007,
								36021
							],
							[
								36046,
								36060
							],
							[
								36084,
								36098
							],
							[
								36122,
								36136
							],
							[
								36160,
								36174
							],
							[
								36198,
								36212
							],
							[
								36237,
								36251
							],
							[
								36276,
								36290
							],
							[
								36315,
								36329
							],
							[
								36354,
								36368
							],
							[
								36393,
								36407
							],
							[
								36432,
								36446
							],
							[
								36467,
								36481
							],
							[
								36502,
								36516
							],
							[
								36537,
								36551
							],
							[
								36572,
								36586
							],
							[
								36609,
								36623
							],
							[
								36646,
								36660
							],
							[
								36683,
								36697
							],
							[
								36720,
								36734
							],
							[
								36755,
								36769
							],
							[
								36790,
								36804
							],
							[
								36825,
								36839
							],
							[
								36860,
								36874
							],
							[
								36895,
								36909
							],
							[
								36930,
								36944
							],
							[
								36965,
								36979
							],
							[
								37000,
								37014
							],
							[
								37035,
								37049
							],
							[
								37070,
								37084
							],
							[
								37105,
								37119
							],
							[
								37140,
								37154
							],
							[
								37175,
								37189
							],
							[
								37210,
								37224
							],
							[
								37245,
								37259
							],
							[
								37280,
								37294
							],
							[
								37320,
								37334
							],
							[
								37360,
								37374
							],
							[
								37400,
								37414
							],
							[
								37440,
								37454
							],
							[
								37480,
								37494
							],
							[
								37520,
								37534
							],
							[
								37560,
								37574
							],
							[
								37600,
								37614
							],
							[
								37636,
								37650
							],
							[
								37672,
								37686
							],
							[
								37708,
								37722
							],
							[
								37744,
								37758
							],
							[
								37780,
								37794
							],
							[
								37816,
								37830
							],
							[
								37852,
								37866
							],
							[
								37888,
								37902
							],
							[
								37923,
								37937
							],
							[
								37958,
								37972
							],
							[
								37993,
								38007
							],
							[
								38028,
								38042
							],
							[
								38068,
								38082
							],
							[
								38108,
								38122
							],
							[
								38148,
								38162
							],
							[
								38188,
								38202
							],
							[
								38228,
								38242
							],
							[
								38268,
								38282
							],
							[
								38309,
								38323
							],
							[
								38350,
								38364
							],
							[
								38391,
								38405
							],
							[
								38432,
								38446
							],
							[
								38473,
								38487
							],
							[
								38514,
								38528
							],
							[
								38554,
								38568
							],
							[
								38594,
								38608
							],
							[
								38634,
								38648
							],
							[
								38674,
								38688
							],
							[
								38714,
								38728
							],
							[
								38754,
								38768
							],
							[
								38793,
								38807
							],
							[
								38832,
								38846
							],
							[
								38873,
								38887
							],
							[
								38914,
								38928
							],
							[
								38955,
								38969
							],
							[
								38996,
								39010
							],
							[
								39037,
								39051
							],
							[
								39078,
								39092
							],
							[
								39118,
								39132
							],
							[
								39158,
								39172
							],
							[
								39198,
								39212
							],
							[
								39239,
								39253
							],
							[
								39280,
								39294
							],
							[
								39321,
								39335
							],
							[
								39362,
								39376
							],
							[
								39403,
								39417
							],
							[
								39444,
								39458
							],
							[
								39484,
								39498
							],
							[
								39524,
								39538
							],
							[
								39564,
								39578
							],
							[
								39604,
								39618
							],
							[
								39644,
								39658
							],
							[
								39684,
								39698
							],
							[
								39724,
								39738
							],
							[
								39765,
								39779
							],
							[
								39806,
								39820
							],
							[
								39847,
								39861
							],
							[
								39888,
								39902
							],
							[
								39929,
								39943
							],
							[
								39970,
								39984
							],
							[
								40010,
								40024
							],
							[
								40050,
								40064
							],
							[
								40090,
								40104
							],
							[
								40130,
								40144
							],
							[
								40170,
								40184
							],
							[
								40210,
								40224
							],
							[
								40250,
								40264
							],
							[
								40290,
								40304
							],
							[
								40331,
								40345
							],
							[
								40372,
								40386
							],
							[
								40413,
								40427
							],
							[
								40454,
								40468
							],
							[
								40495,
								40509
							],
							[
								40536,
								40550
							],
							[
								40577,
								40591
							],
							[
								40618,
								40632
							],
							[
								40659,
								40673
							],
							[
								40700,
								40714
							],
							[
								40741,
								40755
							],
							[
								40782,
								40796
							],
							[
								40823,
								40837
							],
							[
								40864,
								40878
							],
							[
								40905,
								40919
							],
							[
								40943,
								40957
							],
							[
								40981,
								40995
							],
							[
								41021,
								41035
							],
							[
								41061,
								41075
							],
							[
								41101,
								41115
							],
							[
								41141,
								41155
							],
							[
								41182,
								41196
							],
							[
								41223,
								41237
							],
							[
								41264,
								41278
							],
							[
								41305,
								41319
							],
							[
								41345,
								41359
							],
							[
								41385,
								41399
							],
							[
								41426,
								41440
							],
							[
								41467,
								41481
							],
							[
								41506,
								41520
							],
							[
								41545,
								41559
							],
							[
								41584,
								41598
							],
							[
								41623,
								41637
							],
							[
								41662,
								41676
							],
							[
								41701,
								41715
							],
							[
								41740,
								41754
							],
							[
								41779,
								41793
							],
							[
								41819,
								41833
							],
							[
								41859,
								41873
							],
							[
								41899,
								41913
							],
							[
								41939,
								41953
							],
							[
								41982,
								41996
							],
							[
								42025,
								42039
							],
							[
								42068,
								42082
							],
							[
								42111,
								42125
							],
							[
								42154,
								42168
							],
							[
								42197,
								42211
							],
							[
								42240,
								42254
							],
							[
								42283,
								42297
							],
							[
								42325,
								42339
							],
							[
								42367,
								42381
							],
							[
								42409,
								42423
							],
							[
								42451,
								42465
							],
							[
								42493,
								42507
							],
							[
								42535,
								42549
							],
							[
								42577,
								42591
							],
							[
								42619,
								42633
							],
							[
								42659,
								42673
							],
							[
								42699,
								42713
							],
							[
								42739,
								42753
							],
							[
								42779,
								42793
							],
							[
								42819,
								42833
							],
							[
								42859,
								42873
							],
							[
								42899,
								42913
							],
							[
								42939,
								42953
							],
							[
								42974,
								42988
							],
							[
								43005,
								43019
							],
							[
								43037,
								43051
							],
							[
								43068,
								43082
							],
							[
								43104,
								43118
							],
							[
								43143,
								43157
							],
							[
								43184,
								43198
							],
							[
								43226,
								43240
							],
							[
								43270,
								43284
							],
							[
								43307,
								43321
							],
							[
								43345,
								43359
							],
							[
								43381,
								43395
							],
							[
								43414,
								43428
							],
							[
								43454,
								43468
							],
							[
								43494,
								43508
							],
							[
								43533,
								43547
							],
							[
								43569,
								43583
							],
							[
								43606,
								43620
							],
							[
								43641,
								43655
							],
							[
								43680,
								43694
							],
							[
								43714,
								43728
							],
							[
								43749,
								43763
							],
							[
								43788,
								43802
							],
							[
								43821,
								43835
							],
							[
								43854,
								43868
							],
							[
								43891,
								43905
							],
							[
								43923,
								43937
							],
							[
								43956,
								43970
							],
							[
								43991,
								44005
							],
							[
								44020,
								44034
							],
							[
								44049,
								44063
							],
							[
								44078,
								44092
							],
							[
								44108,
								44122
							],
							[
								44142,
								44156
							],
							[
								44176,
								44190
							],
							[
								44210,
								44224
							],
							[
								44242,
								44256
							],
							[
								44275,
								44289
							],
							[
								44303,
								44317
							],
							[
								44335,
								44349
							],
							[
								44366,
								44380
							],
							[
								44397,
								44411
							],
							[
								44429,
								44443
							],
							[
								44466,
								44480
							],
							[
								44499,
								44513
							],
							[
								44530,
								44544
							],
							[
								44568,
								44582
							],
							[
								44603,
								44617
							],
							[
								44633,
								44647
							],
							[
								44664,
								44678
							],
							[
								44699,
								44713
							],
							[
								44732,
								44746
							],
							[
								44770,
								44784
							],
							[
								44803,
								44817
							],
							[
								44838,
								44852
							],
							[
								44870,
								44884
							],
							[
								44902,
								44916
							],
							[
								44934,
								44948
							],
							[
								44972,
								44986
							],
							[
								45007,
								45021
							],
							[
								45037,
								45051
							],
							[
								45076,
								45090
							],
							[
								45117,
								45131
							],
							[
								45161,
								45175
							],
							[
								45203,
								45217
							],
							[
								45246,
								45260
							],
							[
								45280,
								45294
							],
							[
								45317,
								45331
							],
							[
								45359,
								45373
							],
							[
								45396,
								45410
							],
							[
								45431,
								45445
							],
							[
								45472,
								45486
							],
							[
								45511,
								45525
							],
							[
								45552,
								45566
							],
							[
								45586,
								45600
							],
							[
								45621,
								45635
							],
							[
								45660,
								45674
							],
							[
								45702,
								45716
							],
							[
								45753,
								45767
							],
							[
								45797,
								45811
							],
							[
								45838,
								45852
							],
							[
								45878,
								45892
							],
							[
								45922,
								45936
							],
							[
								45958,
								45972
							],
							[
								46000,
								46014
							],
							[
								46038,
								46052
							],
							[
								46082,
								46096
							],
							[
								46132,
								46146
							],
							[
								46167,
								46181
							],
							[
								46203,
								46217
							],
							[
								46238,
								46252
							],
							[
								46278,
								46292
							],
							[
								46318,
								46332
							],
							[
								46352,
								46366
							],
							[
								46387,
								46401
							],
							[
								46422,
								46436
							],
							[
								46457,
								46471
							],
							[
								46496,
								46510
							],
							[
								46537,
								46551
							],
							[
								46577,
								46591
							],
							[
								46615,
								46629
							],
							[
								46653,
								46667
							],
							[
								46691,
								46705
							],
							[
								46729,
								46743
							],
							[
								46767,
								46781
							],
							[
								46812,
								46826
							],
							[
								46862,
								46876
							],
							[
								46908,
								46922
							],
							[
								46957,
								46971
							],
							[
								47055,
								47069
							],
							[
								47097,
								47111
							],
							[
								47137,
								47151
							],
							[
								47178,
								47192
							],
							[
								47220,
								47234
							],
							[
								47262,
								47276
							],
							[
								47310,
								47324
							],
							[
								47359,
								47373
							],
							[
								47408,
								47422
							],
							[
								47441,
								47452
							],
							[
								47469,
								47480
							],
							[
								47497,
								47508
							],
							[
								47526,
								47537
							],
							[
								47556,
								47570
							],
							[
								47592,
								47606
							],
							[
								47633,
								47647
							],
							[
								47672,
								47686
							],
							[
								47708,
								47722
							],
							[
								47743,
								47757
							],
							[
								47777,
								47791
							],
							[
								47810,
								47824
							],
							[
								47842,
								47856
							],
							[
								47878,
								47892
							],
							[
								47918,
								47932
							],
							[
								47949,
								47963
							],
							[
								47988,
								48002
							],
							[
								48027,
								48041
							],
							[
								48066,
								48080
							],
							[
								48099,
								48113
							],
							[
								48133,
								48147
							],
							[
								48164,
								48178
							],
							[
								48197,
								48211
							],
							[
								48230,
								48244
							],
							[
								48265,
								48279
							],
							[
								48313,
								48327
							],
							[
								48363,
								48377
							],
							[
								48413,
								48427
							],
							[
								48451,
								48465
							],
							[
								48489,
								48503
							],
							[
								48523,
								48537
							],
							[
								48560,
								48574
							],
							[
								48597,
								48611
							],
							[
								48635,
								48649
							],
							[
								48683,
								48697
							],
							[
								48727,
								48741
							],
							[
								48775,
								48789
							],
							[
								48819,
								48833
							],
							[
								48867,
								48881
							],
							[
								48911,
								48925
							],
							[
								48959,
								48973
							],
							[
								49001,
								49015
							],
							[
								49047,
								49061
							],
							[
								49090,
								49104
							],
							[
								49137,
								49151
							],
							[
								49184,
								49198
							],
							[
								49233,
								49247
							],
							[
								49278,
								49292
							],
							[
								49320,
								49334
							],
							[
								49361,
								49375
							],
							[
								49401,
								49415
							],
							[
								49439,
								49453
							],
							[
								49481,
								49495
							],
							[
								49524,
								49538
							],
							[
								49566,
								49580
							],
							[
								49605,
								49619
							],
							[
								49644,
								49658
							],
							[
								49690,
								49704
							],
							[
								49746,
								49760
							],
							[
								49789,
								49803
							],
							[
								49833,
								49847
							],
							[
								49883,
								49897
							],
							[
								49934,
								49948
							],
							[
								49989,
								50003
							],
							[
								50035,
								50049
							],
							[
								50083,
								50097
							],
							[
								50128,
								50142
							],
							[
								50182,
								50196
							],
							[
								50232,
								50246
							],
							[
								50288,
								50302
							],
							[
								50332,
								50346
							],
							[
								50382,
								50396
							],
							[
								50410,
								50424
							],
							[
								50438,
								50452
							],
							[
								50467,
								50481
							],
							[
								50504,
								50518
							],
							[
								50540,
								50554
							],
							[
								50577,
								50591
							],
							[
								50614,
								50628
							],
							[
								50649,
								50663
							],
							[
								50683,
								50697
							],
							[
								50720,
								50734
							],
							[
								50758,
								50772
							],
							[
								50794,
								50808
							],
							[
								50831,
								50845
							],
							[
								50868,
								50882
							],
							[
								50903,
								50917
							],
							[
								50937,
								50951
							],
							[
								50972,
								50986
							],
							[
								51006,
								51020
							],
							[
								51043,
								51057
							],
							[
								51079,
								51093
							],
							[
								51117,
								51131
							],
							[
								51154,
								51168
							],
							[
								51192,
								51206
							],
							[
								51230,
								51244
							],
							[
								51269,
								51283
							],
							[
								51316,
								51330
							],
							[
								51410,
								51420
							],
							[
								52579,
								52591
							],
							[
								52874,
								52888
							],
							[
								52926,
								52940
							],
							[
								52991,
								53005
							]
						],
						"symlist":
						[
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_imread",
							"js_cv_imwrite",
							"js_cv_split",
							"js_cv_normalize",
							"js_cv_add_weighted",
							"js_cv_mat_functions",
							"js_cv_merge",
							"js_cv_mix_channels",
							"js_cv_getticks",
							"js_cv_bitwise",
							"js_cv_math",
							"js_cv_core",
							"js_cv_other",
							"js_cv_finalizer",
							"js_function_list_t",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_init",
							"js_cv_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAlSIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/qjs-opencv/js_cv.cpp",
						"symkeys":
						[
							[
								591,
								602
							],
							[
								651,
								665
							],
							[
								859,
								871
							],
							[
								1084,
								1097
							],
							[
								1890,
								1901
							],
							[
								2572,
								2587
							],
							[
								3284,
								3302
							],
							[
								4188,
								4207
							],
							[
								5413,
								5424
							],
							[
								5802,
								5820
							],
							[
								7638,
								7652
							],
							[
								8043,
								8056
							],
							[
								8912,
								8922
							],
							[
								11365,
								11375
							],
							[
								16767,
								16778
							],
							[
								27743,
								27758
							],
							[
								27912,
								27930
							],
							[
								27976,
								27988
							],
							[
								28021,
								28033
							],
							[
								28068,
								28080
							],
							[
								28111,
								28123
							],
							[
								28162,
								28174
							],
							[
								28205,
								28217
							],
							[
								28261,
								28273
							],
							[
								28317,
								28335
							],
							[
								28379,
								28397
							],
							[
								28445,
								28463
							],
							[
								28510,
								28528
							],
							[
								28570,
								28588
							],
							[
								28629,
								28647
							],
							[
								28689,
								28707
							],
							[
								28749,
								28767
							],
							[
								28831,
								28849
							],
							[
								28911,
								28929
							],
							[
								28983,
								29001
							],
							[
								29056,
								29074
							],
							[
								29123,
								29141
							],
							[
								29166,
								29184
							],
							[
								29211,
								29229
							],
							[
								29259,
								29277
							],
							[
								29323,
								29341
							],
							[
								29379,
								29397
							],
							[
								29443,
								29461
							],
							[
								29505,
								29523
							],
							[
								29561,
								29579
							],
							[
								29617,
								29635
							],
							[
								29683,
								29701
							],
							[
								29743,
								29761
							],
							[
								29810,
								29828
							],
							[
								29882,
								29900
							],
							[
								29962,
								29980
							],
							[
								30040,
								30058
							],
							[
								30102,
								30120
							],
							[
								30158,
								30176
							],
							[
								30214,
								30232
							],
							[
								30270,
								30288
							],
							[
								30348,
								30366
							],
							[
								30406,
								30424
							],
							[
								30464,
								30482
							],
							[
								30522,
								30540
							],
							[
								30584,
								30602
							],
							[
								30640,
								30658
							],
							[
								30716,
								30734
							],
							[
								30806,
								30824
							],
							[
								30868,
								30886
							],
							[
								30930,
								30948
							],
							[
								30988,
								31006
							],
							[
								31052,
								31070
							],
							[
								31110,
								31128
							],
							[
								31178,
								31196
							],
							[
								31247,
								31265
							],
							[
								31331,
								31349
							],
							[
								31407,
								31425
							],
							[
								31480,
								31498
							],
							[
								31554,
								31572
							],
							[
								31616,
								31634
							],
							[
								31704,
								31722
							],
							[
								31771,
								31789
							],
							[
								31850,
								31868
							],
							[
								31908,
								31926
							],
							[
								31978,
								31996
							],
							[
								32052,
								32070
							],
							[
								32112,
								32130
							],
							[
								32186,
								32204
							],
							[
								32258,
								32276
							],
							[
								32330,
								32348
							],
							[
								32407,
								32425
							],
							[
								32467,
								32485
							],
							[
								32538,
								32556
							],
							[
								32600,
								32618
							],
							[
								32676,
								32694
							],
							[
								32734,
								32752
							],
							[
								32796,
								32814
							],
							[
								32871,
								32889
							],
							[
								32933,
								32951
							],
							[
								32997,
								33015
							],
							[
								33066,
								33084
							],
							[
								33141,
								33159
							],
							[
								33214,
								33232
							],
							[
								33285,
								33303
							],
							[
								33343,
								33361
							],
							[
								33446,
								33457
							],
							[
								33481,
								33492
							],
							[
								33516,
								33527
							],
							[
								33554,
								33565
							],
							[
								33582,
								33593
							],
							[
								33610,
								33621
							],
							[
								33638,
								33649
							],
							[
								33666,
								33677
							],
							[
								33694,
								33705
							],
							[
								33722,
								33733
							],
							[
								33746,
								33757
							],
							[
								33770,
								33781
							],
							[
								33795,
								33806
							],
							[
								33820,
								33831
							],
							[
								33845,
								33856
							],
							[
								33870,
								33881
							],
							[
								33895,
								33906
							],
							[
								33921,
								33932
							],
							[
								33947,
								33958
							],
							[
								33973,
								33984
							],
							[
								33999,
								34010
							],
							[
								34025,
								34036
							],
							[
								34051,
								34062
							],
							[
								34077,
								34088
							],
							[
								34103,
								34114
							],
							[
								34130,
								34141
							],
							[
								34157,
								34168
							],
							[
								34184,
								34195
							],
							[
								34211,
								34222
							],
							[
								34238,
								34249
							],
							[
								34265,
								34276
							],
							[
								34292,
								34303
							],
							[
								34319,
								34330
							],
							[
								34346,
								34357
							],
							[
								34373,
								34384
							],
							[
								34400,
								34411
							],
							[
								34427,
								34438
							],
							[
								34454,
								34465
							],
							[
								34481,
								34492
							],
							[
								34508,
								34519
							],
							[
								34535,
								34546
							],
							[
								34562,
								34573
							],
							[
								34589,
								34600
							],
							[
								34616,
								34627
							],
							[
								34643,
								34657
							],
							[
								34677,
								34691
							],
							[
								34712,
								34726
							],
							[
								34742,
								34756
							],
							[
								34771,
								34785
							],
							[
								34800,
								34814
							],
							[
								34832,
								34846
							],
							[
								34865,
								34879
							],
							[
								34900,
								34914
							],
							[
								34936,
								34950
							],
							[
								34972,
								34986
							],
							[
								35008,
								35022
							],
							[
								35044,
								35058
							],
							[
								35080,
								35094
							],
							[
								35116,
								35130
							],
							[
								35152,
								35166
							],
							[
								35188,
								35202
							],
							[
								35224,
								35238
							],
							[
								35259,
								35273
							],
							[
								35294,
								35308
							],
							[
								35331,
								35345
							],
							[
								35368,
								35382
							],
							[
								35404,
								35418
							],
							[
								35440,
								35454
							],
							[
								35476,
								35490
							],
							[
								35512,
								35526
							],
							[
								35549,
								35563
							],
							[
								35586,
								35600
							],
							[
								35623,
								35637
							],
							[
								35660,
								35674
							],
							[
								35698,
								35712
							],
							[
								35736,
								35750
							],
							[
								35774,
								35788
							],
							[
								35812,
								35826
							],
							[
								35851,
								35865
							],
							[
								35890,
								35904
							],
							[
								35929,
								35943
							],
							[
								35968,
								35982
							],
							[
								36007,
								36021
							],
							[
								36046,
								36060
							],
							[
								36084,
								36098
							],
							[
								36122,
								36136
							],
							[
								36160,
								36174
							],
							[
								36198,
								36212
							],
							[
								36237,
								36251
							],
							[
								36276,
								36290
							],
							[
								36315,
								36329
							],
							[
								36354,
								36368
							],
							[
								36393,
								36407
							],
							[
								36432,
								36446
							],
							[
								36467,
								36481
							],
							[
								36502,
								36516
							],
							[
								36537,
								36551
							],
							[
								36572,
								36586
							],
							[
								36609,
								36623
							],
							[
								36646,
								36660
							],
							[
								36683,
								36697
							],
							[
								36720,
								36734
							],
							[
								36755,
								36769
							],
							[
								36790,
								36804
							],
							[
								36825,
								36839
							],
							[
								36860,
								36874
							],
							[
								36895,
								36909
							],
							[
								36930,
								36944
							],
							[
								36965,
								36979
							],
							[
								37000,
								37014
							],
							[
								37035,
								37049
							],
							[
								37070,
								37084
							],
							[
								37105,
								37119
							],
							[
								37140,
								37154
							],
							[
								37175,
								37189
							],
							[
								37210,
								37224
							],
							[
								37245,
								37259
							],
							[
								37280,
								37294
							],
							[
								37320,
								37334
							],
							[
								37360,
								37374
							],
							[
								37400,
								37414
							],
							[
								37440,
								37454
							],
							[
								37480,
								37494
							],
							[
								37520,
								37534
							],
							[
								37560,
								37574
							],
							[
								37600,
								37614
							],
							[
								37636,
								37650
							],
							[
								37672,
								37686
							],
							[
								37708,
								37722
							],
							[
								37744,
								37758
							],
							[
								37780,
								37794
							],
							[
								37816,
								37830
							],
							[
								37852,
								37866
							],
							[
								37888,
								37902
							],
							[
								37923,
								37937
							],
							[
								37958,
								37972
							],
							[
								37993,
								38007
							],
							[
								38028,
								38042
							],
							[
								38068,
								38082
							],
							[
								38108,
								38122
							],
							[
								38148,
								38162
							],
							[
								38188,
								38202
							],
							[
								38228,
								38242
							],
							[
								38268,
								38282
							],
							[
								38309,
								38323
							],
							[
								38350,
								38364
							],
							[
								38391,
								38405
							],
							[
								38432,
								38446
							],
							[
								38473,
								38487
							],
							[
								38514,
								38528
							],
							[
								38554,
								38568
							],
							[
								38594,
								38608
							],
							[
								38634,
								38648
							],
							[
								38674,
								38688
							],
							[
								38714,
								38728
							],
							[
								38754,
								38768
							],
							[
								38793,
								38807
							],
							[
								38832,
								38846
							],
							[
								38873,
								38887
							],
							[
								38914,
								38928
							],
							[
								38955,
								38969
							],
							[
								38996,
								39010
							],
							[
								39037,
								39051
							],
							[
								39078,
								39092
							],
							[
								39118,
								39132
							],
							[
								39158,
								39172
							],
							[
								39198,
								39212
							],
							[
								39239,
								39253
							],
							[
								39280,
								39294
							],
							[
								39321,
								39335
							],
							[
								39362,
								39376
							],
							[
								39403,
								39417
							],
							[
								39444,
								39458
							],
							[
								39484,
								39498
							],
							[
								39524,
								39538
							],
							[
								39564,
								39578
							],
							[
								39604,
								39618
							],
							[
								39644,
								39658
							],
							[
								39684,
								39698
							],
							[
								39724,
								39738
							],
							[
								39765,
								39779
							],
							[
								39806,
								39820
							],
							[
								39847,
								39861
							],
							[
								39888,
								39902
							],
							[
								39929,
								39943
							],
							[
								39970,
								39984
							],
							[
								40010,
								40024
							],
							[
								40050,
								40064
							],
							[
								40090,
								40104
							],
							[
								40130,
								40144
							],
							[
								40170,
								40184
							],
							[
								40210,
								40224
							],
							[
								40250,
								40264
							],
							[
								40290,
								40304
							],
							[
								40331,
								40345
							],
							[
								40372,
								40386
							],
							[
								40413,
								40427
							],
							[
								40454,
								40468
							],
							[
								40495,
								40509
							],
							[
								40536,
								40550
							],
							[
								40577,
								40591
							],
							[
								40618,
								40632
							],
							[
								40659,
								40673
							],
							[
								40700,
								40714
							],
							[
								40741,
								40755
							],
							[
								40782,
								40796
							],
							[
								40823,
								40837
							],
							[
								40864,
								40878
							],
							[
								40905,
								40919
							],
							[
								40943,
								40957
							],
							[
								40981,
								40995
							],
							[
								41021,
								41035
							],
							[
								41061,
								41075
							],
							[
								41101,
								41115
							],
							[
								41141,
								41155
							],
							[
								41182,
								41196
							],
							[
								41223,
								41237
							],
							[
								41264,
								41278
							],
							[
								41305,
								41319
							],
							[
								41345,
								41359
							],
							[
								41385,
								41399
							],
							[
								41426,
								41440
							],
							[
								41467,
								41481
							],
							[
								41506,
								41520
							],
							[
								41545,
								41559
							],
							[
								41584,
								41598
							],
							[
								41623,
								41637
							],
							[
								41662,
								41676
							],
							[
								41701,
								41715
							],
							[
								41740,
								41754
							],
							[
								41779,
								41793
							],
							[
								41819,
								41833
							],
							[
								41859,
								41873
							],
							[
								41899,
								41913
							],
							[
								41939,
								41953
							],
							[
								41982,
								41996
							],
							[
								42025,
								42039
							],
							[
								42068,
								42082
							],
							[
								42111,
								42125
							],
							[
								42154,
								42168
							],
							[
								42197,
								42211
							],
							[
								42240,
								42254
							],
							[
								42283,
								42297
							],
							[
								42325,
								42339
							],
							[
								42367,
								42381
							],
							[
								42409,
								42423
							],
							[
								42451,
								42465
							],
							[
								42493,
								42507
							],
							[
								42535,
								42549
							],
							[
								42577,
								42591
							],
							[
								42619,
								42633
							],
							[
								42659,
								42673
							],
							[
								42699,
								42713
							],
							[
								42739,
								42753
							],
							[
								42779,
								42793
							],
							[
								42819,
								42833
							],
							[
								42859,
								42873
							],
							[
								42899,
								42913
							],
							[
								42939,
								42953
							],
							[
								42974,
								42988
							],
							[
								43005,
								43019
							],
							[
								43037,
								43051
							],
							[
								43068,
								43082
							],
							[
								43104,
								43118
							],
							[
								43143,
								43157
							],
							[
								43184,
								43198
							],
							[
								43226,
								43240
							],
							[
								43270,
								43284
							],
							[
								43307,
								43321
							],
							[
								43345,
								43359
							],
							[
								43381,
								43395
							],
							[
								43414,
								43428
							],
							[
								43454,
								43468
							],
							[
								43494,
								43508
							],
							[
								43533,
								43547
							],
							[
								43569,
								43583
							],
							[
								43606,
								43620
							],
							[
								43641,
								43655
							],
							[
								43680,
								43694
							],
							[
								43714,
								43728
							],
							[
								43749,
								43763
							],
							[
								43788,
								43802
							],
							[
								43821,
								43835
							],
							[
								43854,
								43868
							],
							[
								43891,
								43905
							],
							[
								43923,
								43937
							],
							[
								43956,
								43970
							],
							[
								43991,
								44005
							],
							[
								44020,
								44034
							],
							[
								44049,
								44063
							],
							[
								44078,
								44092
							],
							[
								44108,
								44122
							],
							[
								44142,
								44156
							],
							[
								44176,
								44190
							],
							[
								44210,
								44224
							],
							[
								44242,
								44256
							],
							[
								44275,
								44289
							],
							[
								44303,
								44317
							],
							[
								44335,
								44349
							],
							[
								44366,
								44380
							],
							[
								44397,
								44411
							],
							[
								44429,
								44443
							],
							[
								44466,
								44480
							],
							[
								44499,
								44513
							],
							[
								44530,
								44544
							],
							[
								44568,
								44582
							],
							[
								44603,
								44617
							],
							[
								44633,
								44647
							],
							[
								44664,
								44678
							],
							[
								44699,
								44713
							],
							[
								44732,
								44746
							],
							[
								44770,
								44784
							],
							[
								44803,
								44817
							],
							[
								44838,
								44852
							],
							[
								44870,
								44884
							],
							[
								44902,
								44916
							],
							[
								44934,
								44948
							],
							[
								44972,
								44986
							],
							[
								45007,
								45021
							],
							[
								45037,
								45051
							],
							[
								45076,
								45090
							],
							[
								45117,
								45131
							],
							[
								45161,
								45175
							],
							[
								45203,
								45217
							],
							[
								45246,
								45260
							],
							[
								45280,
								45294
							],
							[
								45317,
								45331
							],
							[
								45359,
								45373
							],
							[
								45396,
								45410
							],
							[
								45431,
								45445
							],
							[
								45472,
								45486
							],
							[
								45511,
								45525
							],
							[
								45552,
								45566
							],
							[
								45586,
								45600
							],
							[
								45621,
								45635
							],
							[
								45660,
								45674
							],
							[
								45702,
								45716
							],
							[
								45753,
								45767
							],
							[
								45797,
								45811
							],
							[
								45838,
								45852
							],
							[
								45878,
								45892
							],
							[
								45922,
								45936
							],
							[
								45958,
								45972
							],
							[
								46000,
								46014
							],
							[
								46038,
								46052
							],
							[
								46082,
								46096
							],
							[
								46132,
								46146
							],
							[
								46167,
								46181
							],
							[
								46203,
								46217
							],
							[
								46238,
								46252
							],
							[
								46278,
								46292
							],
							[
								46318,
								46332
							],
							[
								46352,
								46366
							],
							[
								46387,
								46401
							],
							[
								46422,
								46436
							],
							[
								46457,
								46471
							],
							[
								46496,
								46510
							],
							[
								46537,
								46551
							],
							[
								46577,
								46591
							],
							[
								46615,
								46629
							],
							[
								46653,
								46667
							],
							[
								46691,
								46705
							],
							[
								46729,
								46743
							],
							[
								46767,
								46781
							],
							[
								46812,
								46826
							],
							[
								46862,
								46876
							],
							[
								46908,
								46922
							],
							[
								46957,
								46971
							],
							[
								47055,
								47069
							],
							[
								47097,
								47111
							],
							[
								47137,
								47151
							],
							[
								47178,
								47192
							],
							[
								47220,
								47234
							],
							[
								47262,
								47276
							],
							[
								47310,
								47324
							],
							[
								47359,
								47373
							],
							[
								47408,
								47422
							],
							[
								47441,
								47452
							],
							[
								47469,
								47480
							],
							[
								47497,
								47508
							],
							[
								47526,
								47537
							],
							[
								47556,
								47570
							],
							[
								47592,
								47606
							],
							[
								47633,
								47647
							],
							[
								47672,
								47686
							],
							[
								47708,
								47722
							],
							[
								47743,
								47757
							],
							[
								47777,
								47791
							],
							[
								47810,
								47824
							],
							[
								47842,
								47856
							],
							[
								47878,
								47892
							],
							[
								47918,
								47932
							],
							[
								47949,
								47963
							],
							[
								47988,
								48002
							],
							[
								48027,
								48041
							],
							[
								48066,
								48080
							],
							[
								48099,
								48113
							],
							[
								48133,
								48147
							],
							[
								48164,
								48178
							],
							[
								48197,
								48211
							],
							[
								48230,
								48244
							],
							[
								48265,
								48279
							],
							[
								48313,
								48327
							],
							[
								48363,
								48377
							],
							[
								48413,
								48427
							],
							[
								48451,
								48465
							],
							[
								48489,
								48503
							],
							[
								48523,
								48537
							],
							[
								48560,
								48574
							],
							[
								48597,
								48611
							],
							[
								48635,
								48649
							],
							[
								48683,
								48697
							],
							[
								48727,
								48741
							],
							[
								48775,
								48789
							],
							[
								48819,
								48833
							],
							[
								48867,
								48881
							],
							[
								48911,
								48925
							],
							[
								48959,
								48973
							],
							[
								49001,
								49015
							],
							[
								49047,
								49061
							],
							[
								49090,
								49104
							],
							[
								49137,
								49151
							],
							[
								49184,
								49198
							],
							[
								49233,
								49247
							],
							[
								49278,
								49292
							],
							[
								49320,
								49334
							],
							[
								49361,
								49375
							],
							[
								49401,
								49415
							],
							[
								49439,
								49453
							],
							[
								49481,
								49495
							],
							[
								49524,
								49538
							],
							[
								49566,
								49580
							],
							[
								49605,
								49619
							],
							[
								49644,
								49658
							],
							[
								49690,
								49704
							],
							[
								49746,
								49760
							],
							[
								49789,
								49803
							],
							[
								49833,
								49847
							],
							[
								49883,
								49897
							],
							[
								49934,
								49948
							],
							[
								49989,
								50003
							],
							[
								50035,
								50049
							],
							[
								50083,
								50097
							],
							[
								50128,
								50142
							],
							[
								50182,
								50196
							],
							[
								50232,
								50246
							],
							[
								50288,
								50302
							],
							[
								50332,
								50346
							],
							[
								50382,
								50396
							],
							[
								50410,
								50424
							],
							[
								50438,
								50452
							],
							[
								50467,
								50481
							],
							[
								50504,
								50518
							],
							[
								50540,
								50554
							],
							[
								50577,
								50591
							],
							[
								50614,
								50628
							],
							[
								50649,
								50663
							],
							[
								50683,
								50697
							],
							[
								50720,
								50734
							],
							[
								50758,
								50772
							],
							[
								50794,
								50808
							],
							[
								50831,
								50845
							],
							[
								50868,
								50882
							],
							[
								50903,
								50917
							],
							[
								50937,
								50951
							],
							[
								50972,
								50986
							],
							[
								51006,
								51020
							],
							[
								51043,
								51057
							],
							[
								51079,
								51093
							],
							[
								51117,
								51131
							],
							[
								51154,
								51168
							],
							[
								51192,
								51206
							],
							[
								51230,
								51244
							],
							[
								51269,
								51283
							],
							[
								51316,
								51330
							],
							[
								51410,
								51420
							],
							[
								52579,
								52591
							],
							[
								52874,
								52888
							],
							[
								52926,
								52940
							],
							[
								52991,
								53005
							]
						],
						"symlist":
						[
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_imread",
							"js_cv_imwrite",
							"js_cv_split",
							"js_cv_normalize",
							"js_cv_add_weighted",
							"js_cv_mat_functions",
							"js_cv_merge",
							"js_cv_mix_channels",
							"js_cv_getticks",
							"js_cv_bitwise",
							"js_cv_math",
							"js_cv_core",
							"js_cv_other",
							"js_cv_finalizer",
							"js_function_list_t",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_PROP_STRING_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_PROP_DOUBLE_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CFUNC_MAGIC_DEF",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"JS_CV_CONSTANT",
							"js_cv_init",
							"js_cv_export",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE",
							"JS_INIT_MODULE"
						]
					},
					"AQAAAAAAAAAAAAAAlSIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "js_array.hpp",
			"redo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "¬∞"
					},
					"AgAAAK8FAAAAAAAAsQUAAAAAAAAAAAAArgUAAAAAAACuBQAAAAAAAAIAAADCsA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8FAAAAAAAArwUAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 19197,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js_imgproc.cpp",
			"settings":
			{
				"buffer_size": 60157,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAHVCAAAAAAAAdkIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdUIAAAAAAAB1QgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZCAAAAAAAAd0IAAAAAAAAAAAAAd0IAAAAAAAB5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkIAAAAAAAB2QgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAAHdCAAAAAAAAd0IAAAAAAAACAAAAICB2QgAAAAAAAHZCAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAeUIAAAAAAAB5QgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZCAAAAAAAAd0IAAAAAAAAAAAAAd0IAAAAAAAB5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkIAAAAAAAB2QgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHlCAAAAAAAAekIAAAAAAAAAAAAAekIAAAAAAAB8QgAAAAAAAAAAAAB3QgAAAAAAAHdCAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAeUIAAAAAAAB5QgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					3,
					"left_delete",
					null,
					"AwAAAHhCAAAAAAAAeEIAAAAAAAACAAAAICB3QgAAAAAAAHdCAAAAAAAAAQAAAAp2QgAAAAAAAHZCAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAekIAAAAAAAB6QgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZCAAAAAAAAd0IAAAAAAAAAAAAAd0IAAAAAAAB5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkIAAAAAAAB2QgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAAHdCAAAAAAAAd0IAAAAAAAACAAAAICB2QgAAAAAAAHZCAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAeUIAAAAAAAB5QgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZCAAAAAAAAd0IAAAAAAAAAAAAAd0IAAAAAAAB5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkIAAAAAAAB2QgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					2,
					"left_delete",
					null,
					"AgAAAHdCAAAAAAAAd0IAAAAAAAACAAAAICB2QgAAAAAAAHZCAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAeUIAAAAAAAB5QgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZCAAAAAAAAd0IAAAAAAAAAAAAAd0IAAAAAAAB5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkIAAAAAAAB2QgAAAAAAAAAAAAAAAEBA"
				]
			]
		},
		{
			"contents": "#include \"js_object.hpp\"\n#include \"js_array.hpp\"\n#include \"js_size.hpp\"\n#include \"js_point.hpp\"\n#include \"js_rect.hpp\"\n#include \"js_umat.hpp\"\n#include \"js_contour.hpp\"\n#include \"js_alloc.hpp\"\n#include \"js_typed_array.hpp\"\n#include \"js_cv.hpp\"\n#include \"jsbindings.hpp\"\n#include \"geometry.hpp\"\n#include \"util.hpp\"\n#include \"cutils.h\"\n#include \"png_write.hpp\"\n\n#include <array>\n#include <cassert>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/imgproc.hpp>\n#include <opencv2/highgui.hpp>\n#include <opencv2/videoio.hpp>\n\nenum { HIER_NEXT = 0, HIER_PREV, HIER_CHILD, HIER_PARENT };\n\n#define JS_CONSTANT(name) JS_PROP_INT32_DEF(#name, name, 0)\n#define JS_CV_CONSTANT(name) JS_PROP_INT32_DEF(#name, cv::name, 0)\n\nenum { DISPLAY_OVERLAY };\n\nextern \"C\" {\nJSValue cv_proto = JS_UNDEFINED, cv_class = JS_UNDEFINED;\nJSClassID js_cv_class_id = 0;\n}\n\n  static JSValue\njs_cv_imread(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  const char* filename = JS_ToCString(ctx, argv[0]);\n  cv::Mat mat = cv::imread(filename);\n  return js_mat_wrap(ctx, mat);\n}\n\nstatic JSValue\njs_cv_imwrite(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n\n  const char* filename = JS_ToCString(ctx, argv[0]);\n  JSInputOutputArray image = js_cv_inputoutputarray(ctx, argv[1]);\n\n  if(image.empty())\n    return JS_ThrowInternalError(ctx, \"Empty image\");\n\n  if(argc > 2 && /*image.type() == CV_8UC1 &&*/ str_end(filename, \".png\") && image.isMat()) {\n    double max;\n    std::vector<JSColorData<uint8_t>> palette;\n    js_array_to(ctx, argv[2], palette);\n    cv::minMaxLoc(image, nullptr, &max);\n    if(palette.size() < size_t(max))\n      palette.resize(size_t(max));\n    printf(\"png++ write_mat '%s' [%zu]\\n\", filename, palette.size());\n    write_mat(filename, image.getMatRef(), palette);\n  } else {\n    cv::imwrite(filename, image);\n  }\n\n  return JS_UNDEFINED;\n}\n\nstatic JSValue\njs_cv_split(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  cv::Mat* src;\n  std::vector<cv::Mat> dst;\n  int code, dstCn = 0;\n  int32_t length;\n\n  if(!(src = js_mat_data(ctx, argv[0])))\n    return JS_ThrowInternalError(ctx, \"src not an array!\");\n\n  length = js_array_length(ctx, argv[1]);\n\n  for(int32_t i = 0; i < src->channels(); i++) { dst.push_back(cv::Mat(src->size(), src->type() & 0x7)); }\n\n  if(dst.size() >= src->channels()) {\n    cv::split(*src, dst.data());\n    for(int32_t i = 0; i < src->channels(); i++) { JS_SetPropertyUint32(ctx, argv[1], i, js_mat_wrap(ctx, dst[i])); }\n    return JS_UNDEFINED;\n  }\n\n  return JS_EXCEPTION;\n}\n\nstatic JSValue\njs_cv_normalize(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n\n  JSInputOutputArray src, dst;\n  double alpha = 1, beta = 0;\n  int32_t norm_type = cv::NORM_L2, dtype = -1;\n\n  src = js_umat_or_mat(ctx, argv[0]);\n  dst = js_umat_or_mat(ctx, argv[1]);\n\n  if(js_is_noarray(src) || js_is_noarray(dst))\n    return JS_ThrowInternalError(ctx, \"src or dst not an array!\");\n\n  if(argc >= 3)\n    JS_ToFloat64(ctx, &alpha, argv[2]);\n  if(argc >= 4)\n    JS_ToFloat64(ctx, &beta, argv[3]);\n  if(argc >= 5)\n    JS_ToInt32(ctx, &norm_type, argv[4]);\n  if(argc >= 6)\n    JS_ToInt32(ctx, &dtype, argv[5]);\n\n  cv::normalize(src, dst, alpha, beta, norm_type, dtype);\n  return JS_UNDEFINED;\n}\n\nstatic JSValue\njs_cv_add_weighted(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  JSInputOutputArray a1, a2, dst;\n\n  double alpha, beta, gamma;\n  int32_t dtype = -1;\n\n  a1 = js_umat_or_mat(ctx, argv[0]);\n  a2 = js_umat_or_mat(ctx, argv[2]);\n\n  if(js_is_noarray(a1) || js_is_noarray(a2))\n    return JS_ThrowInternalError(ctx, \"a1 or a2 not an array!\");\n\n  if(argc >= 6)\n    dst = js_umat_or_mat(ctx, argv[5]);\n\n  if(js_is_noarray(dst))\n    return JS_ThrowInternalError(ctx, \"dst not an array!\");\n\n  if(argc >= 2)\n    JS_ToFloat64(ctx, &alpha, argv[1]);\n  if(argc >= 4)\n    JS_ToFloat64(ctx, &beta, argv[3]);\n  if(argc >= 5)\n    JS_ToFloat64(ctx, &gamma, argv[4]);\n\n  if(argc >= 7)\n    JS_ToInt32(ctx, &dtype, argv[6]);\n\n  cv::addWeighted(a1, alpha, a2, beta, gamma, dst, dtype);\n  return JS_UNDEFINED;\n}\n\nenum { MAT_COUNTNONZERO = 0, MAT_FINDNONZERO, MAT_HCONCAT, MAT_VCONCAT };\n\nstatic JSValue\njs_cv_mat_functions(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n  JSValue ret = JS_UNDEFINED;\n  JSInputOutputArray mat;\n  mat = js_umat_or_mat(ctx, argv[0]);\n\n  if(js_is_noarray(mat))\n    return JS_ThrowInternalError(ctx, \"mat not an array!\");\n\n  switch(magic) {\n    case MAT_COUNTNONZERO: {\n      ret = JS_NewInt64(ctx, cv::countNonZero(mat));\n      break;\n    }\n    case MAT_FINDNONZERO: {\n      std::vector<JSPointData<int>> output;\n      cv::findNonZero(mat, output);\n      ret = js_array_from(ctx, output);\n      break;\n    }\n    case MAT_HCONCAT: {\n      std::vector<cv::Mat> a;\n      JSInputOutputArray dst;\n      if(js_is_noarray((dst = js_umat_or_mat(ctx, argv[1]))))\n        return JS_ThrowInternalError(ctx, \"dst not an array!\");\n\n      js_array_to(ctx, argv[0], a);\n      cv::hconcat(a.data(), a.size(), dst);\n      break;\n    }\n    case MAT_VCONCAT: {\n      std::vector<cv::Mat> a;\n      JSInputOutputArray dst;\n      if(js_is_noarray((dst = js_umat_or_mat(ctx, argv[1]))))\n        return JS_ThrowInternalError(ctx, \"dst not an array!\");\n\n      js_array_to(ctx, argv[0], a);\n      cv::vconcat(a.data(), a.size(), dst);\n      break;\n    }\n  }\n  return ret;\n}\n\nstatic JSValue\njs_cv_merge(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  std::vector<cv::Mat> mv;\n  cv::Mat* dst;\n\n  if(js_array_to(ctx, argv[0], mv) == -1)\n    return JS_EXCEPTION;\n\n  dst = js_mat_data(ctx, argv[1]);\n\n  if(dst == nullptr)\n    return JS_EXCEPTION;\n\n  cv::merge(const_cast<const cv::Mat*>(mv.data()), mv.size(), *dst);\n\n  return JS_UNDEFINED;\n}\n\nstatic JSValue\njs_cv_mix_channels(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  std::vector<cv::Mat> srcs, dsts;\n  std::vector<int> fromTo;\n\n  cv::Mat* dst;\n\n  if(js_array_to(ctx, argv[0], srcs) == -1)\n    return JS_EXCEPTION;\n  if(js_array_to(ctx, argv[1], dsts) == -1)\n    return JS_EXCEPTION;\n\n  if(js_array_to(ctx, argv[2], fromTo) == -1)\n    return JS_EXCEPTION;\n\n  cv::mixChannels(\n      const_cast<const cv::Mat*>(srcs.data()), srcs.size(), dsts.data(), dsts.size(), fromTo.data(), fromTo.size() >> 1);\n\n  return JS_UNDEFINED;\n}\n\n/*static JSValue\njs_cv_min_max_loc(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv) {\n  cv::Mat *src, *mask = nullptr;\n  double minVal, maxVal;\n  cv::Point minLoc, maxLoc;\n  JSValue ret;\n\n  src = js_mat_data(ctx, argv[0]);\n\n  if(src == nullptr)\n    return JS_EXCEPTION;\n\n  if(argc >= 2)\n    if((mask = js_mat_data(ctx, argv[1])) == nullptr)\n      return JS_EXCEPTION;\n\n  cv::minMaxLoc(*src, &minVal, &maxVal, &minLoc, &maxLoc, mask == nullptr ? cv::noArray() : *mask);\n\n  ret = JS_NewObject(ctx);\n  JS_SetPropertyStr(ctx, ret, \"minVal\", JS_NewFloat64(ctx, minVal));\n  JS_SetPropertyStr(ctx, ret, \"maxVal\", JS_NewFloat64(ctx, maxVal));\n  JS_SetPropertyStr(ctx,\n                    ret,\n                    \"minLoc\",\n                    js_array_from(ctx, std::array<int, 2>{minLoc.x, minLoc.y})); // js_point_wrap(ctx, minLoc));\n  JS_SetPropertyStr(ctx,\n                    ret,\n                    \"maxLoc\",\n                    js_object::from_map(ctx,\n                                        std::map<std::string, int>{\n                                            std::pair<std::string, int>{\"x\", maxLoc.x},\n                                            std::pair<std::string, int>{\"y\", maxLoc.y}})); // js_point_wrap(ctx, maxLoc));\n\n  return ret;\n}*/\n\nstatic JSValue\njs_cv_getticks(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n  JSValue ret = JS_UNDEFINED;\n  switch(magic) {\n    case 0: ret = JS_NewInt64(ctx, cv::getTickCount()); break;\n    case 1: ret = JS_NewFloat64(ctx, cv::getTickFrequency()); break;\n    case 2: ret = JS_NewInt64(ctx, cv::getCPUTickCount());\n    default: ret = JS_EXCEPTION;\n  }\n  return ret;\n}\n\nstatic JSValue\njs_cv_bitwise(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n\n  JSInputOutputArray src, dst;\n  JSInputArray other, mask;\n\n  src = js_umat_or_mat(ctx, argv[0]);\n  other = js_input_array(ctx, argv[1]);\n  dst = src;\n  if(argc > 2)\n    dst = js_umat_or_mat(ctx, argv[2]);\n\n  mask = cv::noArray();\n  if(argc > 3)\n\n    mask = js_input_array(ctx, argv[3]);\n\n  switch(magic) {\n    case 0: cv::bitwise_and(src, other, dst, mask); break;\n    case 1: cv::bitwise_or(src, other, dst, mask); break;\n    case 2: cv::bitwise_xor(src, other, dst, mask); break;\n    case 3: cv::bitwise_not(src, dst, mask); break;\n    default: return JS_EXCEPTION;\n  }\n  return JS_UNDEFINED;\n}\n\nenum {\n  MATH_ABSDIFF = 0,\n  MATH_ADD,\n  MATH_COMPARE,\n  MATH_DIVIDE,\n  MATH_GEMM,\n  MATH_MAX,\n  MATH_MIN,\n  MATH_MULTIPLY,\n  MATH_SOLVE,\n  MATH_SUBTRACT\n};\n\nstatic JSValue\njs_cv_math(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n\n  JSOutputArray dst;\n  JSInputArray src1, src2;\n  JSValue ret = JS_UNDEFINED;\n\n  src1 = argc >= 1 ? js_umat_or_mat(ctx, argv[0]) : cv::noArray();\n  src2 = argc >= 2 ? js_umat_or_mat(ctx, argv[1]) : cv::noArray();\n  dst = argc >= 3 ? js_umat_or_mat(ctx, argv[2]) : cv::noArray();\n\n  switch(magic) {\n    case MATH_ABSDIFF: {\n      cv::absdiff(src1, src2, dst);\n      break;\n    }\n\n    case MATH_ADD: {\n      JSInputArray mask;\n      int32_t dtype = -1;\n      if(argc >= 4)\n        mask = js_umat_or_mat(ctx, argv[3]);\n      if(argc >= 5)\n        mask = JS_ToInt32(ctx, &dtype, argv[4]);\n      cv::add(src1, src2, dst, mask, dtype);\n      break;\n    }\n\n    case MATH_COMPARE: {\n      int32_t cmpop = 0;\n      JS_ToInt32(ctx, &cmpop, argv[3]);\n      cv::compare(src1, src2, dst, cmpop);\n      break;\n    }\n\n    case MATH_DIVIDE: {\n      double scale = 1;\n      int dtype = -1;\n      if(argc >= 4)\n        JS_ToFloat64(ctx, &scale, argv[3]);\n      if(argc >= 5)\n        JS_ToInt32(ctx, &dtype, argv[4]);\n\n      cv::divide(src1, src2, dst, scale, dtype);\n      break;\n    }\n\n    case MATH_MAX: {\n      cv::max(src1, src2, dst);\n      break;\n    }\n\n    case MATH_MIN: {\n      cv::min(src1, src2, dst);\n      break;\n    }\n\n    case MATH_MULTIPLY: {\n      double scale = 1;\n      int dtype = -1;\n      if(argc >= 4)\n        JS_ToFloat64(ctx, &scale, argv[3]);\n      if(argc >= 5)\n        JS_ToInt32(ctx, &dtype, argv[4]);\n      cv::multiply(src1, src2, dst, scale, dtype);\n      break;\n    }\n\n    case MATH_SOLVE: {\n      int flags = cv::DECOMP_LU;\n      if(argc >= 4)\n        JS_ToInt32(ctx, &flags, argv[3]);\n      cv::solve(src1, src2, dst, flags);\n      break;\n    }\n\n    case MATH_SUBTRACT: {\n      JSInputArray mask;\n      int32_t dtype = -1;\n      if(argc >= 4)\n        mask = js_umat_or_mat(ctx, argv[3]);\n      if(argc >= 5)\n        mask = JS_ToInt32(ctx, &dtype, argv[4]);\n      cv::subtract(src1, src2, dst, mask, dtype);\n      break;\n    }\n  }\n  return ret;\n}\n\nenum {\n  CORE_CONVERTFP16 = 0,\n  CORE_CONVERTSCALEABS,\n  CORE_COPYMAKEBORDER,\n  CORE_COPYTO,\n  CORE_DCT,\n  CORE_DFT,\n  CORE_EXP,\n  CORE_EXTRACTCHANNEL,\n  CORE_FLIP,\n  CORE_IDCT,\n  CORE_IDFT,\n  CORE_INVERT,\n  CORE_LOG,\n  CORE_MULTRANSPOSED,\n  CORE_PERSPECTIVETRANSFORM,\n  CORE_REDUCE,\n  CORE_ROTATE,\n  CORE_SORT,\n  CORE_SORTIDX,\n  CORE_SQRT,\n  CORE_TRANSFORM,\n  CORE_TRANSPOSE\n};\n\nstatic JSValue\njs_cv_core(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n\n  JSOutputArray dst;\n  JSInputArray src;\n  JSValue ret = JS_UNDEFINED;\n\n  src = argc >= 1 ? js_umat_or_mat(ctx, argv[0]) : cv::noArray();\n  dst = argc >= 2 ? js_umat_or_mat(ctx, argv[1]) : cv::noArray();\n\n  switch(magic) {\n    case CORE_CONVERTFP16: {\n      cv::convertFp16(src, dst);\n      break;\n    }\n    case CORE_CONVERTSCALEABS: {\n      double alpha = 1, beta = 0;\n      if(argc >= 3)\n        JS_ToFloat64(ctx, &alpha, argv[2]);\n      if(argc >= 4)\n        JS_ToFloat64(ctx, &beta, argv[3]);\n      cv::convertScaleAbs(src, dst, alpha, beta);\n      break;\n    }\n    case CORE_COPYMAKEBORDER: {\n      int32_t top, bottom, left, right, borderType;\n      cv::Scalar value = cv::Scalar();\n      if(argc >= 3)\n        JS_ToInt32(ctx, &top, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &bottom, argv[3]);\n      if(argc >= 5)\n        JS_ToInt32(ctx, &left, argv[4]);\n      if(argc >= 6)\n        JS_ToInt32(ctx, &right, argv[5]);\n      if(argc >= 7)\n        JS_ToInt32(ctx, &borderType, argv[6]);\n      if(argc >= 8)\n        js_color_read(ctx, argv[7], &value);\n\n      cv::copyMakeBorder(src, dst, top, bottom, left, right, borderType, value);\n\n      break;\n    }\n    case CORE_COPYTO: {\n      JSInputArray mask = cv::noArray();\n      if(argc >= 3)\n        mask = js_umat_or_mat(ctx, argv[2]);\n      cv::copyTo(src, dst, mask);\n      break;\n    }\n    case CORE_DCT: {\n      int32_t flags = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      cv::dct(src, dst, flags);\n      break;\n    }\n    case CORE_DFT: {\n      int32_t flags = 0, nonZeroRows = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &nonZeroRows, argv[3]);\n      cv::dft(src, dst, flags, nonZeroRows);\n      break;\n    }\n    case CORE_EXP: {\n      cv::exp(src, dst);\n      break;\n    }\n    case CORE_EXTRACTCHANNEL: {\n      int32_t coi = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &coi, argv[2]);\n      cv::extractChannel(src, dst, coi);\n      break;\n    }\n    case CORE_FLIP: {\n      int32_t flipCode = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flipCode, argv[2]);\n      cv::flip(src, dst, flipCode);\n      break;\n    }\n    case CORE_IDCT: {\n      int32_t flags = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      cv::idct(src, dst, flags);\n      break;\n    }\n    case CORE_IDFT: {\n      int32_t flags = 0, nonZeroRows = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &nonZeroRows, argv[3]);\n      cv::idft(src, dst, flags, nonZeroRows);\n      break;\n    }\n    case CORE_INVERT: {\n      int flags = cv::DECOMP_LU;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      cv::invert(src, dst, flags);\n      break;\n    }\n    case CORE_LOG: {\n      cv::log(src, dst);\n      break;\n    }\n    case CORE_MULTRANSPOSED: {\n      BOOL aTa;\n      JSInputArray delta = cv::noArray();\n      double scale = 1;\n      int32_t dtype = -1;\n\n      if(argc >= 3)\n        aTa = JS_ToBool(ctx, argv[2]);\n      if(argc >= 4)\n        delta = js_umat_or_mat(ctx, argv[3]);\n      if(argc >= 5)\n        JS_ToFloat64(ctx, &scale, argv[4]);\n      if(argc >= 6)\n        JS_ToInt32(ctx, &dtype, argv[5]);\n      cv::mulTransposed(src, dst, aTa, delta, scale, dtype);\n\n      break;\n    }\n    case CORE_PERSPECTIVETRANSFORM: {\n      JSInputArray m = cv::noArray();\n      if(argc >= 3)\n        m = js_umat_or_mat(ctx, argv[2]);\n\n      cv::perspectiveTransform(src, dst, m);\n      break;\n    }\n    case CORE_REDUCE: {\n      int32_t dim, rtype, dtype = -1;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &dim, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &rtype, argv[3]);\n      if(argc >= 5)\n        JS_ToInt32(ctx, &dtype, argv[4]);\n      cv::reduce(src, dst, dim, rtype, dtype);\n      break;\n    }\n    case CORE_ROTATE: {\n      int32_t rotateCode = 0;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &rotateCode, argv[2]);\n      cv::rotate(src, dst, rotateCode);\n      break;\n    }\n    case CORE_SORT: {\n      int32_t flags;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      cv::sort(src, dst, flags);\n      break;\n    }\n    case CORE_SORTIDX: {\n      int32_t flags;\n      if(argc >= 3)\n        JS_ToInt32(ctx, &flags, argv[2]);\n      cv::sortIdx(src, dst, flags);\n      break;\n      break;\n    }\n    case CORE_SQRT: {\n      cv::sqrt(src, dst);\n      break;\n    }\n    case CORE_TRANSFORM: {\n      JSInputArray m = cv::noArray();\n      if(argc >= 3)\n        m = js_umat_or_mat(ctx, argv[2]);\n\n      cv::transform(src, dst, m);\n      break;\n    }\n    case CORE_TRANSPOSE: {\n      cv::transpose(src, dst);\n      break;\n    }\n  }\n\n  return ret;\n}\n\nenum {\n  OTHER_CALC_COVAR_MATRIX = 0,\n  OTHER_CART_TO_POLAR,\n  OTHER_DETERMINANT,\n  OTHER_EIGEN,\n  OTHER_EIGEN_NON_SYMMETRIC,\n  OTHER_CHECK_RANGE,\n  OTHER_IN_RANGE,\n  OTHER_INSERT_CHANNEL,\n  OTHER_LUT,\n  OTHER_MAGNITUDE,\n  OTHER_MAHALANOBIS,\n  OTHER_MEAN,\n  OTHER_MEAN_STD_DEV,\n  OTHER_MIN_MAX_IDX,\n  OTHER_MIN_MAX_LOC,\n  OTHER_MUL_SPECTRUMS,\n  OTHER_NORM,\n  OTHER_PATCH_NANS,\n  OTHER_PHASE,\n  OTHER_POLAR_TO_CART,\n  OTHER_POW,\n  OTHER_RANDN,\n  OTHER_RAND_SHUFFLE,\n  OTHER_RANDU,\n  OTHER_REPEAT,\n  OTHER_SCALE_ADD,\n  OTHER_SET_IDENTITY,\n  OTHER_SOLVE_CUBIC,\n  OTHER_SOLVE_POLY,\n  OTHER_SUM,\n  OTHER_TRACE\n};\n\nstatic JSValue\njs_cv_other(JSContext* ctx, JSValueConst this_val, int argc, JSValueConst* argv, int magic) {\n\n  JSInputOutputArray src;\n  JSValue ret = JS_UNDEFINED;\n\n  src = argc >= 1 ? js_umat_or_mat(ctx, argv[0]) : cv::noArray();\n\n  switch(magic) {\n\n    case OTHER_MEAN: {\n      cv::Scalar mean;\n      JSInputArray mask = cv::noArray();\n      if(argc >= 2)\n        mask = js_umat_or_mat(ctx, argv[1]);\n      mean = cv::mean(src, mask);\n      ret = js_color_new(ctx, mean);\n      break;\n    }\n    case OTHER_CALC_COVAR_MATRIX: {\n      JSOutputArray covar = cv::noArray();\n      JSInputOutputArray mean = cv::noArray();\n      int32_t flags, ctype = CV_64F;\n\n      if(argc >= 2)\n        covar = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        mean = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &flags, argv[3]);\n      if(argc >= 5)\n        JS_ToInt32(ctx, &ctype, argv[4]);\n      cv::calcCovarMatrix(src, covar, mean, flags, ctype);\n      break;\n    }\n    case OTHER_CART_TO_POLAR: {\n      JSInputArray y = cv::noArray();\n      JSOutputArray magnitude = cv::noArray(), angle = cv::noArray();\n      BOOL angleInDegrees = FALSE;\n\n      if(argc >= 2)\n        y = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        magnitude = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        angle = js_umat_or_mat(ctx, argv[3]);\n      if(argc >= 5)\n        angleInDegrees = JS_ToBool(ctx, argv[4]);\n      cv::cartToPolar(src, y, magnitude, angle, angleInDegrees);\n      break;\n    }\n    case OTHER_DETERMINANT: {\n      double d;\n      d = cv::determinant(src);\n      ret = JS_NewFloat64(ctx, d);\n      break;\n    }\n    case OTHER_EIGEN: {\n      JSOutputArray eigenvalues = cv::noArray(), eigenvectors = cv::noArray();\n      if(argc >= 2)\n        eigenvalues = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        eigenvectors = js_umat_or_mat(ctx, argv[2]);\n      ret = JS_NewBool(ctx, cv::eigen(src, eigenvalues, eigenvectors));\n      break;\n    }\n    case OTHER_EIGEN_NON_SYMMETRIC: {\n      JSOutputArray eigenvalues = cv::noArray(), eigenvectors = cv::noArray();\n      if(argc >= 2)\n        eigenvalues = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        eigenvectors = js_umat_or_mat(ctx, argv[2]);\n      cv::eigenNonSymmetric(src, eigenvalues, eigenvectors);\n\n      break;\n    }\n    case OTHER_CHECK_RANGE: {\n      BOOL result, quiet = TRUE;\n      JSPointData<int> position, *pos = 0;\n      double minVal = -DBL_MAX, maxVal = DBL_MAX;\n      if(argc >= 2)\n        quiet = JS_ToBool(ctx, argv[1]);\n      if(argc >= 3) {\n        js_point_read(ctx, argv[2], &position);\n        pos = &position;\n      }\n      if(argc >= 4)\n        JS_ToFloat64(ctx, &minVal, argv[3]);\n      if(argc >= 5)\n        JS_ToFloat64(ctx, &maxVal, argv[4]);\n      result = cv::checkRange(src, quiet, pos, minVal, maxVal);\n      ret = JS_NewBool(ctx, result);\n      break;\n    }\n    case OTHER_IN_RANGE: {\n      JSInputArray lowerb = cv::noArray(), upperb = cv::noArray();\n      JSOutputArray dst = cv::noArray();\n\n      if(argc >= 2)\n        lowerb = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        upperb = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        dst = js_umat_or_mat(ctx, argv[3]);\n      cv::inRange(src, lowerb, upperb, dst);\n      break;\n    }\n    case OTHER_INSERT_CHANNEL: {\n      JSInputOutputArray dst = cv::noArray();\n      int32_t coi;\n      if(argc >= 2)\n        dst = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        JS_ToInt32(ctx, &coi, argv[2]);\n      cv::insertChannel(src, dst, coi);\n      break;\n    }\n    case OTHER_LUT: {\n      JSInputArray lut = cv::noArray();\n      JSOutputArray dst = cv::noArray();\n      if(argc >= 2)\n        lut = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        dst = js_umat_or_mat(ctx, argv[2]);\n      cv::LUT(src, lut, dst);\n      break;\n    }\n    case OTHER_MAGNITUDE: {\n      JSInputArray y = cv::noArray();\n      JSOutputArray magnitude = cv::noArray();\n      if(argc >= 2)\n        y = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        magnitude = js_umat_or_mat(ctx, argv[2]);\n      cv::magnitude(src, y, magnitude);\n      break;\n    }\n    case OTHER_MAHALANOBIS: {\n      JSInputArray v2 = cv::noArray(), icovar = cv::noArray();\n      if(argc >= 2)\n        v2 = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        icovar = js_umat_or_mat(ctx, argv[2]);\n      ret = JS_NewFloat64(ctx, cv::Mahalanobis(src, v2, icovar));\n      break;\n    }\n    case OTHER_MEAN_STD_DEV: {\n      JSOutputArray mean = cv::noArray(), stdDev = cv::noArray();\n      JSInputArray mask = cv::noArray();\n      if(argc >= 2)\n        mean = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        stdDev = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        mask = js_umat_or_mat(ctx, argv[3]);\n      cv::meanStdDev(src, mean, stdDev, mask);\n\n      break;\n    }\n    case OTHER_MIN_MAX_IDX: {\n      JSInputArray mask = cv::noArray();\n      double minVal, maxVal;\n      int32_t minIdx, maxIdx;\n      JSValueConst results[4];\n      // std::array<JSValue, 4> results;\n      if(argc >= 6)\n        mask = js_umat_or_mat(ctx, argv[5]);\n      cv::minMaxIdx(src, &minVal, &maxVal, &minIdx, &maxIdx, mask);\n      results[0] = JS_NewFloat64(ctx, minVal);\n      results[1] = JS_NewFloat64(ctx, maxVal);\n      results[2] = JS_NewInt32(ctx, minIdx);\n      results[3] = JS_NewInt32(ctx, maxIdx);\n      for(size_t i = 0; i < 4; i++)\n        if(JS_IsFunction(ctx, argv[i + 1]))\n          JS_Call(ctx, argv[i + 1], JS_NULL, 1, results + i);\n      ret = js_array<JSValue>::from_sequence(ctx, const_cast<JSValue*>(&results[0]), const_cast<JSValue*>(&results[4]));\n      break;\n    }\n    case OTHER_MIN_MAX_LOC: {\n      JSInputArray mask = cv::noArray();\n      double minVal, maxVal;\n      JSPointData<int> minLoc, maxLoc;\n      std::array<JSValueConst, 4> results;\n      if(argc >= 6)\n        mask = js_umat_or_mat(ctx, argv[5]);\n      cv::minMaxLoc(src, &minVal, &maxVal, &minLoc, &maxLoc, mask);\n      results[0] = JS_NewFloat64(ctx, minVal);\n      results[1] = JS_NewFloat64(ctx, maxVal);\n      results[2] = js_point_new(ctx, minLoc);\n      results[3] = js_point_new(ctx, maxLoc);\n      for(size_t i = 0; i < 4; i++)\n        if(JS_IsFunction(ctx, argv[i + 1]))\n          JS_Call(ctx, argv[i + 1], JS_NULL, 1, &results[i]);\n      ret = js_array<JSValue>::from_sequence(ctx, const_cast<JSValue*>(&results[0]), const_cast<JSValue*>(&results[4]));\n      break;\n    }\n    case OTHER_MUL_SPECTRUMS: {\n      JSInputArray b = cv::noArray();\n      JSOutputArray c = cv::noArray();\n      int32_t flags = 0;\n      BOOL conjB = FALSE;\n\n      if(argc >= 2)\n        b = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        c = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        JS_ToInt32(ctx, &flags, argv[3]);\n      if(argc >= 5)\n        conjB = JS_ToBool(ctx, argv[4]);\n      cv::mulSpectrums(src, b, c, flags, conjB);\n      break;\n    }\n    case OTHER_NORM: {\n      int32_t normType = cv::NORM_L2;\n      JSInputArray mask = cv::noArray();\n\n      if(argc >= 2)\n        JS_ToInt32(ctx, &normType, argv[1]);\n      if(argc >= 3)\n        mask = js_umat_or_mat(ctx, argv[2]);\n      ret = JS_NewFloat64(ctx, cv::norm(src, normType, mask));\n      break;\n    }\n    case OTHER_PATCH_NANS: {\n      double val = 0;\n\n      if(argc >= 2)\n        JS_ToFloat64(ctx, &val, argv[1]);\n      cv::patchNaNs(src, val);\n      break;\n    }\n    case OTHER_PHASE: {\n      JSInputArray y = cv::noArray();\n      JSOutputArray angle = cv::noArray();\n      BOOL angleInDegrees = FALSE;\n\n      if(argc >= 2)\n        y = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        angle = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        angleInDegrees = JS_ToBool(ctx, argv[3]);\n      cv::phase(src, y, angle, angleInDegrees);\n      break;\n    }\n    case OTHER_POLAR_TO_CART: {\n      JSInputArray angle = cv::noArray();\n      JSOutputArray x = cv::noArray(), y = cv::noArray();\n      BOOL angleInDegrees = FALSE;\n\n      if(argc >= 2)\n        angle = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        x = js_umat_or_mat(ctx, argv[2]);\n      if(argc >= 4)\n        y = js_umat_or_mat(ctx, argv[3]);\n      if(argc >= 5)\n        angleInDegrees = JS_ToBool(ctx, argv[4]);\n      cv::polarToCart(src, angle, x, y, angleInDegrees);\n      break;\n    }\n    case OTHER_POW: {\n      double power;\n      JSOutputArray dst = cv::noArray();\n\n      if(argc >= 2)\n        JS_ToFloat64(ctx, &power, argv[1]);\n      if(argc >= 3)\n        dst = js_umat_or_mat(ctx, argv[2]);\n      cv::pow(src, power, dst);\n      break;\n    }\n    case OTHER_RANDN: {\n      JSInputArray mean = cv::noArray(), stddev = cv::noArray();\n      if(argc >= 2)\n        mean = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        stddev = js_umat_or_mat(ctx, argv[2]);\n      cv::randn(src, mean, stddev);\n      break;\n    }\n    case OTHER_RAND_SHUFFLE: {\n      double iterFactor = 1;\n      if(argc >= 2)\n        JS_ToFloat64(ctx, &iterFactor, argv[1]);\n\n      cv::randShuffle(src, iterFactor);\n      break;\n    }\n    case OTHER_RANDU: {\n      JSInputArray low = cv::noArray(), high = cv::noArray();\n      if(argc >= 2)\n        low = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        high = js_umat_or_mat(ctx, argv[2]);\n      cv::randu(src, low, high);\n      break;\n    }\n    case OTHER_REPEAT: {\n      int32_t nx, ny;\n      JSOutputArray dst = cv::noArray();\n\n      if(argc >= 2)\n        JS_ToInt32(ctx, &nx, argv[1]);\n      if(argc >= 3)\n        JS_ToInt32(ctx, &ny, argv[2]);\n      if(argc >= 4)\n        dst = js_umat_or_mat(ctx, argv[3]);\n      cv::repeat(src, nx, ny, dst);\n      break;\n    }\n    case OTHER_SCALE_ADD: {\n      double alpha;\n      JSInputArray src2 = cv::noArray();\n      JSOutputArray dst = cv::noArray();\n\n      if(argc >= 2)\n        JS_ToFloat64(ctx, &alpha, argv[1]);\n      if(argc >= 3)\n        src2 = js_umat_or_mat(ctx, argv[2]);\n\n      if(argc >= 4)\n        dst = js_umat_or_mat(ctx, argv[3]);\n\n      cv::scaleAdd(src, alpha, src2, dst);\n      break;\n    }\n    case OTHER_SET_IDENTITY: {\n      cv::Scalar s = cv::Scalar(1);\n\n      if(argc >= 2)\n        js_color_read(ctx, argv[1], &s);\n\n      cv::setIdentity(src, s);\n      break;\n    }\n    case OTHER_SOLVE_CUBIC: {\n      JSOutputArray dst = cv::noArray();\n      if(argc >= 2)\n        dst = js_umat_or_mat(ctx, argv[1]);\n      ret = JS_NewInt32(ctx, cv::solveCubic(src, dst));\n      break;\n    }\n    case OTHER_SOLVE_POLY: {\n      JSOutputArray dst = cv::noArray();\n      int32_t maxIters = 300;\n\n      if(argc >= 2)\n        dst = js_umat_or_mat(ctx, argv[1]);\n      if(argc >= 3)\n        JS_ToInt32(ctx, &maxIters, argv[2]);\n      ret = JS_NewFloat64(ctx, cv::solvePoly(src, dst, maxIters));\n      break;\n    }\n    case OTHER_SUM: {\n      cv::Scalar r = cv::sum(src);\n      ret = js_color_new(ctx, r);\n      break;\n    }\n    case OTHER_TRACE: {\n      cv::Scalar r = cv::trace(src);\n      ret = js_color_new(ctx, r);\n      break;\n    }\n  }\n  return ret;\n}\n\nvoid\njs_cv_finalizer(JSRuntime* rt, JSValue val) {\n}\n\nJSClassDef js_cv_class = {.class_name = \"cv\", .finalizer = js_cv_finalizer};\n\ntypedef std::vector<JSCFunctionListEntry> js_function_list_t;\n\njs_function_list_t js_cv_static_funcs{\n    JS_CFUNC_DEF(\"imread\", 1, js_cv_imread),\n    JS_CFUNC_DEF(\"imwrite\", 2, js_cv_imwrite),\n    JS_CFUNC_DEF(\"split\", 2, js_cv_split),\n    JS_CFUNC_DEF(\"normalize\", 2, js_cv_normalize),\n    JS_CFUNC_DEF(\"merge\", 2, js_cv_merge),\n    JS_CFUNC_DEF(\"mixChannels\", 3, js_cv_mix_channels),\n    JS_CFUNC_DEF(\"addWeighted\", 6, js_cv_add_weighted),\n    JS_CFUNC_MAGIC_DEF(\"getTickCount\", 0, js_cv_getticks, 0),\n    JS_CFUNC_MAGIC_DEF(\"getTickFrequency\", 0, js_cv_getticks, 1),\n    JS_CFUNC_MAGIC_DEF(\"getCPUTickCount\", 0, js_cv_getticks, 2),\n    JS_CFUNC_MAGIC_DEF(\"bitwise_and\", 3, js_cv_bitwise, 0),\n    JS_CFUNC_MAGIC_DEF(\"bitwise_or\", 3, js_cv_bitwise, 1),\n    JS_CFUNC_MAGIC_DEF(\"bitwise_xor\", 3, js_cv_bitwise, 2),\n    JS_CFUNC_MAGIC_DEF(\"bitwise_not\", 2, js_cv_bitwise, 3),\n    JS_CFUNC_MAGIC_DEF(\"countNonZero\", 1, js_cv_mat_functions, MAT_COUNTNONZERO),\n    JS_CFUNC_MAGIC_DEF(\"findNonZero\", 1, js_cv_mat_functions, MAT_FINDNONZERO),\n    JS_CFUNC_MAGIC_DEF(\"hconcat\", 2, js_cv_mat_functions, MAT_HCONCAT),\n    JS_CFUNC_MAGIC_DEF(\"vconcat\", 2, js_cv_mat_functions, MAT_VCONCAT),\n\n    JS_PROP_STRING_DEF(\"CV_VERSION_STATUS\", CV_VERSION_STATUS, 0),\n    JS_PROP_DOUBLE_DEF(\"CV_PI\", CV_PI, 0),\n    JS_PROP_DOUBLE_DEF(\"CV_2PI\", CV_2PI, 0),\n    JS_PROP_DOUBLE_DEF(\"CV_LOG2\", CV_LOG2, 0),\n\n    JS_CFUNC_MAGIC_DEF(\"absdiff\", 3, js_cv_math, MATH_ABSDIFF),\n    JS_CFUNC_MAGIC_DEF(\"add\", 3, js_cv_math, MATH_ADD),\n    JS_CFUNC_MAGIC_DEF(\"compare\", 3, js_cv_math, MATH_COMPARE),\n    JS_CFUNC_MAGIC_DEF(\"divide\", 3, js_cv_math, MATH_DIVIDE),\n    JS_CFUNC_MAGIC_DEF(\"max\", 3, js_cv_math, MATH_MAX),\n    JS_CFUNC_MAGIC_DEF(\"min\", 3, js_cv_math, MATH_MIN),\n    JS_CFUNC_MAGIC_DEF(\"multiply\", 3, js_cv_math, MATH_MULTIPLY),\n    JS_CFUNC_MAGIC_DEF(\"solve\", 3, js_cv_math, MATH_SOLVE),\n    JS_CFUNC_MAGIC_DEF(\"subtract\", 3, js_cv_math, MATH_SUBTRACT),\n\n    JS_CFUNC_MAGIC_DEF(\"convertFp16\", 2, js_cv_core, CORE_CONVERTFP16),\n    JS_CFUNC_MAGIC_DEF(\"convertScaleAbs\", 2, js_cv_core, CORE_CONVERTSCALEABS),\n    JS_CFUNC_MAGIC_DEF(\"copyMakeBorder\", 7, js_cv_core, CORE_COPYMAKEBORDER),\n    JS_CFUNC_MAGIC_DEF(\"copyTo\", 2, js_cv_core, CORE_COPYTO),\n    JS_CFUNC_MAGIC_DEF(\"dct\", 2, js_cv_core, CORE_DCT),\n    JS_CFUNC_MAGIC_DEF(\"dft\", 2, js_cv_core, CORE_DFT),\n    JS_CFUNC_MAGIC_DEF(\"exp\", 2, js_cv_core, CORE_EXP),\n    JS_CFUNC_MAGIC_DEF(\"extractChannel\", 3, js_cv_core, CORE_EXTRACTCHANNEL),\n    JS_CFUNC_MAGIC_DEF(\"flip\", 3, js_cv_core, CORE_FLIP),\n    JS_CFUNC_MAGIC_DEF(\"idct\", 2, js_cv_core, CORE_IDCT),\n    JS_CFUNC_MAGIC_DEF(\"idft\", 2, js_cv_core, CORE_IDFT),\n    JS_CFUNC_MAGIC_DEF(\"invert\", 2, js_cv_core, CORE_INVERT),\n    JS_CFUNC_MAGIC_DEF(\"log\", 2, js_cv_core, CORE_LOG),\n    JS_CFUNC_MAGIC_DEF(\"mulTransposed\", 3, js_cv_core, CORE_MULTRANSPOSED),\n    JS_CFUNC_MAGIC_DEF(\"perspectiveTransform\", 2, js_cv_core, CORE_PERSPECTIVETRANSFORM),\n    JS_CFUNC_MAGIC_DEF(\"reduce\", 4, js_cv_core, CORE_REDUCE),\n    JS_CFUNC_MAGIC_DEF(\"rotate\", 3, js_cv_core, CORE_ROTATE),\n    JS_CFUNC_MAGIC_DEF(\"sort\", 3, js_cv_core, CORE_SORT),\n    JS_CFUNC_MAGIC_DEF(\"sortIdx\", 3, js_cv_core, CORE_SORTIDX),\n    JS_CFUNC_MAGIC_DEF(\"sqrt\", 2, js_cv_core, CORE_SQRT),\n    JS_CFUNC_MAGIC_DEF(\"transform\", 3, js_cv_core, CORE_TRANSFORM),\n    JS_CFUNC_MAGIC_DEF(\"transpose\", 2, js_cv_core, CORE_TRANSPOSE),\n\n    JS_CFUNC_MAGIC_DEF(\"calcCovarMatrix\", 4, js_cv_other, OTHER_CALC_COVAR_MATRIX),\n    JS_CFUNC_MAGIC_DEF(\"cartToPolar\", 4, js_cv_other, OTHER_CART_TO_POLAR),\n    JS_CFUNC_MAGIC_DEF(\"checkRange\", 1, js_cv_other, OTHER_CHECK_RANGE),\n    JS_CFUNC_MAGIC_DEF(\"determinant\", 1, js_cv_other, OTHER_DETERMINANT),\n    JS_CFUNC_MAGIC_DEF(\"eigen\", 2, js_cv_other, OTHER_EIGEN),\n    JS_CFUNC_MAGIC_DEF(\"eigenNonSymmetric\", 3, js_cv_other, OTHER_EIGEN_NON_SYMMETRIC),\n    JS_CFUNC_MAGIC_DEF(\"inRange\", 4, js_cv_other, OTHER_IN_RANGE),\n    JS_CFUNC_MAGIC_DEF(\"insertChannel\", 3, js_cv_other, OTHER_INSERT_CHANNEL),\n    JS_CFUNC_MAGIC_DEF(\"LUT\", 3, js_cv_other, OTHER_LUT),\n    JS_CFUNC_MAGIC_DEF(\"magnitude\", 3, js_cv_other, OTHER_MAGNITUDE),\n    JS_CFUNC_MAGIC_DEF(\"Mahalanobis\", 3, js_cv_other, OTHER_MAHALANOBIS),\n    JS_CFUNC_MAGIC_DEF(\"mean\", 1, js_cv_other, OTHER_MEAN),\n    JS_CFUNC_MAGIC_DEF(\"meanStdDev\", 3, js_cv_other, OTHER_MEAN_STD_DEV),\n    JS_CFUNC_MAGIC_DEF(\"minMaxIdx\", 2, js_cv_other, OTHER_MIN_MAX_IDX),\n    JS_CFUNC_MAGIC_DEF(\"minMaxLoc\", 2, js_cv_other, OTHER_MIN_MAX_LOC),\n    JS_CFUNC_MAGIC_DEF(\"mulSpectrums\", 4, js_cv_other, OTHER_MUL_SPECTRUMS),\n    JS_CFUNC_MAGIC_DEF(\"norm\", 2, js_cv_other, OTHER_NORM),\n    JS_CFUNC_MAGIC_DEF(\"patchNaNs\", 1, js_cv_other, OTHER_PATCH_NANS),\n    JS_CFUNC_MAGIC_DEF(\"phase\", 3, js_cv_other, OTHER_PHASE),\n    JS_CFUNC_MAGIC_DEF(\"polarToCart\", 4, js_cv_other, OTHER_POLAR_TO_CART),\n    JS_CFUNC_MAGIC_DEF(\"pow\", 3, js_cv_other, OTHER_POW),\n    JS_CFUNC_MAGIC_DEF(\"randn\", 3, js_cv_other, OTHER_RANDN),\n    JS_CFUNC_MAGIC_DEF(\"randShuffle\", 1, js_cv_other, OTHER_RAND_SHUFFLE),\n    JS_CFUNC_MAGIC_DEF(\"randu\", 3, js_cv_other, OTHER_RANDU),\n    JS_CFUNC_MAGIC_DEF(\"repeat\", 4, js_cv_other, OTHER_REPEAT),\n    JS_CFUNC_MAGIC_DEF(\"scaleAdd\", 4, js_cv_other, OTHER_SCALE_ADD),\n    JS_CFUNC_MAGIC_DEF(\"setIdentity\", 1, js_cv_other, OTHER_SET_IDENTITY),\n    JS_CFUNC_MAGIC_DEF(\"solveCubic\", 2, js_cv_other, OTHER_SOLVE_CUBIC),\n    JS_CFUNC_MAGIC_DEF(\"solvePoly\", 2, js_cv_other, OTHER_SOLVE_POLY),\n    JS_CFUNC_MAGIC_DEF(\"sum\", 1, js_cv_other, OTHER_SUM),\n    JS_CFUNC_MAGIC_DEF(\"trace\", 1, js_cv_other, OTHER_TRACE),\n\n};\n\njs_function_list_t js_cv_constants{\n    JS_CONSTANT(CV_VERSION_MAJOR),\n    JS_CONSTANT(CV_VERSION_MINOR),\n    JS_CONSTANT(CV_VERSION_REVISION),\n    JS_CONSTANT(CV_CMP_EQ),\n    JS_CONSTANT(CV_CMP_GT),\n    JS_CONSTANT(CV_CMP_GE),\n    JS_CONSTANT(CV_CMP_LT),\n    JS_CONSTANT(CV_CMP_LE),\n    JS_CONSTANT(CV_CMP_NE),\n    JS_CONSTANT(CV_8U),\n    JS_CONSTANT(CV_8S),\n    JS_CONSTANT(CV_16U),\n    JS_CONSTANT(CV_16S),\n    JS_CONSTANT(CV_32S),\n    JS_CONSTANT(CV_32F),\n    JS_CONSTANT(CV_64F),\n    JS_CONSTANT(CV_8UC1),\n    JS_CONSTANT(CV_8UC2),\n    JS_CONSTANT(CV_8UC3),\n    JS_CONSTANT(CV_8UC4),\n    JS_CONSTANT(CV_8SC1),\n    JS_CONSTANT(CV_8SC2),\n    JS_CONSTANT(CV_8SC3),\n    JS_CONSTANT(CV_8SC4),\n    JS_CONSTANT(CV_16UC1),\n    JS_CONSTANT(CV_16UC2),\n    JS_CONSTANT(CV_16UC3),\n    JS_CONSTANT(CV_16UC4),\n    JS_CONSTANT(CV_16SC1),\n    JS_CONSTANT(CV_16SC2),\n    JS_CONSTANT(CV_16SC3),\n    JS_CONSTANT(CV_16SC4),\n    JS_CONSTANT(CV_32SC1),\n    JS_CONSTANT(CV_32SC2),\n    JS_CONSTANT(CV_32SC3),\n    JS_CONSTANT(CV_32SC4),\n    JS_CONSTANT(CV_32FC1),\n    JS_CONSTANT(CV_32FC2),\n    JS_CONSTANT(CV_32FC3),\n    JS_CONSTANT(CV_32FC4),\n    JS_CONSTANT(CV_64FC1),\n    JS_CONSTANT(CV_64FC2),\n    JS_CONSTANT(CV_64FC3),\n    JS_CONSTANT(CV_64FC4),\n    JS_CV_CONSTANT(NORM_HAMMING),\n    JS_CV_CONSTANT(NORM_HAMMING2),\n    JS_CV_CONSTANT(NORM_INF),\n    JS_CV_CONSTANT(NORM_L1),\n    JS_CV_CONSTANT(NORM_L2),\n    JS_CV_CONSTANT(NORM_L2SQR),\n    JS_CV_CONSTANT(NORM_MINMAX),\n    JS_CV_CONSTANT(NORM_RELATIVE),\n    JS_CV_CONSTANT(NORM_TYPE_MASK),\n    JS_CV_CONSTANT(COLOR_BGR2BGRA),\n    JS_CV_CONSTANT(COLOR_RGB2RGBA),\n    JS_CV_CONSTANT(COLOR_BGRA2BGR),\n    JS_CV_CONSTANT(COLOR_RGBA2RGB),\n    JS_CV_CONSTANT(COLOR_BGR2RGBA),\n    JS_CV_CONSTANT(COLOR_RGB2BGRA),\n    JS_CV_CONSTANT(COLOR_RGBA2BGR),\n    JS_CV_CONSTANT(COLOR_BGRA2RGB),\n    JS_CV_CONSTANT(COLOR_BGR2RGB),\n    JS_CV_CONSTANT(COLOR_RGB2BGR),\n    JS_CV_CONSTANT(COLOR_BGRA2RGBA),\n    JS_CV_CONSTANT(COLOR_RGBA2BGRA),\n    JS_CV_CONSTANT(COLOR_BGR2GRAY),\n    JS_CV_CONSTANT(COLOR_RGB2GRAY),\n    JS_CV_CONSTANT(COLOR_GRAY2BGR),\n    JS_CV_CONSTANT(COLOR_GRAY2RGB),\n    JS_CV_CONSTANT(COLOR_GRAY2BGRA),\n    JS_CV_CONSTANT(COLOR_GRAY2RGBA),\n    JS_CV_CONSTANT(COLOR_BGRA2GRAY),\n    JS_CV_CONSTANT(COLOR_RGBA2GRAY),\n    JS_CV_CONSTANT(COLOR_BGR2BGR565),\n    JS_CV_CONSTANT(COLOR_RGB2BGR565),\n    JS_CV_CONSTANT(COLOR_BGR5652BGR),\n    JS_CV_CONSTANT(COLOR_BGR5652RGB),\n    JS_CV_CONSTANT(COLOR_BGRA2BGR565),\n    JS_CV_CONSTANT(COLOR_RGBA2BGR565),\n    JS_CV_CONSTANT(COLOR_BGR5652BGRA),\n    JS_CV_CONSTANT(COLOR_BGR5652RGBA),\n    JS_CV_CONSTANT(COLOR_GRAY2BGR565),\n    JS_CV_CONSTANT(COLOR_BGR5652GRAY),\n    JS_CV_CONSTANT(COLOR_BGR2BGR555),\n    JS_CV_CONSTANT(COLOR_RGB2BGR555),\n    JS_CV_CONSTANT(COLOR_BGR5552BGR),\n    JS_CV_CONSTANT(COLOR_BGR5552RGB),\n    JS_CV_CONSTANT(COLOR_BGRA2BGR555),\n    JS_CV_CONSTANT(COLOR_RGBA2BGR555),\n    JS_CV_CONSTANT(COLOR_BGR5552BGRA),\n    JS_CV_CONSTANT(COLOR_BGR5552RGBA),\n    JS_CV_CONSTANT(COLOR_GRAY2BGR555),\n    JS_CV_CONSTANT(COLOR_BGR5552GRAY),\n    JS_CV_CONSTANT(COLOR_BGR2XYZ),\n    JS_CV_CONSTANT(COLOR_RGB2XYZ),\n    JS_CV_CONSTANT(COLOR_XYZ2BGR),\n    JS_CV_CONSTANT(COLOR_XYZ2RGB),\n    JS_CV_CONSTANT(COLOR_BGR2YCrCb),\n    JS_CV_CONSTANT(COLOR_RGB2YCrCb),\n    JS_CV_CONSTANT(COLOR_YCrCb2BGR),\n    JS_CV_CONSTANT(COLOR_YCrCb2RGB),\n    JS_CV_CONSTANT(COLOR_BGR2HSV),\n    JS_CV_CONSTANT(COLOR_RGB2HSV),\n    JS_CV_CONSTANT(COLOR_BGR2Lab),\n    JS_CV_CONSTANT(COLOR_RGB2Lab),\n    JS_CV_CONSTANT(COLOR_BGR2Luv),\n    JS_CV_CONSTANT(COLOR_RGB2Luv),\n    JS_CV_CONSTANT(COLOR_BGR2HLS),\n    JS_CV_CONSTANT(COLOR_RGB2HLS),\n    JS_CV_CONSTANT(COLOR_HSV2BGR),\n    JS_CV_CONSTANT(COLOR_HSV2RGB),\n    JS_CV_CONSTANT(COLOR_Lab2BGR),\n    JS_CV_CONSTANT(COLOR_Lab2RGB),\n    JS_CV_CONSTANT(COLOR_Luv2BGR),\n    JS_CV_CONSTANT(COLOR_Luv2RGB),\n    JS_CV_CONSTANT(COLOR_HLS2BGR),\n    JS_CV_CONSTANT(COLOR_HLS2RGB),\n    JS_CV_CONSTANT(COLOR_BGR2HSV_FULL),\n    JS_CV_CONSTANT(COLOR_RGB2HSV_FULL),\n    JS_CV_CONSTANT(COLOR_BGR2HLS_FULL),\n    JS_CV_CONSTANT(COLOR_RGB2HLS_FULL),\n    JS_CV_CONSTANT(COLOR_HSV2BGR_FULL),\n    JS_CV_CONSTANT(COLOR_HSV2RGB_FULL),\n    JS_CV_CONSTANT(COLOR_HLS2BGR_FULL),\n    JS_CV_CONSTANT(COLOR_HLS2RGB_FULL),\n    JS_CV_CONSTANT(COLOR_LBGR2Lab),\n    JS_CV_CONSTANT(COLOR_LRGB2Lab),\n    JS_CV_CONSTANT(COLOR_LBGR2Luv),\n    JS_CV_CONSTANT(COLOR_LRGB2Luv),\n    JS_CV_CONSTANT(COLOR_Lab2LBGR),\n    JS_CV_CONSTANT(COLOR_Lab2LRGB),\n    JS_CV_CONSTANT(COLOR_Luv2LBGR),\n    JS_CV_CONSTANT(COLOR_Luv2LRGB),\n    JS_CV_CONSTANT(COLOR_BGR2YUV),\n    JS_CV_CONSTANT(COLOR_RGB2YUV),\n    JS_CV_CONSTANT(COLOR_YUV2BGR),\n    JS_CV_CONSTANT(COLOR_YUV2RGB),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_NV12),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_NV12),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_NV21),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_NV21),\n    JS_CV_CONSTANT(COLOR_YUV420sp2RGB),\n    JS_CV_CONSTANT(COLOR_YUV420sp2BGR),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_NV12),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_NV12),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_NV21),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_NV21),\n    JS_CV_CONSTANT(COLOR_YUV420sp2RGBA),\n    JS_CV_CONSTANT(COLOR_YUV420sp2BGRA),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_YV12),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_YV12),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_IYUV),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_IYUV),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_I420),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_I420),\n    JS_CV_CONSTANT(COLOR_YUV420p2RGB),\n    JS_CV_CONSTANT(COLOR_YUV420p2BGR),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_YV12),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_YV12),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_IYUV),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_IYUV),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_I420),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_I420),\n    JS_CV_CONSTANT(COLOR_YUV420p2RGBA),\n    JS_CV_CONSTANT(COLOR_YUV420p2BGRA),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_420),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_NV21),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_NV12),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_YV12),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_IYUV),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_I420),\n    JS_CV_CONSTANT(COLOR_YUV420sp2GRAY),\n    JS_CV_CONSTANT(COLOR_YUV420p2GRAY),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_UYVY),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_UYVY),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_Y422),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_Y422),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_UYNV),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_UYNV),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_UYVY),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_UYVY),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_Y422),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_Y422),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_UYNV),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_UYNV),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_YUY2),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_YUY2),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_YVYU),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_YVYU),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_YUYV),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_YUYV),\n    JS_CV_CONSTANT(COLOR_YUV2RGB_YUNV),\n    JS_CV_CONSTANT(COLOR_YUV2BGR_YUNV),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_YUY2),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_YUY2),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_YVYU),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_YVYU),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_YUYV),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_YUYV),\n    JS_CV_CONSTANT(COLOR_YUV2RGBA_YUNV),\n    JS_CV_CONSTANT(COLOR_YUV2BGRA_YUNV),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_UYVY),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_YUY2),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_Y422),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_UYNV),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_YVYU),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_YUYV),\n    JS_CV_CONSTANT(COLOR_YUV2GRAY_YUNV),\n    JS_CV_CONSTANT(COLOR_RGBA2mRGBA),\n    JS_CV_CONSTANT(COLOR_mRGBA2RGBA),\n    JS_CV_CONSTANT(COLOR_RGB2YUV_I420),\n    JS_CV_CONSTANT(COLOR_BGR2YUV_I420),\n    JS_CV_CONSTANT(COLOR_RGB2YUV_IYUV),\n    JS_CV_CONSTANT(COLOR_BGR2YUV_IYUV),\n    JS_CV_CONSTANT(COLOR_RGBA2YUV_I420),\n    JS_CV_CONSTANT(COLOR_BGRA2YUV_I420),\n    JS_CV_CONSTANT(COLOR_RGBA2YUV_IYUV),\n    JS_CV_CONSTANT(COLOR_BGRA2YUV_IYUV),\n    JS_CV_CONSTANT(COLOR_RGB2YUV_YV12),\n    JS_CV_CONSTANT(COLOR_BGR2YUV_YV12),\n    JS_CV_CONSTANT(COLOR_RGBA2YUV_YV12),\n    JS_CV_CONSTANT(COLOR_BGRA2YUV_YV12),\n    JS_CV_CONSTANT(COLOR_BayerBG2BGR),\n    JS_CV_CONSTANT(COLOR_BayerGB2BGR),\n    JS_CV_CONSTANT(COLOR_BayerRG2BGR),\n    JS_CV_CONSTANT(COLOR_BayerGR2BGR),\n    JS_CV_CONSTANT(COLOR_BayerBG2RGB),\n    JS_CV_CONSTANT(COLOR_BayerGB2RGB),\n    JS_CV_CONSTANT(COLOR_BayerRG2RGB),\n    JS_CV_CONSTANT(COLOR_BayerGR2RGB),\n    JS_CV_CONSTANT(COLOR_BayerBG2GRAY),\n    JS_CV_CONSTANT(COLOR_BayerGB2GRAY),\n    JS_CV_CONSTANT(COLOR_BayerRG2GRAY),\n    JS_CV_CONSTANT(COLOR_BayerGR2GRAY),\n    JS_CV_CONSTANT(COLOR_BayerBG2BGR_VNG),\n    JS_CV_CONSTANT(COLOR_BayerGB2BGR_VNG),\n    JS_CV_CONSTANT(COLOR_BayerRG2BGR_VNG),\n    JS_CV_CONSTANT(COLOR_BayerGR2BGR_VNG),\n    JS_CV_CONSTANT(COLOR_BayerBG2RGB_VNG),\n    JS_CV_CONSTANT(COLOR_BayerGB2RGB_VNG),\n    JS_CV_CONSTANT(COLOR_BayerRG2RGB_VNG),\n    JS_CV_CONSTANT(COLOR_BayerGR2RGB_VNG),\n    JS_CV_CONSTANT(COLOR_BayerBG2BGR_EA),\n    JS_CV_CONSTANT(COLOR_BayerGB2BGR_EA),\n    JS_CV_CONSTANT(COLOR_BayerRG2BGR_EA),\n    JS_CV_CONSTANT(COLOR_BayerGR2BGR_EA),\n    JS_CV_CONSTANT(COLOR_BayerBG2RGB_EA),\n    JS_CV_CONSTANT(COLOR_BayerGB2RGB_EA),\n    JS_CV_CONSTANT(COLOR_BayerRG2RGB_EA),\n    JS_CV_CONSTANT(COLOR_BayerGR2RGB_EA),\n    JS_CV_CONSTANT(COLOR_BayerBG2BGRA),\n    JS_CV_CONSTANT(COLOR_BayerGB2BGRA),\n    JS_CV_CONSTANT(COLOR_BayerRG2BGRA),\n    JS_CV_CONSTANT(COLOR_BayerGR2BGRA),\n    JS_CV_CONSTANT(COLOR_BayerBG2RGBA),\n    JS_CV_CONSTANT(COLOR_BayerGB2RGBA),\n    JS_CV_CONSTANT(COLOR_BayerRG2RGBA),\n    JS_CV_CONSTANT(COLOR_BayerGR2RGBA),\n    JS_CV_CONSTANT(RETR_EXTERNAL),\n    JS_CV_CONSTANT(RETR_LIST),\n    JS_CV_CONSTANT(RETR_CCOMP),\n    JS_CV_CONSTANT(RETR_TREE),\n    JS_CV_CONSTANT(RETR_FLOODFILL),\n    JS_CV_CONSTANT(CHAIN_APPROX_NONE),\n    JS_CV_CONSTANT(CHAIN_APPROX_SIMPLE),\n    JS_CV_CONSTANT(CHAIN_APPROX_TC89_L1),\n    JS_CV_CONSTANT(CHAIN_APPROX_TC89_KCOS),\n    JS_CV_CONSTANT(BORDER_CONSTANT),\n    JS_CV_CONSTANT(BORDER_REPLICATE),\n    JS_CV_CONSTANT(BORDER_REFLECT),\n    JS_CV_CONSTANT(BORDER_WRAP),\n    JS_CV_CONSTANT(BORDER_REFLECT_101),\n    JS_CV_CONSTANT(BORDER_TRANSPARENT),\n    JS_CV_CONSTANT(BORDER_REFLECT101),\n    JS_CV_CONSTANT(BORDER_DEFAULT),\n    JS_CV_CONSTANT(BORDER_ISOLATED),\n    JS_CV_CONSTANT(THRESH_BINARY),\n    JS_CV_CONSTANT(THRESH_BINARY_INV),\n    JS_CV_CONSTANT(THRESH_TRUNC),\n    JS_CV_CONSTANT(THRESH_TOZERO),\n    JS_CV_CONSTANT(THRESH_TOZERO_INV),\n    JS_CV_CONSTANT(THRESH_MASK),\n    JS_CV_CONSTANT(THRESH_OTSU),\n    JS_CV_CONSTANT(THRESH_TRIANGLE),\n    JS_CV_CONSTANT(MORPH_RECT),\n    JS_CV_CONSTANT(MORPH_CROSS),\n    JS_CV_CONSTANT(MORPH_ELLIPSE),\n    JS_CV_CONSTANT(CAP_ANY),\n    JS_CV_CONSTANT(CAP_VFW),\n    JS_CV_CONSTANT(CAP_V4L),\n    JS_CV_CONSTANT(CAP_V4L2),\n    JS_CV_CONSTANT(CAP_FIREWIRE),\n    JS_CV_CONSTANT(CAP_FIREWARE),\n    JS_CV_CONSTANT(CAP_IEEE1394),\n    JS_CV_CONSTANT(CAP_DC1394),\n    JS_CV_CONSTANT(CAP_CMU1394),\n    JS_CV_CONSTANT(CAP_QT),\n    JS_CV_CONSTANT(CAP_UNICAP),\n    JS_CV_CONSTANT(CAP_DSHOW),\n    JS_CV_CONSTANT(CAP_PVAPI),\n    JS_CV_CONSTANT(CAP_OPENNI),\n    JS_CV_CONSTANT(CAP_OPENNI_ASUS),\n    JS_CV_CONSTANT(CAP_ANDROID),\n    JS_CV_CONSTANT(CAP_XIAPI),\n    JS_CV_CONSTANT(CAP_AVFOUNDATION),\n    JS_CV_CONSTANT(CAP_GIGANETIX),\n    JS_CV_CONSTANT(CAP_MSMF),\n    JS_CV_CONSTANT(CAP_WINRT),\n    JS_CV_CONSTANT(CAP_INTELPERC),\n    JS_CV_CONSTANT(CAP_OPENNI2),\n    JS_CV_CONSTANT(CAP_OPENNI2_ASUS),\n    JS_CV_CONSTANT(CAP_GPHOTO2),\n    JS_CV_CONSTANT(CAP_GSTREAMER),\n    JS_CV_CONSTANT(CAP_FFMPEG),\n    JS_CV_CONSTANT(CAP_IMAGES),\n    JS_CV_CONSTANT(CAP_ARAVIS),\n    JS_CV_CONSTANT(CAP_OPENCV_MJPEG),\n    JS_CV_CONSTANT(CAP_INTEL_MFX),\n    JS_CV_CONSTANT(CAP_XINE),\n    JS_CV_CONSTANT(CAP_PROP_POS_MSEC),\n    JS_CV_CONSTANT(CAP_PROP_POS_FRAMES),\n    JS_CV_CONSTANT(CAP_PROP_POS_AVI_RATIO),\n    JS_CV_CONSTANT(CAP_PROP_FRAME_WIDTH),\n    JS_CV_CONSTANT(CAP_PROP_FRAME_HEIGHT),\n    JS_CV_CONSTANT(CAP_PROP_FPS),\n    JS_CV_CONSTANT(CAP_PROP_FOURCC),\n    JS_CV_CONSTANT(CAP_PROP_FRAME_COUNT),\n    JS_CV_CONSTANT(CAP_PROP_FORMAT),\n    JS_CV_CONSTANT(CAP_PROP_MODE),\n    JS_CV_CONSTANT(CAP_PROP_BRIGHTNESS),\n    JS_CV_CONSTANT(CAP_PROP_CONTRAST),\n    JS_CV_CONSTANT(CAP_PROP_SATURATION),\n    JS_CV_CONSTANT(CAP_PROP_HUE),\n    JS_CV_CONSTANT(CAP_PROP_GAIN),\n    JS_CV_CONSTANT(CAP_PROP_EXPOSURE),\n    JS_CV_CONSTANT(CAP_PROP_CONVERT_RGB),\n    JS_CV_CONSTANT(CAP_PROP_WHITE_BALANCE_BLUE_U),\n    JS_CV_CONSTANT(CAP_PROP_RECTIFICATION),\n    JS_CV_CONSTANT(CAP_PROP_MONOCHROME),\n    JS_CV_CONSTANT(CAP_PROP_SHARPNESS),\n    JS_CV_CONSTANT(CAP_PROP_AUTO_EXPOSURE),\n    JS_CV_CONSTANT(CAP_PROP_GAMMA),\n    JS_CV_CONSTANT(CAP_PROP_TEMPERATURE),\n    JS_CV_CONSTANT(CAP_PROP_TRIGGER),\n    JS_CV_CONSTANT(CAP_PROP_TRIGGER_DELAY),\n    JS_CV_CONSTANT(CAP_PROP_WHITE_BALANCE_RED_V),\n    JS_CV_CONSTANT(CAP_PROP_ZOOM),\n    JS_CV_CONSTANT(CAP_PROP_FOCUS),\n    JS_CV_CONSTANT(CAP_PROP_GUID),\n    JS_CV_CONSTANT(CAP_PROP_ISO_SPEED),\n    JS_CV_CONSTANT(CAP_PROP_BACKLIGHT),\n    JS_CV_CONSTANT(CAP_PROP_PAN),\n    JS_CV_CONSTANT(CAP_PROP_TILT),\n    JS_CV_CONSTANT(CAP_PROP_ROLL),\n    JS_CV_CONSTANT(CAP_PROP_IRIS),\n    JS_CV_CONSTANT(CAP_PROP_SETTINGS),\n    JS_CV_CONSTANT(CAP_PROP_BUFFERSIZE),\n    JS_CV_CONSTANT(CAP_PROP_AUTOFOCUS),\n    JS_CV_CONSTANT(CAP_PROP_SAR_NUM),\n    JS_CV_CONSTANT(CAP_PROP_SAR_DEN),\n    JS_CV_CONSTANT(CAP_PROP_BACKEND),\n    JS_CV_CONSTANT(CAP_PROP_CHANNEL),\n    JS_CV_CONSTANT(CAP_PROP_AUTO_WB),\n    JS_CV_CONSTANT(CAP_PROP_WB_TEMPERATURE),\n    JS_CV_CONSTANT(CAP_PROP_CODEC_PIXEL_FORMAT),\n\n    JS_CV_CONSTANT(VIDEOWRITER_PROP_QUALITY),\n    JS_CV_CONSTANT(VIDEOWRITER_PROP_FRAMEBYTES),\n    JS_CV_CONSTANT(VIDEOWRITER_PROP_NSTRIPES),\n    // JS_CV_CONSTANT(VIDEOWRITER_PROP_IS_COLOR),\n\n    JS_CV_CONSTANT(FONT_HERSHEY_SIMPLEX),\n    JS_CV_CONSTANT(FONT_HERSHEY_PLAIN),\n    JS_CV_CONSTANT(FONT_HERSHEY_DUPLEX),\n    JS_CV_CONSTANT(FONT_HERSHEY_COMPLEX),\n    JS_CV_CONSTANT(FONT_HERSHEY_TRIPLEX),\n    JS_CV_CONSTANT(FONT_HERSHEY_COMPLEX_SMALL),\n    JS_CV_CONSTANT(FONT_HERSHEY_SCRIPT_SIMPLEX),\n    JS_CV_CONSTANT(FONT_HERSHEY_SCRIPT_COMPLEX),\n    JS_CV_CONSTANT(FONT_ITALIC),\n    JS_CONSTANT(HIER_NEXT),\n    JS_CONSTANT(HIER_PREV),\n    JS_CONSTANT(HIER_CHILD),\n    JS_CONSTANT(HIER_PARENT),\n    JS_CV_CONSTANT(HOUGH_STANDARD),\n    JS_CV_CONSTANT(HOUGH_PROBABILISTIC),\n    JS_CV_CONSTANT(HOUGH_MULTI_SCALE),\n    JS_CV_CONSTANT(HOUGH_GRADIENT),\n    JS_CV_CONSTANT(INTER_NEAREST),\n    JS_CV_CONSTANT(INTER_LINEAR),\n    JS_CV_CONSTANT(INTER_CUBIC),\n    JS_CV_CONSTANT(INTER_AREA),\n    JS_CV_CONSTANT(INTER_LANCZOS4),\n    JS_CV_CONSTANT(INTER_LINEAR_EXACT),\n    JS_CV_CONSTANT(INTER_MAX),\n    JS_CV_CONSTANT(CONTOURS_MATCH_I1),\n    JS_CV_CONSTANT(CONTOURS_MATCH_I2),\n    JS_CV_CONSTANT(CONTOURS_MATCH_I3),\n    JS_CV_CONSTANT(ACCESS_READ),\n    JS_CV_CONSTANT(ACCESS_WRITE),\n    JS_CV_CONSTANT(ACCESS_RW),\n    JS_CV_CONSTANT(ACCESS_MASK),\n    JS_CV_CONSTANT(ACCESS_FAST),\n    JS_CV_CONSTANT(USAGE_DEFAULT),\n    JS_CV_CONSTANT(USAGE_ALLOCATE_HOST_MEMORY),\n    JS_CV_CONSTANT(USAGE_ALLOCATE_DEVICE_MEMORY),\n    JS_CV_CONSTANT(USAGE_ALLOCATE_SHARED_MEMORY),\n    JS_CV_CONSTANT(IMREAD_UNCHANGED),\n    JS_CV_CONSTANT(IMREAD_GRAYSCALE),\n    JS_CV_CONSTANT(IMREAD_COLOR),\n    JS_CV_CONSTANT(IMREAD_ANYDEPTH),\n    JS_CV_CONSTANT(IMREAD_ANYCOLOR),\n    JS_CV_CONSTANT(IMREAD_LOAD_GDAL),\n    JS_CV_CONSTANT(IMREAD_REDUCED_GRAYSCALE_2),\n    JS_CV_CONSTANT(IMREAD_REDUCED_COLOR_2),\n    JS_CV_CONSTANT(IMREAD_REDUCED_GRAYSCALE_4),\n    JS_CV_CONSTANT(IMREAD_REDUCED_COLOR_4),\n    JS_CV_CONSTANT(IMREAD_REDUCED_GRAYSCALE_8),\n    JS_CV_CONSTANT(IMREAD_REDUCED_COLOR_8),\n    JS_CV_CONSTANT(IMREAD_IGNORE_ORIENTATION),\n\n    JS_CV_CONSTANT(IMWRITE_JPEG_QUALITY),\n    JS_CV_CONSTANT(IMWRITE_JPEG_PROGRESSIVE),\n    JS_CV_CONSTANT(IMWRITE_JPEG_OPTIMIZE),\n    JS_CV_CONSTANT(IMWRITE_JPEG_RST_INTERVAL),\n    JS_CV_CONSTANT(IMWRITE_JPEG_LUMA_QUALITY),\n    JS_CV_CONSTANT(IMWRITE_JPEG_CHROMA_QUALITY),\n    JS_CV_CONSTANT(IMWRITE_PNG_COMPRESSION),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY),\n    JS_CV_CONSTANT(IMWRITE_PNG_BILEVEL),\n    JS_CV_CONSTANT(IMWRITE_PXM_BINARY),\n    JS_CV_CONSTANT(IMWRITE_EXR_TYPE),\n    JS_CV_CONSTANT(IMWRITE_WEBP_QUALITY),\n    JS_CV_CONSTANT(IMWRITE_PAM_TUPLETYPE),\n    JS_CV_CONSTANT(IMWRITE_TIFF_RESUNIT),\n    JS_CV_CONSTANT(IMWRITE_TIFF_XDPI),\n    JS_CV_CONSTANT(IMWRITE_TIFF_YDPI),\n    JS_CV_CONSTANT(IMWRITE_TIFF_COMPRESSION),\n    JS_CV_CONSTANT(IMWRITE_JPEG2000_COMPRESSION_X1000),\n    JS_CV_CONSTANT(IMWRITE_EXR_TYPE_HALF),\n    JS_CV_CONSTANT(IMWRITE_EXR_TYPE_FLOAT),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY_DEFAULT),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY_FILTERED),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY_RLE),\n    JS_CV_CONSTANT(IMWRITE_PNG_STRATEGY_FIXED),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_NULL),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_BLACKANDWHITE),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_GRAYSCALE),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_RGB),\n    JS_CV_CONSTANT(IMWRITE_PAM_FORMAT_RGB_ALPHA),\n    JS_CV_CONSTANT(FILLED),\n    JS_CV_CONSTANT(LINE_8),\n    JS_CV_CONSTANT(LINE_AA),\n    JS_CV_CONSTANT(LSD_REFINE_NONE),\n    JS_CV_CONSTANT(LSD_REFINE_STD),\n    JS_CV_CONSTANT(LSD_REFINE_ADV),\n\n    JS_CV_CONSTANT(COLORMAP_AUTUMN),\n    JS_CV_CONSTANT(COLORMAP_BONE),\n    JS_CV_CONSTANT(COLORMAP_JET),\n    JS_CV_CONSTANT(COLORMAP_WINTER),\n    JS_CV_CONSTANT(COLORMAP_RAINBOW),\n    JS_CV_CONSTANT(COLORMAP_OCEAN),\n    JS_CV_CONSTANT(COLORMAP_SUMMER),\n    JS_CV_CONSTANT(COLORMAP_SPRING),\n    JS_CV_CONSTANT(COLORMAP_COOL),\n    JS_CV_CONSTANT(COLORMAP_HSV),\n    JS_CV_CONSTANT(COLORMAP_PINK),\n    JS_CV_CONSTANT(COLORMAP_HOT),\n    JS_CV_CONSTANT(COLORMAP_PARULA),\n    JS_CV_CONSTANT(COLORMAP_MAGMA),\n    JS_CV_CONSTANT(COLORMAP_INFERNO),\n    JS_CV_CONSTANT(COLORMAP_PLASMA),\n    JS_CV_CONSTANT(COLORMAP_VIRIDIS),\n    JS_CV_CONSTANT(COLORMAP_CIVIDIS),\n    JS_CV_CONSTANT(COLORMAP_TWILIGHT),\n    JS_CV_CONSTANT(COLORMAP_TWILIGHT_SHIFTED),\n    JS_CV_CONSTANT(COLORMAP_TURBO),\n    // JS_CV_CONSTANT(COLORMAP_DEEPGREEN),\n};\n\nextern \"C\" int\njs_cv_init(JSContext* ctx, JSModuleDef* m) {\n  JSAtom atom;\n  JSValue cvObj, g = JS_GetGlobalObject(ctx);\n  if(m) {\n    JS_SetModuleExportList(ctx, m, js_cv_static_funcs.data(), js_cv_static_funcs.size());\n    JS_SetModuleExportList(ctx, m, js_cv_constants.data(), js_cv_constants.size());\n  }\n\n  cv_class = JS_NewObject(ctx);\n  /* JS_SetPropertyFunctionList(ctx, cv_class, js_cv_static_funcs.data(), js_cv_static_funcs.size());\n  JS_SetPropertyFunctionList(ctx, cv_class, js_cv_constants.data(), js_cv_constants.size());\n  JS_SetModuleExport(ctx, m, \"default\", cv_class);*/\n\n  atom = JS_NewAtom(ctx, \"cv\");\n\n  /* if(JS_HasProperty(ctx, g, atom)) {\n     cvObj = JS_GetProperty(ctx, g, atom);\n   } else {\n     cvObj = JS_NewObject(ctx);\n }\n   JS_SetPropertyFunctionList(ctx, cvObj, js_cv_static_funcs.data(), js_cv_static_funcs.size());\n   JS_SetPropertyFunctionList(ctx, cvObj, js_cv_constants.data(), js_cv_constants.size());\n\n     if(!JS_HasProperty(ctx, g, atom)) {\n       JS_SetProperty(ctx, g, atom, cvObj);\n     }\n\n   JS_SetModuleExport(ctx, m, \"default\", cvObj);\n */\n  JS_FreeValue(ctx, g);\n  //  JS_FreeValue(ctx, cvObj);\n  return 0;\n}\n\nextern \"C\" VISIBLE void\njs_cv_export(JSContext* ctx, JSModuleDef* m) {\n  JS_AddModuleExportList(ctx, m, js_cv_static_funcs.data(), js_cv_static_funcs.size());\n  JS_AddModuleExportList(ctx, m, js_cv_constants.data(), js_cv_constants.size());\n  JS_AddModuleExport(ctx, m, \"default\");\n}\n\n#if defined(JS_CV_MODULE)\n#define JS_INIT_MODULE VISIBLE js_init_module\n#else\n#define JS_INIT_MODULE js_init_module_cv\n#endif\n\nextern \"C\" JSModuleDef*\nJS_INIT_MODULE(JSContext* ctx, const char* module_name) {\n  JSModuleDef* m;\n  m = JS_NewCModule(ctx, module_name, &js_cv_init);\n  if(!m)\n    return NULL;\n  js_cv_export(ctx, m);\n  return m;\n}\n",
			"file": "js_cv.cpp",
			"file_size": 53181,
			"file_write_time": 132660108742183065,
			"settings":
			{
				"buffer_size": 53183,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAEoDAAAAAAAASgMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEoDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"edut",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"",
				"Bookmarks: Clear All"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Package Control Settings"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 158.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/qjs-opencv",
		"/home/roman/Projects/qjs-opencv/build",
		"/home/roman/Projects/qjs-opencv/cmake",
		"/home/roman/Projects/qjs-opencv/scripts"
	],
	"file_history":
	[
		"/home/roman/.config/sublime-text/Packages/User/Themes/Zenburnesque.tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Monokai Octagon.tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Niji.tmTheme",
		"/home/roman/.config/sublime-text/Packages/User/Themes/MirodarkHighContrast.tmTheme",
		"/home/roman/Projects/qjs-opencv/js_imgproc.cpp",
		"/home/roman/.config/sublime-text-3/Packages/1337 Color Scheme/1337.tmTheme",
		"/home/roman/Projects/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/qjs-opencv/js_object.hpp",
		"/home/roman/Projects/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/qjs-opencv/tests/test_contours.js",
		"/home/roman/Projects/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/qjs-opencv/js_highgui.cpp",
		"/home/roman/Projects/qjs-opencv/js_rotated_rect.cpp",
		"/home/roman/Projects/qjs-opencv/js_rotated_rect.hpp",
		"/home/roman/Projects/qjs-opencv/js_size.hpp",
		"/home/roman/Projects/qjs-opencv/js_video_writer.cpp",
		"/home/roman/Projects/qjs-opencv/tests/test_video_writer.js",
		"/home/roman/Projects/qjs-opencv/tests/test_rotated_rect.js",
		"/home/roman/Projects/qjs-opencv/js_rect.hpp",
		"/home/roman/Projects/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/qjs-opencv/tests/test_linesegmentdetector.js",
		"/home/roman/Projects/qjs-opencv/js_line_segment_detector.cpp",
		"/home/roman/Projects/qjs-opencv/js_video_capture.cpp",
		"/home/roman/Sources/opencv/samples/cpp/videowriter_basic.cpp",
		"/home/roman/Sources/opencv/samples/cpp/videocapture_gstreamer_pipeline.cpp",
		"/home/roman/Projects/qjs-opencv/util.cpp",
		"/home/roman/Projects/qjs-opencv/util.hpp",
		"/home/roman/Projects/qjs-opencv/opencv-fns.txt",
		"/home/roman/Projects/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/qjs-opencv/js_fast_line_detector.cpp",
		"/home/roman/Projects/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/qjs-opencv/js_size.cpp",
		"/home/roman/Projects/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/qjs-opencv/init_module.cpp",
		"/home/roman/Projects/qjs-opencv/gmon.out",
		"/home/roman/Projects/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.cpp",
		"/home/roman/Projects/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/tests/test_fastlinedetector.js",
		"/home/roman/.config/sublime-text-3/Packages/DarkDonut Color Schemes/DarkDonut Forest Coders.sublime-color-scheme",
		"/home/roman/Projects/qjs-opencv/js_consts.hpp",
		"/home/roman/Sources/opencv/modules/imgproc/src/lsd.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_call_example.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_cmd.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_filterAngle.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_lines.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_opencv_cmd.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_opencv_example.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/src/lsd.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/src/lsd_opencv.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/src/lsd_wrap.cpp",
		"/home/roman/Projects/qjs-opencv/lsd/examples/lsd_wrap_cmd.cpp",
		"/home/roman/Projects/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/qjs-opencv/js_utility.cpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.cpp",
		"/home/roman/Projects/qjs-opencv/js_slice_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/qjs-opencv/js_typed_array.hpp",
		"/home/roman/Projects/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/CheckFlags.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/qjs-opencv/LICENSE",
		"/home/roman/Projects/qjs-opencv/js_alloc.hpp",
		"/home/roman/Projects/qjs-opencv/js.cpp",
		"/home/roman/Projects/qjs-opencv/js.hpp",
		"/home/roman/Projects/qjs-opencv/js_clahe.cpp",
		"/home/roman/Projects/qjs-opencv/cmake/CCache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/OpenCV.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/SDL2.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/ccache.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/functions.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/check-flags.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/glfw3Config.cmake",
		"/home/roman/Projects/qjs-opencv/geometry.cpp",
		"/home/roman/Projects/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/js-bindings.cmake",
		"/home/roman/Projects/qjs-opencv/color.cpp",
		"/home/roman/Projects/qjs-opencv/color.hpp",
		"/home/roman/Projects/qjs-opencv/cmake/opencv.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/sdl2-config.cmake",
		"/home/roman/Projects/qjs-opencv/cmake/FindGLFW.cmake",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Sources/opencv/modules/imgproc/src/drawing.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.cpp",
		"/home/roman/Projects/plot-cv/src/js_contour.hpp",
		"/home/roman/Projects/plot-cv/src/js_rect.cpp",
		"/home/roman/Projects/plot-cv/src/js_cv.cpp",
		"/home/roman/Projects/plot-cv/src/geometry.hpp",
		"/home/roman/Projects/plot-cv/src/js_array.hpp",
		"/home/roman/Projects/plot-cv/src/js_mat.cpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/src/pixel_neighborhood.hpp",
		"/home/roman/Projects/plot-cv/cvPipeline.js",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/cmake/highgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/js-bindings.cmake",
		"/home/roman/Projects/plot-cv/src/util.hpp",
		"/home/roman/Projects/plot-cv/src/png_write.hpp",
		"/home/roman/Projects/plot-cv/src/palette.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test-png++.cpp",
		"/home/roman/Projects/plot-cv/src/js_draw.cpp",
		"/home/roman/Projects/plot-cv/src/js_umat.hpp",
		"/home/roman/Projects/plot-cv/src/js_umat.cpp",
		"/home/roman/Projects/plot-cv/cmake/opencv.cmake",
		"/home/roman/Projects/plot-cv/src/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/src/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/src/js_clahe.cpp",
		"/home/roman/Projects/plot-cv/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/src/data.cpp",
		"/home/roman/Projects/plot-cv/src/js_slice_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/src/js_point.cpp",
		"/home/roman/Projects/plot-cv/src/js_mat.hpp"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
			"/home/roman/Projects/qjs-opencv,*.hpp,*.cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			">italic",
			">bold",
			"js_object",
			"_MOMENTS",
			"JS_DefineProperty",
			"\\(JSV",
			"from_sequence",
			"Hough",
			"HoughLines",
			"} from 'opencv';\nimport {",
			"MOMENTS",
			"_misc",
			"IMREAD_GRA",
			"IMREAD_",
			"is_numeric",
			"js_imgproc_transform",
			"warpAff",
			"js_imgproc_transform",
			"cv\\.",
			"VIDEOWRITER_PROP_FRAMEBYTES",
			"CAP_PROP_FRAME_COUNT",
			"open",
			"js_prop_flags",
			"\"split\"",
			"js_object",
			"ScaleAbs",
			"convertScale",
			"getAff",
			"cv_class",
			"highgui",
			"\"transform\"",
			"cv_class",
			"cv_gui",
			"js_cv",
			"_class",
			"cv_class",
			"WINDOW_",
			"js_cv_class",
			"js_rotated_rect_new",
			"JSRotatedRectData<double>",
			"js_point_data",
			"js_line_data",
			"borderValue",
			"JSColor",
			"js_imgproc_motion",
			"adaptiveThreshold",
			"\\&\\& JS_IsNum",
			"JS_IsNum",
			"\\*reinterpret_cast<cv::Scalar\\*>\\(&color\\)",
			"JSColor",
			"ellipse",
			"insertChannel",
			"OTHER_NORM",
			"JSValue>",
			"JSColorData",
			"js_color_new",
			"cvtCo",
			"js_cv_good_features_to_track",
			"imshow",
			"imshojw",
			"LSD_REFINE",
			"Canny",
			"HIER_NEXT",
			"JS_CV_CONSTANT",
			"JS_PROP_INT32_DEF",
			"cv::FastLineDetector",
			"LSD_",
			"enum",
			"js_contour_get",
			"PROP_X",
			"other\\.",
			"qjs-opencv-a",
			"quickjs-opencv",
			"make_js_bindings",
			"make_shared_module",
			"quickjs-opencv",
			"qjs-opencv",
			"TypedArrayProps",
			"ArrayBufferProps",
			"TypedArrayProps",
			"std::ranges::subrange<T>",
			"std::ranges",
			"js_mat_buffer",
			"ranges",
			"js_point_iterator_new",
			"ranges",
			"args",
			"CMAKE_C_FLAGS",
			"-DCXX",
			"js_size_mul",
			"object expe",
			"Rect object",
			"js_mat_free_func",
			"js_mat_buffer",
			"CAP_PROP",
			"CAP_",
			"js_size_read",
			"return ",
			"\"width",
			"js\\.",
			"js.is_array_like\\(",
			"js\\.",
			"js.is_bool",
			"js\\.",
			"js.get_boolean\\(",
			"js.get_number\\(",
			"js\\.",
			"jsrt",
			"/src",
			"COMPILE_FLAGS",
			"OPENCV_FOUND",
			"flags",
			"^#",
			"CMAKE_INSTALL_RPATH",
			"extern C",
			"PLOTCV",
			"PLOT",
			"}_MODULE",
			"src_program",
			"add_exec",
			"_MODULE",
			"JS_INIT_MODULE",
			"plot-cv",
			"js.hpp",
			"include\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			">normal",
			",",
			"js_imgproc_filter",
			"",
			"JSRotatedRectData",
			"js_imgproc_misc",
			"js_to_scalar(color)",
			"cv::ximgproc::FastLineDetector",
			"_",
			"qjs-opencv",
			"qjs-opencv-a",
			"quickjs-opencv",
			"range_view<T>",
			"CMAKE_CXX_FLAGS",
			"ret = ",
			"js_is_array_like(ctx, ",
			"JS_IsBool",
			"js_value_to(ctx, ",
			"extern \"C\""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": null,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "js_array.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19197,
						"regions":
						{
						},
						"selection":
						[
							[
								4053,
								4053
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2634.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js_imgproc.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60157,
						"regions":
						{
						},
						"selection":
						[
							[
								17017,
								17017
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9035.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js_cv.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53183,
						"regions":
						{
						},
						"selection":
						[
							[
								844,
								844
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "qjs-opencv.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"js_cv",
				"js_cv.cpp"
			],
			[
				"jsbin",
				"jsbindings.hpp"
			],
			[
				"js_rot",
				"js_rotated_rect.hpp"
			],
			[
				"js_im",
				"js_imgproc.cpp"
			],
			[
				"js_img",
				"js_imgproc.cpp"
			],
			[
				"test_ro",
				"tests/test_rotated_rect.js"
			],
			[
				"js_high",
				"js_highgui.cpp"
			],
			[
				"imgpr",
				"js_imgproc.cpp"
			],
			[
				"js_array",
				"js_array.hpp"
			],
			[
				"umat.h",
				"js_umat.hpp"
			],
			[
				"js_mat",
				"js_mat.cpp"
			],
			[
				"js_type",
				"js_typed_array.hpp"
			],
			[
				"jsbind",
				"jsbindings.hpp"
			],
			[
				"util.hpp",
				"util.hpp"
			],
			[
				"js_rc",
				"js_rect.cpp"
			],
			[
				"js_con",
				"js_contour.cpp"
			],
			[
				"js_lin",
				"js_line.cpp"
			],
			[
				"video",
				"js_video_capture.cpp"
			],
			[
				"js-bin",
				"cmake/js-bindings.cmake"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"wasi",
				"cmake/wasi.toolchain.cmake"
			],
			[
				"test-vid",
				"plot-cv/test-video.js"
			],
			[
				"cvPipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param",
				"plot-cv/param.js"
			],
			[
				"test-oencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_umat",
				"plot-cv/src/js_umat.hpp"
			],
			[
				"pixel_",
				"plot-cv/src/pixel_neighborhood.hpp"
			],
			[
				"test-opencv",
				"plot-cv/test-opencv.js"
			],
			[
				"js_typed",
				"plot-cv/src/js_typed_array.hpp"
			],
			[
				"opencv.cmake",
				"plot-cv/cmake/opencv.cmake"
			],
			[
				"test-vide",
				"plot-cv/test-video.js"
			],
			[
				"test-op",
				"plot-cv/test-opencv.js"
			],
			[
				"cvHigh",
				"plot-cv/cvHighGUI.js"
			],
			[
				"js.cpp",
				"plot-cv/src/js.cpp"
			],
			[
				"js_size",
				"plot-cv/src/js_size.hpp"
			],
			[
				"js_ma",
				"plot-cv/src/js_mat.cpp"
			],
			[
				"js_draw",
				"plot-cv/src/js_draw.cpp"
			],
			[
				"quickjs.h",
				"plot-cv/quickjs/quickjs.h"
			],
			[
				"test-open",
				"plot-cv/test-opencv.js"
			],
			[
				"js_cv.cp",
				"plot-cv/src/js_cv.cpp"
			],
			[
				"util.js",
				"plot-cv/lib/util.js"
			],
			[
				"cvpipe",
				"plot-cv/cvPipeline.js"
			],
			[
				"param.js",
				"plot-cv/param.js"
			],
			[
				"test-video",
				"plot-cv/test-video.js"
			],
			[
				"test_w",
				"plot-cv/test_worker_module.js"
			],
			[
				"test-wo",
				"plot-cv/test-worker.js"
			],
			[
				"cvPip",
				"plot-cv/cvPipeline.js"
			],
			[
				"worker",
				"plot-cv/worker.js"
			],
			[
				"worker.js",
				"plot-cv/worker.js"
			],
			[
				"test-work",
				"plot-cv/test-worker.js"
			],
			[
				"test-uma",
				"plot-cv/test-umat.js"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"quickjs.c",
				"plot-cv/quickjs/quickjs.c"
			],
			[
				"filesys",
				"plot-cv/lib/filesystem.js"
			],
			[
				"console",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"util",
				"plot-cv/lib/util.js"
			],
			[
				"bjson",
				"plot-cv/bjson.js"
			],
			[
				"ast-shel",
				"plot-cv/ast-shell.js"
			],
			[
				"clang-ast",
				"plot-cv/clang-ast.js"
			],
			[
				"clang-list",
				"plot-cv/clang-list.js"
			],
			[
				"test-bjs",
				"plot-cv/test-bjson.js"
			],
			[
				"repl.js",
				"plot-cv/repl.js"
			],
			[
				"clang-li",
				"plot-cv/clang-list.js"
			],
			[
				"clang-",
				"plot-cv/clang-ast.js"
			],
			[
				"ast-shell",
				"plot-cv/ast-shell.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"repl.j",
				"plot-cv/repl.js"
			],
			[
				"test-ecmascript2.js",
				"plot-cv/test-ecmascript2.js"
			],
			[
				"test-ecmascript.js",
				"plot-cv/test-ecmascript.js"
			],
			[
				"repl",
				"plot-cv/repl.js"
			],
			[
				"parser2",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"test-ecma",
				"plot-cv/test-ecmascript2.es"
			],
			[
				"test-parse",
				"plot-cv/test-parse.js"
			],
			[
				"grammar.js",
				"plot-cv/lib/parse/grammar.js"
			],
			[
				"terminal",
				"plot-cv/terminal.js"
			],
			[
				"test_lex",
				"plot-cv/quickjs/modules/tests/test_lexer.js"
			],
			[
				"test-ec",
				"plot-cv/test-ecmascript.js"
			],
			[
				"parser.js",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"printer.",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"estree",
				"plot-cv/lib/ecmascript/estree.js"
			],
			[
				"parser2.j",
				"plot-cv/lib/ecmascript/parser2.js"
			],
			[
				"tmp.js",
				"plot-cv/tmp.js"
			],
			[
				"test-util",
				"plot-cv/test-util.js"
			],
			[
				"printer",
				"plot-cv/lib/ecmascript/printer.js"
			],
			[
				"parser",
				"plot-cv/lib/ecmascript/parser.js"
			],
			[
				"repl.",
				"repl.js"
			],
			[
				"utils.h",
				"plot-cv/utils.h"
			],
			[
				"test-str",
				"plot-cv/quickjs/modules/test-str0.c"
			],
			[
				"property-en",
				"plot-cv/quickjs/modules/property-enumeration.h"
			],
			[
				"cutil",
				"plot-cv/quickjs/cutils.c"
			],
			[
				"quickjs-lex",
				"plot-cv/quickjs/modules/quickjs-lexer.c"
			],
			[
				"test-libre",
				"plot-cv/quickjs/modules/test-libregexp.c"
			],
			[
				"quickjs-in",
				"plot-cv/quickjs/modules/quickjs-internal.h"
			],
			[
				"consoleS",
				"plot-cv/lib/consoleSetup.js"
			],
			[
				"test-ed",
				"plot-cv/test-editline.js"
			],
			[
				"gl.js",
				"plot-cv/gl.js"
			],
			[
				"editline",
				"plot-cv/editline.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 300.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
